{"version":3,"sources":["webpack://@jupyterlab/application-top/./node_modules/proj4/lib/global.js","webpack://@jupyterlab/application-top/./node_modules/proj4/lib/constants/values.js","webpack://@jupyterlab/application-top/./node_modules/proj4/lib/constants/PrimeMeridian.js","webpack://@jupyterlab/application-top/./node_modules/proj4/lib/constants/units.js","webpack://@jupyterlab/application-top/./node_modules/proj4/lib/match.js","webpack://@jupyterlab/application-top/./node_modules/proj4/lib/projString.js","webpack://@jupyterlab/application-top/./node_modules/wkt-parser/parser.js","webpack://@jupyterlab/application-top/./node_modules/wkt-parser/process.js","webpack://@jupyterlab/application-top/./node_modules/wkt-parser/index.js","webpack://@jupyterlab/application-top/./node_modules/proj4/lib/defs.js","webpack://@jupyterlab/application-top/./node_modules/proj4/lib/parseCode.js","webpack://@jupyterlab/application-top/./node_modules/proj4/lib/extend.js","webpack://@jupyterlab/application-top/./node_modules/proj4/lib/common/msfnz.js","webpack://@jupyterlab/application-top/./node_modules/proj4/lib/common/sign.js","webpack://@jupyterlab/application-top/./node_modules/proj4/lib/common/adjust_lon.js","webpack://@jupyterlab/application-top/./node_modules/proj4/lib/common/tsfnz.js","webpack://@jupyterlab/application-top/./node_modules/proj4/lib/common/phi2z.js","webpack://@jupyterlab/application-top/./node_modules/proj4/lib/projections/merc.js","webpack://@jupyterlab/application-top/./node_modules/proj4/lib/projections/longlat.js","webpack://@jupyterlab/application-top/./node_modules/proj4/lib/projections.js","webpack://@jupyterlab/application-top/./node_modules/proj4/lib/constants/Ellipsoid.js","webpack://@jupyterlab/application-top/./node_modules/proj4/lib/deriveConstants.js","webpack://@jupyterlab/application-top/./node_modules/proj4/lib/constants/Datum.js","webpack://@jupyterlab/application-top/./node_modules/proj4/lib/datum.js","webpack://@jupyterlab/application-top/./node_modules/proj4/lib/nadgrid.js","webpack://@jupyterlab/application-top/./node_modules/proj4/lib/Proj.js","webpack://@jupyterlab/application-top/./node_modules/proj4/lib/datumUtils.js","webpack://@jupyterlab/application-top/./node_modules/proj4/lib/datum_transform.js","webpack://@jupyterlab/application-top/./node_modules/proj4/lib/adjust_axis.js","webpack://@jupyterlab/application-top/./node_modules/proj4/lib/common/toPoint.js","webpack://@jupyterlab/application-top/./node_modules/proj4/lib/checkSanity.js","webpack://@jupyterlab/application-top/./node_modules/proj4/lib/transform.js","webpack://@jupyterlab/application-top/./node_modules/proj4/lib/core.js","webpack://@jupyterlab/application-top/./node_modules/mgrs/mgrs.js","webpack://@jupyterlab/application-top/./node_modules/proj4/lib/Point.js","webpack://@jupyterlab/application-top/./node_modules/proj4/lib/common/pj_enfn.js","webpack://@jupyterlab/application-top/./node_modules/proj4/lib/common/pj_mlfn.js","webpack://@jupyterlab/application-top/./node_modules/proj4/lib/common/pj_inv_mlfn.js","webpack://@jupyterlab/application-top/./node_modules/proj4/lib/projections/tmerc.js","webpack://@jupyterlab/application-top/./node_modules/proj4/lib/common/sinh.js","webpack://@jupyterlab/application-top/./node_modules/proj4/lib/common/hypot.js","webpack://@jupyterlab/application-top/./node_modules/proj4/lib/common/log1py.js","webpack://@jupyterlab/application-top/./node_modules/proj4/lib/common/asinhy.js","webpack://@jupyterlab/application-top/./node_modules/proj4/lib/common/gatg.js","webpack://@jupyterlab/application-top/./node_modules/proj4/lib/common/clens.js","webpack://@jupyterlab/application-top/./node_modules/proj4/lib/common/cosh.js","webpack://@jupyterlab/application-top/./node_modules/proj4/lib/common/clens_cmplx.js","webpack://@jupyterlab/application-top/./node_modules/proj4/lib/projections/etmerc.js","webpack://@jupyterlab/application-top/./node_modules/proj4/lib/common/adjust_zone.js","webpack://@jupyterlab/application-top/./node_modules/proj4/lib/projections/utm.js","webpack://@jupyterlab/application-top/./node_modules/proj4/lib/common/srat.js","webpack://@jupyterlab/application-top/./node_modules/proj4/lib/projections/gauss.js","webpack://@jupyterlab/application-top/./node_modules/proj4/lib/projections/sterea.js","webpack://@jupyterlab/application-top/./node_modules/proj4/lib/projections/stere.js","webpack://@jupyterlab/application-top/./node_modules/proj4/lib/projections/somerc.js","webpack://@jupyterlab/application-top/./node_modules/proj4/lib/projections/omerc.js","webpack://@jupyterlab/application-top/./node_modules/proj4/lib/projections/lcc.js","webpack://@jupyterlab/application-top/./node_modules/proj4/lib/projections/krovak.js","webpack://@jupyterlab/application-top/./node_modules/proj4/lib/common/mlfn.js","webpack://@jupyterlab/application-top/./node_modules/proj4/lib/common/e0fn.js","webpack://@jupyterlab/application-top/./node_modules/proj4/lib/common/e1fn.js","webpack://@jupyterlab/application-top/./node_modules/proj4/lib/common/e2fn.js","webpack://@jupyterlab/application-top/./node_modules/proj4/lib/common/e3fn.js","webpack://@jupyterlab/application-top/./node_modules/proj4/lib/common/gN.js","webpack://@jupyterlab/application-top/./node_modules/proj4/lib/common/adjust_lat.js","webpack://@jupyterlab/application-top/./node_modules/proj4/lib/common/imlfn.js","webpack://@jupyterlab/application-top/./node_modules/proj4/lib/projections/cass.js","webpack://@jupyterlab/application-top/./node_modules/proj4/lib/common/qsfnz.js","webpack://@jupyterlab/application-top/./node_modules/proj4/lib/projections/laea.js","webpack://@jupyterlab/application-top/./node_modules/proj4/lib/common/asinz.js","webpack://@jupyterlab/application-top/./node_modules/proj4/lib/projections/aea.js","webpack://@jupyterlab/application-top/./node_modules/proj4/lib/projections/gnom.js","webpack://@jupyterlab/application-top/./node_modules/proj4/lib/common/iqsfnz.js","webpack://@jupyterlab/application-top/./node_modules/proj4/lib/projections/cea.js","webpack://@jupyterlab/application-top/./node_modules/proj4/lib/projections/eqc.js","webpack://@jupyterlab/application-top/./node_modules/proj4/lib/projections/poly.js","webpack://@jupyterlab/application-top/./node_modules/proj4/lib/projections/nzmg.js","webpack://@jupyterlab/application-top/./node_modules/proj4/lib/projections/mill.js","webpack://@jupyterlab/application-top/./node_modules/proj4/lib/projections/sinu.js","webpack://@jupyterlab/application-top/./node_modules/proj4/lib/projections/moll.js","webpack://@jupyterlab/application-top/./node_modules/proj4/lib/projections/eqdc.js","webpack://@jupyterlab/application-top/./node_modules/proj4/lib/projections/vandg.js","webpack://@jupyterlab/application-top/./node_modules/proj4/lib/projections/aeqd.js","webpack://@jupyterlab/application-top/./node_modules/proj4/lib/projections/ortho.js","webpack://@jupyterlab/application-top/./node_modules/proj4/lib/projections/qsc.js","webpack://@jupyterlab/application-top/./node_modules/proj4/lib/projections/robin.js","webpack://@jupyterlab/application-top/./node_modules/proj4/lib/projections/geocent.js","webpack://@jupyterlab/application-top/./node_modules/proj4/lib/projections/tpers.js","webpack://@jupyterlab/application-top/./node_modules/proj4/projs.js","webpack://@jupyterlab/application-top/./node_modules/proj4/lib/index.js"],"names":["defs","WGS84","GOOGLE","PJD_3PARAM","PJD_7PARAM","PJD_GRIDSHIFT","PJD_WGS84","PJD_NODATUM","SRS_WGS84_SEMIMAJOR","SRS_WGS84_SEMIMINOR","SRS_WGS84_ESQUARED","SEC_TO_RAD","HALF_PI","Math","PI","SIXTH","RA4","RA6","EPSLN","D2R","R2D","FORTPI","TWO_PI","SPI","greenwich","lisbon","paris","bogota","madrid","rome","bern","jakarta","ferro","brussels","stockholm","athens","oslo","ft","to_meter","ignoredChar","match","obj","key","keys","Object","lkey","toLowerCase","replace","i","testkey","processedKey","length","defData","self","paramObj","split","map","v","trim","filter","a","reduce","p","push","paramName","paramVal","paramOutname","params","proj","datum","rf","parseFloat","lat_0","lat0","lat_1","lat1","lat_2","lat2","lat_ts","lon_0","long0","lon_1","long1","lon_2","long2","alpha","gamma","rectified_grid_angle","lonc","longc","x_0","x0","y_0","y0","k_0","k0","k","b","r_a","R_A","zone","parseInt","south","utmSouth","towgs84","datum_params","units","unit","from_greenwich","pm","nadgrids","datumCode","axis","legalAxis","indexOf","substr","approx","NEUTRAL","KEYWORD","NUMBER","QUOTED","AFTERQUOTE","ENDED","whitespace","latin","keyword","endThings","digets","Parser","text","Error","this","level","place","root","stack","currentObject","state","prototype","readCharicter","char","test","neutral","quoted","afterquote","number","word","afterItem","pop","newObjects","output","parseString","txt","parser","mapit","value","Array","isArray","unshift","thing","out","newObj","item","sExpr","shift","name","convert","rename","outName","inName","d2r","input","cleanWKT","wkt","type","projName","local","PROJECTION","AXIS","axisOrder","ii","descriptor","UNIT","DATUM","SPHEROID","geogcs","GEOGCS","slice","sphere","ellps","TOWGS84","isFinite","toMeter","ratio","renamer","list","forEach","lisp","that","arguments","def","charAt","apply","EPSG","ESRI","IAU2000","console","log","global","testObj","code","testDef","codeWords","testWKT","some","codes","checkMercator","auth","checkProjStr","ext","testProj","parse","maybeProjStr","destination","source","property","undefined","eccent","sinphi","cosphi","con","sqrt","x","abs","sign","phi","com","pow","tan","ts","eccnth","dphi","atan","sin","init","es","e","cos","msfnz","forward","lon","lat","y","adjust_lon","tsfnz","inverse","exp","phi2z","names","identity","pt","projs","merc","longlat","projStore","add","len","n","get","start","MERIT","ellipseName","SGS85","GRS80","IAU76","airy","APL4","NWL9D","mod_airy","andrae","aust_SA","GRS67","bessel","bess_nam","clrk66","clrk80","clrk58","CPM","delmbr","engelis","evrst30","evrst48","evrst56","evrst69","evrstSS","fschr60","fschr60m","fschr68","helmert","hough","intl","kaula","lerch","mprts","new_intl","plessis","krass","SEasia","walbeck","WGS60","WGS66","WGS7","eccentricity","a2","b2","ep2","ellipse","wgs84","datumName","ch1903","ggrs87","nad83","nad27","potsdam","carthage","hermannskogel","osni52","ire65","rassadiran","nzgd49","osgb36","s_jtsk","beduaram","gunung_segara","rnb72","datum_type","grids","loadedNadgrids","nadgrid","data","view","DataView","isLittleEndian","detectLittleEndian","header","readHeader","nSubgrids","subgrids","readSubgrids","getNadgrids","parseNadgridString","optional","mandatory","grid","isNull","secondsToRadians","seconds","nFields","getInt32","warn","nSubgridFields","shiftType","decodeString","fromSemiMajorAxis","getFloat64","fromSemiMinorAxis","toSemiMajorAxis","toSemiMinorAxis","end","String","fromCharCode","Uint8Array","buffer","gridOffset","subHeader","readGridHeader","nodes","readGridNodes","lngColumnCount","round","upperLongitude","lowerLongitude","longitudeInterval","latColumnCount","upperLatitude","lowerLatitude","latitudeInterval","ll","del","lim","count","gridNodeCount","cvs","mapNodes","r","longitudeShift","latitudeShift","offset","parent","gridHeader","nodesOffset","gridRecordLength","gridShiftRecords","record","getFloat32","latitudeAccuracy","longitudeAccuracy","Projection","srsCode","callback","error","json","parseCode","ourProj","projections","datumDef","sphere_","ecc","datumObj","extend","compareDatums","dest","geodeticToGeocentric","Longitude","Latitude","Height","z","Rn","Sin_Lat","Sin2_Lat","Cos_Lat","Infinity","geocentricToGeodetic","genau","genau2","maxiter","P","RR","CT","ST","RX","RK","RN","CPHI0","SPHI0","CPHI","SPHI","SDPHI","iter","X","Y","Z","atan2","geocentricToWgs84","Dx_BF","Dy_BF","Dz_BF","Rx_BF","Ry_BF","Rz_BF","M_BF","geocentricFromWgs84","x_tmp","y_tmp","z_tmp","checkParams","point","source_a","source_es","gridShiftCode","applyGridShift","dest_a","dest_b","dest_es","destGridShiftResult","Number","NaN","onlyMandatoryGrids","attemptedGrids","subgrid","epsilon","minX","minY","maxX","maxY","applySubgridShift","isNaN","pin","ct","val","tb","t","nadInterpolate","tol","dif","indx","floor","frct","inx","f00","f10","f11","f01","m11","m10","m00","m01","crs","denorm","xin","yin","zin","array","m","checkCoord","num","TypeError","checkNotWGS","transform","toPoint","checkSanity","adjust_axis","datum_transform","transformer","from","to","coords","transformedArray","concat","splice","checkProj","oProj","proj4","fromProj","toProj","coord","single","NUM_100K_SETS","SET_ORIGIN_COLUMN_LETTERS","SET_ORIGIN_ROW_LETTERS","A","I","O","V","accuracy","encode","LLtoUTM","mgrs","bbox","UTMtoLL","decode","toUpperCase","left","bottom","right","top","degToRad","deg","radToDeg","rad","Lat","Long","eccSquared","LongOrigin","eccPrimeSquared","N","T","C","M","LatRad","LongRad","LongOriginRad","ZoneNumber","UTMEasting","UTMNorthing","northing","easting","zoneNumber","zoneLetter","getLetterDesignator","utm","e1","N1","T1","C1","R1","D","mu","phi1Rad","result","topRight","LetterDesignator","seasting","snorthing","get100kID","setParm","get100kSetForZone","setColumn","setRow","getLetter100kID","column","row","parm","index","colOrigin","charCodeAt","rowOrigin","colInt","rowInt","rollover","twoLetter","mgrsString","hunK","sb","testChar","substring","set","east100k","getEastingFromChar","north100k","getNorthingFromChar","getMinNorthing","remainder","sep","sepEasting","sepNorthing","accuracyBonus","sepEastingString","sepNorthingString","curCol","eastingValue","rewindMarker","curRow","northingValue","Point","fromMGRS","mgrsStr","toMGRS","C00","C02","C04","C06","C08","C22","C44","C46","C48","C66","C68","C88","en","sphi","cphi","MAX_ITER","arg","s","pj_mlfn","pj_enfn","ml0","delta_lon","sin_phi","cos_phi","acos","al","als","c","cs","tq","ml","f","g","temp","h","asin","pj_inv_mlfn","tan_phi","d","ds","max","min","log1py","hypot","pp","B","cos_2B","h1","h2","arg_r","hr1","hr2","hr","arg_i","sin_arg_r","cos_arg_r","sinh_arg_i","sinh","cosh_arg_i","cosh","j","hi1","hi","hi2","tmerc","cgb","cbg","utg","gtu","np","Qn","gatg","Zb","clens","Ce","Cn","sin_Cn","cos_Cn","sin_Ce","cos_Ce","asinhy","tmp","clens_cmplx","dependsOn","adjust_zone","etmerc","esinp","rc","phic0","ratexp","K","srat","DEL_TOL","gauss","sinc0","cosc0","R2","title","sinc","cosc","cosl","rho","ssfn_","phit","eccen","coslat0","sinlat0","cons","ms1","X0","cosX0","sinX0","sinlat","coslat","sinX","cosX","rh","dlon","ce","Chi","phy0","lambda0","sinPhy0","semiMajorAxis","invF","flattening","e2","R","b0","k1","k2","k3","Sa1","Sa2","S","rotI","rotB","lambda","phy","prevPhy","iteration","TOL","isTypeA","typeAProjections","projectionName","cosph0","F","H","L","sinph0","J","gamma0","lamc","lam1","lam2","phi1","phi2","alpha_c","AB","no_off","no_rot","alp","gam","one_es","E","lam0","pi","singam","cosgam","sinrot","cosrot","rB","ArB","BrA","u_0","v_pole_n","v_pole_s","U","W","u","Qp","Sp","Tp","Vp","Up","sin1","cos1","ts1","sin2","cos2","ms2","ts2","ts0","ns","f0","rh1","theta","s45","s90","fi0","alfa","uq","u0","n0","s0","ro0","ad","gfi","deltav","eps","ro","czech","fi1","ok","e0","e3","e0fn","e1fn","e2fn","e3fn","mlfn","lam","nl","gN","tl","asq","cl","dd","ml1","imlfn","nl1","rl1","tl1","dl","dsq","adjust_lat","S_POLE","N_POLE","EQUIT","OBLIQ","mode","qp","qsfnz","mmf","apa","authset","rq","xmf","ymf","sinb1","cosb1","coslam","sinlam","q","sinb","cosb","cCe","sCe","ab","cosz","sinz","authlat","P00","P01","P02","P10","P11","P20","APA","beta","sin_po","cos_po","t1","qs1","t2","qs2","t3","qs0","ns0","qs","phi1z","asinz","eccnts","sin_p14","cos_p14","infinity_dist","coslon","ksp","iqsfnz","dlat","el","bl","tanphi","mln","mlnp","ma","iterations","B_re","B_im","C_re","C_im","delta_lat","d_phi","d_lambda","d_phi_n","d_psi","th_re","th_im","th_n_re","th_n_im","th_n_re1","th_n_im1","z_re","z_im","delta_x","delta_y","z_n_re","z_n_im","z_n_re1","z_n_im1","num_re","num_im","den_re","den_im","den2","d_psi_n","C_y","C_x","delta_theta","ml2","sinth","costh","gsq","msq","xx","yy","xys","c1","c2","c3","a1","m1","th1","sin_p12","cos_p12","Mlp","Ml","Nl1","Nl","psi","Az","G","GH","Hs","kp","cos_c","s2","s3","s4","s5","cosAz","Ee","sinpsi","FACE_ENUM","FRONT","RIGHT","BACK","LEFT","TOP","BOTTOM","AREA_ENUM","AREA_0","AREA_1","AREA_2","AREA_3","face","one_minus_f","one_minus_f_squared","xy","area","sinlon","qsc_shift_lon_origin","qsc_fwd_equat_face_theta","lp","nu","cosmu","tannu","tantheta","invert_sign","xa","slon","COEFS_X","COEFS_Y","FXC","FYC","RC1","NODES","poly3_val","coefs","poly3_der","newton_rapshon","f_df","max_err","iters","upd","azi","degrees","tilt","bind","pn1","rp","pfact","omega","cg","sg","cw","sw","yt","ba","bm","bq","Proj","sterea","stere","somerc","omerc","lcc","krovak","cass","laea","aea","gnom","cea","eqc","poly","nzmg","mill","sinu","moll","eqdc","vandg","aeqd","ortho","qsc","robin","geocent","tpers"],"mappings":"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","file":"6280.0f1514e4ea2967a590cb.js?v=0f1514e4ea2967a590cb","sourcesContent":["export default function(defs) {\n  defs('EPSG:4326', \"+title=WGS 84 (long/lat) +proj=longlat +ellps=WGS84 +datum=WGS84 +units=degrees\");\n  defs('EPSG:4269', \"+title=NAD83 (long/lat) +proj=longlat +a=6378137.0 +b=6356752.31414036 +ellps=GRS80 +datum=NAD83 +units=degrees\");\n  defs('EPSG:3857', \"+title=WGS 84 / Pseudo-Mercator +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs\");\n\n  defs.WGS84 = defs['EPSG:4326'];\n  defs['EPSG:3785'] = defs['EPSG:3857']; // maintain backward compat, official code is 3857\n  defs.GOOGLE = defs['EPSG:3857'];\n  defs['EPSG:900913'] = defs['EPSG:3857'];\n  defs['EPSG:102113'] = defs['EPSG:3857'];\n}\n","export var PJD_3PARAM = 1;\nexport var PJD_7PARAM = 2;\nexport var PJD_GRIDSHIFT = 3;\nexport var PJD_WGS84 = 4; // WGS84 or equivalent\nexport var PJD_NODATUM = 5; // WGS84 or equivalent\nexport var SRS_WGS84_SEMIMAJOR = 6378137.0;  // only used in grid shift transforms\nexport var SRS_WGS84_SEMIMINOR = 6356752.314;  // only used in grid shift transforms\nexport var SRS_WGS84_ESQUARED = 0.0066943799901413165; // only used in grid shift transforms\nexport var SEC_TO_RAD = 4.84813681109535993589914102357e-6;\nexport var HALF_PI = Math.PI/2;\n// ellipoid pj_set_ell.c\nexport var SIXTH = 0.1666666666666666667;\n/* 1/6 */\nexport var RA4 = 0.04722222222222222222;\n/* 17/360 */\nexport var RA6 = 0.02215608465608465608;\nexport var EPSLN = 1.0e-10;\n// you'd think you could use Number.EPSILON above but that makes\n// Mollweide get into an infinate loop.\n\nexport var D2R = 0.01745329251994329577;\nexport var R2D = 57.29577951308232088;\nexport var FORTPI = Math.PI/4;\nexport var TWO_PI = Math.PI * 2;\n// SPI is slightly greater than Math.PI, so values that exceed the -180..180\n// degree range by a tiny amount don't get wrapped. This prevents points that\n// have drifted from their original location along the 180th meridian (due to\n// floating point error) from changing their sign.\nexport var SPI = 3.14159265359;\n","var exports = {};\nexport {exports as default};\n\nexports.greenwich = 0.0; //\"0dE\",\nexports.lisbon = -9.131906111111; //\"9d07'54.862\\\"W\",\nexports.paris = 2.337229166667; //\"2d20'14.025\\\"E\",\nexports.bogota = -74.080916666667; //\"74d04'51.3\\\"W\",\nexports.madrid = -3.687938888889; //\"3d41'16.58\\\"W\",\nexports.rome = 12.452333333333; //\"12d27'8.4\\\"E\",\nexports.bern = 7.439583333333; //\"7d26'22.5\\\"E\",\nexports.jakarta = 106.807719444444; //\"106d48'27.79\\\"E\",\nexports.ferro = -17.666666666667; //\"17d40'W\",\nexports.brussels = 4.367975; //\"4d22'4.71\\\"E\",\nexports.stockholm = 18.058277777778; //\"18d3'29.8\\\"E\",\nexports.athens = 23.7163375; //\"23d42'58.815\\\"E\",\nexports.oslo = 10.722916666667; //\"10d43'22.5\\\"E\"\n","export default {\n  ft: {to_meter: 0.3048},\n  'us-ft': {to_meter: 1200 / 3937}\n};\n","var ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nexport default function match(obj, key) {\n  if (obj[key]) {\n    return obj[key];\n  }\n  var keys = Object.keys(obj);\n  var lkey = key.toLowerCase().replace(ignoredChar, '');\n  var i = -1;\n  var testkey, processedKey;\n  while (++i < keys.length) {\n    testkey = keys[i];\n    processedKey = testkey.toLowerCase().replace(ignoredChar, '');\n    if (processedKey === lkey) {\n      return obj[testkey];\n    }\n  }\n}\n","import {D2R} from './constants/values';\nimport PrimeMeridian from './constants/PrimeMeridian';\nimport units from './constants/units';\nimport match from './match';\n\nexport default function(defData) {\n  var self = {};\n  var paramObj = defData.split('+').map(function(v) {\n    return v.trim();\n  }).filter(function(a) {\n    return a;\n  }).reduce(function(p, a) {\n    var split = a.split('=');\n    split.push(true);\n    p[split[0].toLowerCase()] = split[1];\n    return p;\n  }, {});\n  var paramName, paramVal, paramOutname;\n  var params = {\n    proj: 'projName',\n    datum: 'datumCode',\n    rf: function(v) {\n      self.rf = parseFloat(v);\n    },\n    lat_0: function(v) {\n      self.lat0 = v * D2R;\n    },\n    lat_1: function(v) {\n      self.lat1 = v * D2R;\n    },\n    lat_2: function(v) {\n      self.lat2 = v * D2R;\n    },\n    lat_ts: function(v) {\n      self.lat_ts = v * D2R;\n    },\n    lon_0: function(v) {\n      self.long0 = v * D2R;\n    },\n    lon_1: function(v) {\n      self.long1 = v * D2R;\n    },\n    lon_2: function(v) {\n      self.long2 = v * D2R;\n    },\n    alpha: function(v) {\n      self.alpha = parseFloat(v) * D2R;\n    },\n    gamma: function(v) {\n      self.rectified_grid_angle = parseFloat(v);\n    },\n    lonc: function(v) {\n      self.longc = v * D2R;\n    },\n    x_0: function(v) {\n      self.x0 = parseFloat(v);\n    },\n    y_0: function(v) {\n      self.y0 = parseFloat(v);\n    },\n    k_0: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    k: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    a: function(v) {\n      self.a = parseFloat(v);\n    },\n    b: function(v) {\n      self.b = parseFloat(v);\n    },\n    r_a: function() {\n      self.R_A = true;\n    },\n    zone: function(v) {\n      self.zone = parseInt(v, 10);\n    },\n    south: function() {\n      self.utmSouth = true;\n    },\n    towgs84: function(v) {\n      self.datum_params = v.split(\",\").map(function(a) {\n        return parseFloat(a);\n      });\n    },\n    to_meter: function(v) {\n      self.to_meter = parseFloat(v);\n    },\n    units: function(v) {\n      self.units = v;\n      var unit = match(units, v);\n      if (unit) {\n        self.to_meter = unit.to_meter;\n      }\n    },\n    from_greenwich: function(v) {\n      self.from_greenwich = v * D2R;\n    },\n    pm: function(v) {\n      var pm = match(PrimeMeridian, v);\n      self.from_greenwich = (pm ? pm : parseFloat(v)) * D2R;\n    },\n    nadgrids: function(v) {\n      if (v === '@null') {\n        self.datumCode = 'none';\n      }\n      else {\n        self.nadgrids = v;\n      }\n    },\n    axis: function(v) {\n      var legalAxis = \"ewnsud\";\n      if (v.length === 3 && legalAxis.indexOf(v.substr(0, 1)) !== -1 && legalAxis.indexOf(v.substr(1, 1)) !== -1 && legalAxis.indexOf(v.substr(2, 1)) !== -1) {\n        self.axis = v;\n      }\n    },\n    approx: function() {\n      self.approx = true;\n    }\n  };\n  for (paramName in paramObj) {\n    paramVal = paramObj[paramName];\n    if (paramName in params) {\n      paramOutname = params[paramName];\n      if (typeof paramOutname === 'function') {\n        paramOutname(paramVal);\n      }\n      else {\n        self[paramOutname] = paramVal;\n      }\n    }\n    else {\n      self[paramName] = paramVal;\n    }\n  }\n  if(typeof self.datumCode === 'string' && self.datumCode !== \"WGS84\"){\n    self.datumCode = self.datumCode.toLowerCase();\n  }\n  return self;\n}\n","export default parseString;\n\nvar NEUTRAL = 1;\nvar KEYWORD = 2;\nvar NUMBER = 3;\nvar QUOTED = 4;\nvar AFTERQUOTE = 5;\nvar ENDED = -1;\nvar whitespace = /\\s/;\nvar latin = /[A-Za-z]/;\nvar keyword = /[A-Za-z84]/;\nvar endThings = /[,\\]]/;\nvar digets = /[\\d\\.E\\-\\+]/;\n// const ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nfunction Parser(text) {\n  if (typeof text !== 'string') {\n    throw new Error('not a string');\n  }\n  this.text = text.trim();\n  this.level = 0;\n  this.place = 0;\n  this.root = null;\n  this.stack = [];\n  this.currentObject = null;\n  this.state = NEUTRAL;\n}\nParser.prototype.readCharicter = function() {\n  var char = this.text[this.place++];\n  if (this.state !== QUOTED) {\n    while (whitespace.test(char)) {\n      if (this.place >= this.text.length) {\n        return;\n      }\n      char = this.text[this.place++];\n    }\n  }\n  switch (this.state) {\n    case NEUTRAL:\n      return this.neutral(char);\n    case KEYWORD:\n      return this.keyword(char)\n    case QUOTED:\n      return this.quoted(char);\n    case AFTERQUOTE:\n      return this.afterquote(char);\n    case NUMBER:\n      return this.number(char);\n    case ENDED:\n      return;\n  }\n};\nParser.prototype.afterquote = function(char) {\n  if (char === '\"') {\n    this.word += '\"';\n    this.state = QUOTED;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = this.word.trim();\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in afterquote yet, index ' + this.place);\n};\nParser.prototype.afterItem = function(char) {\n  if (char === ',') {\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n    }\n    this.word = null;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (char === ']') {\n    this.level--;\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n      this.word = null;\n    }\n    this.state = NEUTRAL;\n    this.currentObject = this.stack.pop();\n    if (!this.currentObject) {\n      this.state = ENDED;\n    }\n\n    return;\n  }\n};\nParser.prototype.number = function(char) {\n  if (digets.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = parseFloat(this.word);\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in number yet, index ' + this.place);\n};\nParser.prototype.quoted = function(char) {\n  if (char === '\"') {\n    this.state = AFTERQUOTE;\n    return;\n  }\n  this.word += char;\n  return;\n};\nParser.prototype.keyword = function(char) {\n  if (keyword.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (char === '[') {\n    var newObjects = [];\n    newObjects.push(this.word);\n    this.level++;\n    if (this.root === null) {\n      this.root = newObjects;\n    } else {\n      this.currentObject.push(newObjects);\n    }\n    this.stack.push(this.currentObject);\n    this.currentObject = newObjects;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in keyword yet, index ' + this.place);\n};\nParser.prototype.neutral = function(char) {\n  if (latin.test(char)) {\n    this.word = char;\n    this.state = KEYWORD;\n    return;\n  }\n  if (char === '\"') {\n    this.word = '';\n    this.state = QUOTED;\n    return;\n  }\n  if (digets.test(char)) {\n    this.word = char;\n    this.state = NUMBER;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in neutral yet, index ' + this.place);\n};\nParser.prototype.output = function() {\n  while (this.place < this.text.length) {\n    this.readCharicter();\n  }\n  if (this.state === ENDED) {\n    return this.root;\n  }\n  throw new Error('unable to parse string \"' +this.text + '\". State is ' + this.state);\n};\n\nfunction parseString(txt) {\n  var parser = new Parser(txt);\n  return parser.output();\n}\n","\n\nfunction mapit(obj, key, value) {\n  if (Array.isArray(key)) {\n    value.unshift(key);\n    key = null;\n  }\n  var thing = key ? {} : obj;\n\n  var out = value.reduce(function(newObj, item) {\n    sExpr(item, newObj);\n    return newObj\n  }, thing);\n  if (key) {\n    obj[key] = out;\n  }\n}\n\nexport function sExpr(v, obj) {\n  if (!Array.isArray(v)) {\n    obj[v] = true;\n    return;\n  }\n  var key = v.shift();\n  if (key === 'PARAMETER') {\n    key = v.shift();\n  }\n  if (v.length === 1) {\n    if (Array.isArray(v[0])) {\n      obj[key] = {};\n      sExpr(v[0], obj[key]);\n      return;\n    }\n    obj[key] = v[0];\n    return;\n  }\n  if (!v.length) {\n    obj[key] = true;\n    return;\n  }\n  if (key === 'TOWGS84') {\n    obj[key] = v;\n    return;\n  }\n  if (key === 'AXIS') {\n    if (!(key in obj)) {\n      obj[key] = [];\n    }\n    obj[key].push(v);\n    return;\n  }\n  if (!Array.isArray(key)) {\n    obj[key] = {};\n  }\n\n  var i;\n  switch (key) {\n    case 'UNIT':\n    case 'PRIMEM':\n    case 'VERT_DATUM':\n      obj[key] = {\n        name: v[0].toLowerCase(),\n        convert: v[1]\n      };\n      if (v.length === 3) {\n        sExpr(v[2], obj[key]);\n      }\n      return;\n    case 'SPHEROID':\n    case 'ELLIPSOID':\n      obj[key] = {\n        name: v[0],\n        a: v[1],\n        rf: v[2]\n      };\n      if (v.length === 4) {\n        sExpr(v[3], obj[key]);\n      }\n      return;\n    case 'PROJECTEDCRS':\n    case 'PROJCRS':\n    case 'GEOGCS':\n    case 'GEOCCS':\n    case 'PROJCS':\n    case 'LOCAL_CS':\n    case 'GEODCRS':\n    case 'GEODETICCRS':\n    case 'GEODETICDATUM':\n    case 'EDATUM':\n    case 'ENGINEERINGDATUM':\n    case 'VERT_CS':\n    case 'VERTCRS':\n    case 'VERTICALCRS':\n    case 'COMPD_CS':\n    case 'COMPOUNDCRS':\n    case 'ENGINEERINGCRS':\n    case 'ENGCRS':\n    case 'FITTED_CS':\n    case 'LOCAL_DATUM':\n    case 'DATUM':\n      v[0] = ['name', v[0]];\n      mapit(obj, key, v);\n      return;\n    default:\n      i = -1;\n      while (++i < v.length) {\n        if (!Array.isArray(v[i])) {\n          return sExpr(v, obj[key]);\n        }\n      }\n      return mapit(obj, key, v);\n  }\n}\n","var D2R = 0.01745329251994329577;\nimport parser from './parser';\nimport {sExpr} from './process';\n\n\n\nfunction rename(obj, params) {\n  var outName = params[0];\n  var inName = params[1];\n  if (!(outName in obj) && (inName in obj)) {\n    obj[outName] = obj[inName];\n    if (params.length === 3) {\n      obj[outName] = params[2](obj[outName]);\n    }\n  }\n}\n\nfunction d2r(input) {\n  return input * D2R;\n}\n\nfunction cleanWKT(wkt) {\n  if (wkt.type === 'GEOGCS') {\n    wkt.projName = 'longlat';\n  } else if (wkt.type === 'LOCAL_CS') {\n    wkt.projName = 'identity';\n    wkt.local = true;\n  } else {\n    if (typeof wkt.PROJECTION === 'object') {\n      wkt.projName = Object.keys(wkt.PROJECTION)[0];\n    } else {\n      wkt.projName = wkt.PROJECTION;\n    }\n  }\n  if (wkt.AXIS) {\n    var axisOrder = '';\n    for (var i = 0, ii = wkt.AXIS.length; i < ii; ++i) {\n      var axis = wkt.AXIS[i];\n      var descriptor = axis[0].toLowerCase();\n      if (descriptor.indexOf('north') !== -1) {\n        axisOrder += 'n';\n      } else if (descriptor.indexOf('south') !== -1) {\n        axisOrder += 's';\n      } else if (descriptor.indexOf('east') !== -1) {\n        axisOrder += 'e';\n      } else if (descriptor.indexOf('west') !== -1) {\n        axisOrder += 'w';\n      }\n    }\n    if (axisOrder.length === 2) {\n      axisOrder += 'u';\n    }\n    if (axisOrder.length === 3) {\n      wkt.axis = axisOrder;\n    }\n  }\n  if (wkt.UNIT) {\n    wkt.units = wkt.UNIT.name.toLowerCase();\n    if (wkt.units === 'metre') {\n      wkt.units = 'meter';\n    }\n    if (wkt.UNIT.convert) {\n      if (wkt.type === 'GEOGCS') {\n        if (wkt.DATUM && wkt.DATUM.SPHEROID) {\n          wkt.to_meter = wkt.UNIT.convert*wkt.DATUM.SPHEROID.a;\n        }\n      } else {\n        wkt.to_meter = wkt.UNIT.convert;\n      }\n    }\n  }\n  var geogcs = wkt.GEOGCS;\n  if (wkt.type === 'GEOGCS') {\n    geogcs = wkt;\n  }\n  if (geogcs) {\n    //if(wkt.GEOGCS.PRIMEM&&wkt.GEOGCS.PRIMEM.convert){\n    //  wkt.from_greenwich=wkt.GEOGCS.PRIMEM.convert*D2R;\n    //}\n    if (geogcs.DATUM) {\n      wkt.datumCode = geogcs.DATUM.name.toLowerCase();\n    } else {\n      wkt.datumCode = geogcs.name.toLowerCase();\n    }\n    if (wkt.datumCode.slice(0, 2) === 'd_') {\n      wkt.datumCode = wkt.datumCode.slice(2);\n    }\n    if (wkt.datumCode === 'new_zealand_geodetic_datum_1949' || wkt.datumCode === 'new_zealand_1949') {\n      wkt.datumCode = 'nzgd49';\n    }\n    if (wkt.datumCode === 'wgs_1984' || wkt.datumCode === 'world_geodetic_system_1984') {\n      if (wkt.PROJECTION === 'Mercator_Auxiliary_Sphere') {\n        wkt.sphere = true;\n      }\n      wkt.datumCode = 'wgs84';\n    }\n    if (wkt.datumCode.slice(-6) === '_ferro') {\n      wkt.datumCode = wkt.datumCode.slice(0, - 6);\n    }\n    if (wkt.datumCode.slice(-8) === '_jakarta') {\n      wkt.datumCode = wkt.datumCode.slice(0, - 8);\n    }\n    if (~wkt.datumCode.indexOf('belge')) {\n      wkt.datumCode = 'rnb72';\n    }\n    if (geogcs.DATUM && geogcs.DATUM.SPHEROID) {\n      wkt.ellps = geogcs.DATUM.SPHEROID.name.replace('_19', '').replace(/[Cc]larke\\_18/, 'clrk');\n      if (wkt.ellps.toLowerCase().slice(0, 13) === 'international') {\n        wkt.ellps = 'intl';\n      }\n\n      wkt.a = geogcs.DATUM.SPHEROID.a;\n      wkt.rf = parseFloat(geogcs.DATUM.SPHEROID.rf, 10);\n    }\n\n    if (geogcs.DATUM && geogcs.DATUM.TOWGS84) {\n      wkt.datum_params = geogcs.DATUM.TOWGS84;\n    }\n    if (~wkt.datumCode.indexOf('osgb_1936')) {\n      wkt.datumCode = 'osgb36';\n    }\n    if (~wkt.datumCode.indexOf('osni_1952')) {\n      wkt.datumCode = 'osni52';\n    }\n    if (~wkt.datumCode.indexOf('tm65')\n      || ~wkt.datumCode.indexOf('geodetic_datum_of_1965')) {\n      wkt.datumCode = 'ire65';\n    }\n    if (wkt.datumCode === 'ch1903+') {\n      wkt.datumCode = 'ch1903';\n    }\n    if (~wkt.datumCode.indexOf('israel')) {\n      wkt.datumCode = 'isr93';\n    }\n  }\n  if (wkt.b && !isFinite(wkt.b)) {\n    wkt.b = wkt.a;\n  }\n\n  function toMeter(input) {\n    var ratio = wkt.to_meter || 1;\n    return input * ratio;\n  }\n  var renamer = function(a) {\n    return rename(wkt, a);\n  };\n  var list = [\n    ['standard_parallel_1', 'Standard_Parallel_1'],\n    ['standard_parallel_2', 'Standard_Parallel_2'],\n    ['false_easting', 'False_Easting'],\n    ['false_northing', 'False_Northing'],\n    ['central_meridian', 'Central_Meridian'],\n    ['latitude_of_origin', 'Latitude_Of_Origin'],\n    ['latitude_of_origin', 'Central_Parallel'],\n    ['scale_factor', 'Scale_Factor'],\n    ['k0', 'scale_factor'],\n    ['latitude_of_center', 'Latitude_Of_Center'],\n    ['latitude_of_center', 'Latitude_of_center'],\n    ['lat0', 'latitude_of_center', d2r],\n    ['longitude_of_center', 'Longitude_Of_Center'],\n    ['longitude_of_center', 'Longitude_of_center'],\n    ['longc', 'longitude_of_center', d2r],\n    ['x0', 'false_easting', toMeter],\n    ['y0', 'false_northing', toMeter],\n    ['long0', 'central_meridian', d2r],\n    ['lat0', 'latitude_of_origin', d2r],\n    ['lat0', 'standard_parallel_1', d2r],\n    ['lat1', 'standard_parallel_1', d2r],\n    ['lat2', 'standard_parallel_2', d2r],\n    ['azimuth', 'Azimuth'],\n    ['alpha', 'azimuth', d2r],\n    ['srsCode', 'name']\n  ];\n  list.forEach(renamer);\n  if (!wkt.long0 && wkt.longc && (wkt.projName === 'Albers_Conic_Equal_Area' || wkt.projName === 'Lambert_Azimuthal_Equal_Area')) {\n    wkt.long0 = wkt.longc;\n  }\n  if (!wkt.lat_ts && wkt.lat1 && (wkt.projName === 'Stereographic_South_Pole' || wkt.projName === 'Polar Stereographic (variant B)')) {\n    wkt.lat0 = d2r(wkt.lat1 > 0 ? 90 : -90);\n    wkt.lat_ts = wkt.lat1;\n  }\n}\nexport default function(wkt) {\n  var lisp = parser(wkt);\n  var type = lisp.shift();\n  var name = lisp.shift();\n  lisp.unshift(['name', name]);\n  lisp.unshift(['type', type]);\n  var obj = {};\n  sExpr(lisp, obj);\n  cleanWKT(obj);\n  return obj;\n}\n","import globals from './global';\nimport parseProj from './projString';\nimport wkt from 'wkt-parser';\n\nfunction defs(name) {\n  /*global console*/\n  var that = this;\n  if (arguments.length === 2) {\n    var def = arguments[1];\n    if (typeof def === 'string') {\n      if (def.charAt(0) === '+') {\n        defs[name] = parseProj(arguments[1]);\n      }\n      else {\n        defs[name] = wkt(arguments[1]);\n      }\n    } else {\n      defs[name] = def;\n    }\n  }\n  else if (arguments.length === 1) {\n    if (Array.isArray(name)) {\n      return name.map(function(v) {\n        if (Array.isArray(v)) {\n          defs.apply(that, v);\n        }\n        else {\n          defs(v);\n        }\n      });\n    }\n    else if (typeof name === 'string') {\n      if (name in defs) {\n        return defs[name];\n      }\n    }\n    else if ('EPSG' in name) {\n      defs['EPSG:' + name.EPSG] = name;\n    }\n    else if ('ESRI' in name) {\n      defs['ESRI:' + name.ESRI] = name;\n    }\n    else if ('IAU2000' in name) {\n      defs['IAU2000:' + name.IAU2000] = name;\n    }\n    else {\n      console.log(name);\n    }\n    return;\n  }\n\n\n}\nglobals(defs);\nexport default defs;\n","import defs from './defs';\nimport wkt from 'wkt-parser';\nimport projStr from './projString';\nimport match from './match';\nfunction testObj(code){\n  return typeof code === 'string';\n}\nfunction testDef(code){\n  return code in defs;\n}\nvar codeWords = ['PROJECTEDCRS', 'PROJCRS', 'GEOGCS','GEOCCS','PROJCS','LOCAL_CS', 'GEODCRS', 'GEODETICCRS', 'GEODETICDATUM', 'ENGCRS', 'ENGINEERINGCRS'];\nfunction testWKT(code){\n  return codeWords.some(function (word) {\n    return code.indexOf(word) > -1;\n  });\n}\nvar codes = ['3857', '900913', '3785', '102113'];\nfunction checkMercator(item) {\n  var auth = match(item, 'authority');\n  if (!auth) {\n    return;\n  }\n  var code = match(auth, 'epsg');\n  return code && codes.indexOf(code) > -1;\n}\nfunction checkProjStr(item) {\n  var ext = match(item, 'extension');\n  if (!ext) {\n    return;\n  }\n  return match(ext, 'proj4');\n}\nfunction testProj(code){\n  return code[0] === '+';\n}\nfunction parse(code){\n  if (testObj(code)) {\n    //check to see if this is a WKT string\n    if (testDef(code)) {\n      return defs[code];\n    }\n    if (testWKT(code)) {\n      var out = wkt(code);\n      // test of spetial case, due to this being a very common and often malformed\n      if (checkMercator(out)) {\n        return defs['EPSG:3857'];\n      }\n      var maybeProjStr = checkProjStr(out);\n      if (maybeProjStr) {\n        return projStr(maybeProjStr);\n      }\n      return out;\n    }\n    if (testProj(code)) {\n      return projStr(code);\n    }\n  }else{\n    return code;\n  }\n}\n\nexport default parse;\n","export default function(destination, source) {\n  destination = destination || {};\n  var value, property;\n  if (!source) {\n    return destination;\n  }\n  for (property in source) {\n    value = source[property];\n    if (value !== undefined) {\n      destination[property] = value;\n    }\n  }\n  return destination;\n}\n","export default function(eccent, sinphi, cosphi) {\n  var con = eccent * sinphi;\n  return cosphi / (Math.sqrt(1 - con * con));\n}","export default function(x) {\n  return x<0 ? -1 : 1;\n}","\nimport {TWO_PI, SPI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) <= SPI) ? x : (x - (sign(x) * TWO_PI));\n}\n","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, phi, sinphi) {\n  var con = eccent * sinphi;\n  var com = 0.5 * eccent;\n  con = Math.pow(((1 - con) / (1 + con)), com);\n  return (Math.tan(0.5 * (HALF_PI - phi)) / con);\n}\n","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, ts) {\n  var eccnth = 0.5 * eccent;\n  var con, dphi;\n  var phi = HALF_PI - 2 * Math.atan(ts);\n  for (var i = 0; i <= 15; i++) {\n    con = eccent * Math.sin(phi);\n    dphi = HALF_PI - 2 * Math.atan(ts * (Math.pow(((1 - con) / (1 + con)), eccnth))) - phi;\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n  //console.log(\"phi2z has NoConvergence\");\n  return -9999;\n}\n","import msfnz from '../common/msfnz';\n\nimport adjust_lon from '../common/adjust_lon';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport {FORTPI, R2D, EPSLN, HALF_PI} from '../constants/values';\nexport function init() {\n  var con = this.b / this.a;\n  this.es = 1 - con * con;\n  if(!('x0' in this)){\n    this.x0 = 0;\n  }\n  if(!('y0' in this)){\n    this.y0 = 0;\n  }\n  this.e = Math.sqrt(this.es);\n  if (this.lat_ts) {\n    if (this.sphere) {\n      this.k0 = Math.cos(this.lat_ts);\n    }\n    else {\n      this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n    }\n  }\n  else {\n    if (!this.k0) {\n      if (this.k) {\n        this.k0 = this.k;\n      }\n      else {\n        this.k0 = 1;\n      }\n    }\n  }\n}\n\n/* Mercator forward equations--mapping lat,long to x,y\n  --------------------------------------------------*/\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  // convert to radians\n  if (lat * R2D > 90 && lat * R2D < -90 && lon * R2D > 180 && lon * R2D < -180) {\n    return null;\n  }\n\n  var x, y;\n  if (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN) {\n    return null;\n  }\n  else {\n    if (this.sphere) {\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 + this.a * this.k0 * Math.log(Math.tan(FORTPI + 0.5 * lat));\n    }\n    else {\n      var sinphi = Math.sin(lat);\n      var ts = tsfnz(this.e, lat, sinphi);\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 - this.a * this.k0 * Math.log(ts);\n    }\n    p.x = x;\n    p.y = y;\n    return p;\n  }\n}\n\n/* Mercator inverse equations--mapping x,y to lat/long\n  --------------------------------------------------*/\nexport function inverse(p) {\n\n  var x = p.x - this.x0;\n  var y = p.y - this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lat = HALF_PI - 2 * Math.atan(Math.exp(-y / (this.a * this.k0)));\n  }\n  else {\n    var ts = Math.exp(-y / (this.a * this.k0));\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  lon = adjust_lon(this.long0 + x / (this.a * this.k0));\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mercator\", \"Popular Visualisation Pseudo Mercator\", \"Mercator_1SP\", \"Mercator_Auxiliary_Sphere\", \"merc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export function init() {\n  //no-op for longlat\n}\n\nfunction identity(pt) {\n  return pt;\n}\nexport {identity as forward};\nexport {identity as inverse};\nexport var names = [\"longlat\", \"identity\"];\nexport default {\n  init: init,\n  forward: identity,\n  inverse: identity,\n  names: names\n};\n","import merc from \"./projections/merc\";\nimport longlat from \"./projections/longlat\";\nvar projs = [merc, longlat];\nvar names = {};\nvar projStore = [];\n\nfunction add(proj, i) {\n  var len = projStore.length;\n  if (!proj.names) {\n    console.log(i);\n    return true;\n  }\n  projStore[len] = proj;\n  proj.names.forEach(function(n) {\n    names[n.toLowerCase()] = len;\n  });\n  return this;\n}\n\nexport {add};\n\nexport function get(name) {\n  if (!name) {\n    return false;\n  }\n  var n = name.toLowerCase();\n  if (typeof names[n] !== 'undefined' && projStore[names[n]]) {\n    return projStore[names[n]];\n  }\n}\n\nexport function start() {\n  projs.forEach(add);\n}\nexport default {\n  start: start,\n  add: add,\n  get: get\n};\n","var exports = {};\nexport {exports as default};\nexports.MERIT = {\n  a: 6378137.0,\n  rf: 298.257,\n  ellipseName: \"MERIT 1983\"\n};\n\nexports.SGS85 = {\n  a: 6378136.0,\n  rf: 298.257,\n  ellipseName: \"Soviet Geodetic System 85\"\n};\n\nexports.GRS80 = {\n  a: 6378137.0,\n  rf: 298.257222101,\n  ellipseName: \"GRS 1980(IUGG, 1980)\"\n};\n\nexports.IAU76 = {\n  a: 6378140.0,\n  rf: 298.257,\n  ellipseName: \"IAU 1976\"\n};\n\nexports.airy = {\n  a: 6377563.396,\n  b: 6356256.910,\n  ellipseName: \"Airy 1830\"\n};\n\nexports.APL4 = {\n  a: 6378137,\n  rf: 298.25,\n  ellipseName: \"Appl. Physics. 1965\"\n};\n\nexports.NWL9D = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"Naval Weapons Lab., 1965\"\n};\n\nexports.mod_airy = {\n  a: 6377340.189,\n  b: 6356034.446,\n  ellipseName: \"Modified Airy\"\n};\n\nexports.andrae = {\n  a: 6377104.43,\n  rf: 300.0,\n  ellipseName: \"Andrae 1876 (Den., Iclnd.)\"\n};\n\nexports.aust_SA = {\n  a: 6378160.0,\n  rf: 298.25,\n  ellipseName: \"Australian Natl & S. Amer. 1969\"\n};\n\nexports.GRS67 = {\n  a: 6378160.0,\n  rf: 298.2471674270,\n  ellipseName: \"GRS 67(IUGG 1967)\"\n};\n\nexports.bessel = {\n  a: 6377397.155,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841\"\n};\n\nexports.bess_nam = {\n  a: 6377483.865,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841 (Namibia)\"\n};\n\nexports.clrk66 = {\n  a: 6378206.4,\n  b: 6356583.8,\n  ellipseName: \"Clarke 1866\"\n};\n\nexports.clrk80 = {\n  a: 6378249.145,\n  rf: 293.4663,\n  ellipseName: \"Clarke 1880 mod.\"\n};\n\nexports.clrk58 = {\n  a: 6378293.645208759,\n  rf: 294.2606763692654,\n  ellipseName: \"Clarke 1858\"\n};\n\nexports.CPM = {\n  a: 6375738.7,\n  rf: 334.29,\n  ellipseName: \"Comm. des Poids et Mesures 1799\"\n};\n\nexports.delmbr = {\n  a: 6376428.0,\n  rf: 311.5,\n  ellipseName: \"Delambre 1810 (Belgium)\"\n};\n\nexports.engelis = {\n  a: 6378136.05,\n  rf: 298.2566,\n  ellipseName: \"Engelis 1985\"\n};\n\nexports.evrst30 = {\n  a: 6377276.345,\n  rf: 300.8017,\n  ellipseName: \"Everest 1830\"\n};\n\nexports.evrst48 = {\n  a: 6377304.063,\n  rf: 300.8017,\n  ellipseName: \"Everest 1948\"\n};\n\nexports.evrst56 = {\n  a: 6377301.243,\n  rf: 300.8017,\n  ellipseName: \"Everest 1956\"\n};\n\nexports.evrst69 = {\n  a: 6377295.664,\n  rf: 300.8017,\n  ellipseName: \"Everest 1969\"\n};\n\nexports.evrstSS = {\n  a: 6377298.556,\n  rf: 300.8017,\n  ellipseName: \"Everest (Sabah & Sarawak)\"\n};\n\nexports.fschr60 = {\n  a: 6378166.0,\n  rf: 298.3,\n  ellipseName: \"Fischer (Mercury Datum) 1960\"\n};\n\nexports.fschr60m = {\n  a: 6378155.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1960\"\n};\n\nexports.fschr68 = {\n  a: 6378150.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1968\"\n};\n\nexports.helmert = {\n  a: 6378200.0,\n  rf: 298.3,\n  ellipseName: \"Helmert 1906\"\n};\n\nexports.hough = {\n  a: 6378270.0,\n  rf: 297.0,\n  ellipseName: \"Hough\"\n};\n\nexports.intl = {\n  a: 6378388.0,\n  rf: 297.0,\n  ellipseName: \"International 1909 (Hayford)\"\n};\n\nexports.kaula = {\n  a: 6378163.0,\n  rf: 298.24,\n  ellipseName: \"Kaula 1961\"\n};\n\nexports.lerch = {\n  a: 6378139.0,\n  rf: 298.257,\n  ellipseName: \"Lerch 1979\"\n};\n\nexports.mprts = {\n  a: 6397300.0,\n  rf: 191.0,\n  ellipseName: \"Maupertius 1738\"\n};\n\nexports.new_intl = {\n  a: 6378157.5,\n  b: 6356772.2,\n  ellipseName: \"New International 1967\"\n};\n\nexports.plessis = {\n  a: 6376523.0,\n  rf: 6355863.0,\n  ellipseName: \"Plessis 1817 (France)\"\n};\n\nexports.krass = {\n  a: 6378245.0,\n  rf: 298.3,\n  ellipseName: \"Krassovsky, 1942\"\n};\n\nexports.SEasia = {\n  a: 6378155.0,\n  b: 6356773.3205,\n  ellipseName: \"Southeast Asia\"\n};\n\nexports.walbeck = {\n  a: 6376896.0,\n  b: 6355834.8467,\n  ellipseName: \"Walbeck\"\n};\n\nexports.WGS60 = {\n  a: 6378165.0,\n  rf: 298.3,\n  ellipseName: \"WGS 60\"\n};\n\nexports.WGS66 = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"WGS 66\"\n};\n\nexports.WGS7 = {\n  a: 6378135.0,\n  rf: 298.26,\n  ellipseName: \"WGS 72\"\n};\n\nexport var WGS84 = exports.WGS84 = {\n  a: 6378137.0,\n  rf: 298.257223563,\n  ellipseName: \"WGS 84\"\n};\n\nexports.sphere = {\n  a: 6370997.0,\n  b: 6370997.0,\n  ellipseName: \"Normal Sphere (r=6370997)\"\n};\n","import {SIXTH, RA4, RA6, EPSLN} from './constants/values';\nimport {default as Ellipsoid, WGS84} from './constants/Ellipsoid';\nimport match from './match';\n\nexport function eccentricity(a, b, rf, R_A) {\n  var a2 = a * a; // used in geocentric\n  var b2 = b * b; // used in geocentric\n  var es = (a2 - b2) / a2; // e ^ 2\n  var e = 0;\n  if (R_A) {\n    a *= 1 - es * (SIXTH + es * (RA4 + es * RA6));\n    a2 = a * a;\n    es = 0;\n  } else {\n    e = Math.sqrt(es); // eccentricity\n  }\n  var ep2 = (a2 - b2) / b2; // used in geocentric\n  return {\n    es: es,\n    e: e,\n    ep2: ep2\n  };\n}\nexport function sphere(a, b, rf, ellps, sphere) {\n  if (!a) { // do we have an ellipsoid?\n    var ellipse = match(Ellipsoid, ellps);\n    if (!ellipse) {\n      ellipse = WGS84;\n    }\n    a = ellipse.a;\n    b = ellipse.b;\n    rf = ellipse.rf;\n  }\n\n  if (rf && !b) {\n    b = (1.0 - 1.0 / rf) * a;\n  }\n  if (rf === 0 || Math.abs(a - b) < EPSLN) {\n    sphere = true;\n    b = a;\n  }\n  return {\n    a: a,\n    b: b,\n    rf: rf,\n    sphere: sphere\n  };\n}\n","var exports = {};\nexport {exports as default};\nexports.wgs84 = {\n  towgs84: \"0,0,0\",\n  ellipse: \"WGS84\",\n  datumName: \"WGS84\"\n};\n\nexports.ch1903 = {\n  towgs84: \"674.374,15.056,405.346\",\n  ellipse: \"bessel\",\n  datumName: \"swiss\"\n};\n\nexports.ggrs87 = {\n  towgs84: \"-199.87,74.79,246.62\",\n  ellipse: \"GRS80\",\n  datumName: \"Greek_Geodetic_Reference_System_1987\"\n};\n\nexports.nad83 = {\n  towgs84: \"0,0,0\",\n  ellipse: \"GRS80\",\n  datumName: \"North_American_Datum_1983\"\n};\n\nexports.nad27 = {\n  nadgrids: \"@conus,@alaska,@ntv2_0.gsb,@ntv1_can.dat\",\n  ellipse: \"clrk66\",\n  datumName: \"North_American_Datum_1927\"\n};\n\nexports.potsdam = {\n  towgs84: \"606.0,23.0,413.0\",\n  ellipse: \"bessel\",\n  datumName: \"Potsdam Rauenberg 1950 DHDN\"\n};\n\nexports.carthage = {\n  towgs84: \"-263.0,6.0,431.0\",\n  ellipse: \"clark80\",\n  datumName: \"Carthage 1934 Tunisia\"\n};\n\nexports.hermannskogel = {\n  towgs84: \"653.0,-212.0,449.0\",\n  ellipse: \"bessel\",\n  datumName: \"Hermannskogel\"\n};\n\nexports.osni52 = {\n  towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n  ellipse: \"airy\",\n  datumName: \"Irish National\"\n};\n\nexports.ire65 = {\n  towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n  ellipse: \"mod_airy\",\n  datumName: \"Ireland 1965\"\n};\n\nexports.rassadiran = {\n  towgs84: \"-133.63,-157.5,-158.62\",\n  ellipse: \"intl\",\n  datumName: \"Rassadiran\"\n};\n\nexports.nzgd49 = {\n  towgs84: \"59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993\",\n  ellipse: \"intl\",\n  datumName: \"New Zealand Geodetic Datum 1949\"\n};\n\nexports.osgb36 = {\n  towgs84: \"446.448,-125.157,542.060,0.1502,0.2470,0.8421,-20.4894\",\n  ellipse: \"airy\",\n  datumName: \"Airy 1830\"\n};\n\nexports.s_jtsk = {\n  towgs84: \"589,76,480\",\n  ellipse: 'bessel',\n  datumName: 'S-JTSK (Ferro)'\n};\n\nexports.beduaram = {\n  towgs84: '-106,-87,188',\n  ellipse: 'clrk80',\n  datumName: 'Beduaram'\n};\n\nexports.gunung_segara = {\n  towgs84: '-403,684,41',\n  ellipse: 'bessel',\n  datumName: 'Gunung Segara Jakarta'\n};\n\nexports.rnb72 = {\n  towgs84: \"106.869,-52.2978,103.724,-0.33657,0.456955,-1.84218,1\",\n  ellipse: \"intl\",\n  datumName: \"Reseau National Belge 1972\"\n};\n","import {PJD_3PARAM, PJD_7PARAM, PJD_GRIDSHIFT, PJD_WGS84, PJD_NODATUM, SEC_TO_RAD} from './constants/values';\n\nfunction datum(datumCode, datum_params, a, b, es, ep2, nadgrids) {\n  var out = {};\n\n  if (datumCode === undefined || datumCode === 'none') {\n    out.datum_type = PJD_NODATUM;\n  } else {\n    out.datum_type = PJD_WGS84;\n  }\n\n  if (datum_params) {\n    out.datum_params = datum_params.map(parseFloat);\n    if (out.datum_params[0] !== 0 || out.datum_params[1] !== 0 || out.datum_params[2] !== 0) {\n      out.datum_type = PJD_3PARAM;\n    }\n    if (out.datum_params.length > 3) {\n      if (out.datum_params[3] !== 0 || out.datum_params[4] !== 0 || out.datum_params[5] !== 0 || out.datum_params[6] !== 0) {\n        out.datum_type = PJD_7PARAM;\n        out.datum_params[3] *= SEC_TO_RAD;\n        out.datum_params[4] *= SEC_TO_RAD;\n        out.datum_params[5] *= SEC_TO_RAD;\n        out.datum_params[6] = (out.datum_params[6] / 1000000.0) + 1.0;\n      }\n    }\n  }\n\n  if (nadgrids) {\n    out.datum_type = PJD_GRIDSHIFT;\n    out.grids = nadgrids;\n  }\n  out.a = a; //datum object also uses these values\n  out.b = b;\n  out.es = es;\n  out.ep2 = ep2;\n  return out;\n}\n\nexport default datum;\n","/**\n * Resources for details of NTv2 file formats:\n * - https://web.archive.org/web/20140127204822if_/http://www.mgs.gov.on.ca:80/stdprodconsume/groups/content/@mgs/@iandit/documents/resourcelist/stel02_047447.pdf\n * - http://mimaka.com/help/gs/html/004_NTV2%20Data%20Format.htm\n */\n\nvar loadedNadgrids = {};\n\n/**\n * Load a binary NTv2 file (.gsb) to a key that can be used in a proj string like +nadgrids=<key>. Pass the NTv2 file\n * as an ArrayBuffer.\n */\nexport default function nadgrid(key, data) {\n  var view = new DataView(data);\n  var isLittleEndian = detectLittleEndian(view);\n  var header = readHeader(view, isLittleEndian);\n  if (header.nSubgrids > 1) {\n    console.log('Only single NTv2 subgrids are currently supported, subsequent sub grids are ignored');\n  }\n  var subgrids = readSubgrids(view, header, isLittleEndian);\n  var nadgrid = {header: header, subgrids: subgrids};\n  loadedNadgrids[key] = nadgrid;\n  return nadgrid;\n}\n\n/**\n * Given a proj4 value for nadgrids, return an array of loaded grids\n */\nexport function getNadgrids(nadgrids) {\n  // Format details: http://proj.maptools.org/gen_parms.html\n  if (nadgrids === undefined) { return null; }\n  var grids = nadgrids.split(',');\n  return grids.map(parseNadgridString);\n}\n\nfunction parseNadgridString(value) {\n  if (value.length === 0) {\n    return null;\n  }\n  var optional = value[0] === '@';\n  if (optional) {\n    value = value.slice(1);\n  }\n  if (value === 'null') {\n    return {name: 'null', mandatory: !optional, grid: null, isNull: true};\n  }\n  return {\n    name: value,\n    mandatory: !optional,\n    grid: loadedNadgrids[value] || null,\n    isNull: false\n  };\n}\n\nfunction secondsToRadians(seconds) {\n  return (seconds / 3600) * Math.PI / 180;\n}\n\nfunction detectLittleEndian(view) {\n  var nFields = view.getInt32(8, false);\n  if (nFields === 11) {\n    return false;\n  }\n  nFields = view.getInt32(8, true);\n  if (nFields !== 11) {\n    console.warn('Failed to detect nadgrid endian-ness, defaulting to little-endian');\n  }\n  return true;\n}\n\nfunction readHeader(view, isLittleEndian) {\n  return {\n    nFields: view.getInt32(8, isLittleEndian),\n    nSubgridFields: view.getInt32(24, isLittleEndian),\n    nSubgrids: view.getInt32(40, isLittleEndian),\n    shiftType: decodeString(view, 56, 56 + 8).trim(),\n    fromSemiMajorAxis: view.getFloat64(120, isLittleEndian),\n    fromSemiMinorAxis: view.getFloat64(136, isLittleEndian),\n    toSemiMajorAxis: view.getFloat64(152, isLittleEndian),\n    toSemiMinorAxis: view.getFloat64(168, isLittleEndian),\n  };\n}\n\nfunction decodeString(view, start, end) {\n  return String.fromCharCode.apply(null, new Uint8Array(view.buffer.slice(start, end)));\n}\n\nfunction readSubgrids(view, header, isLittleEndian) {\n  var gridOffset = 176;\n  var grids = [];\n  for (var i = 0; i < header.nSubgrids; i++) {\n    var subHeader = readGridHeader(view, gridOffset, isLittleEndian);\n    var nodes = readGridNodes(view, gridOffset, subHeader, isLittleEndian);\n    var lngColumnCount = Math.round(\n      1 + (subHeader.upperLongitude - subHeader.lowerLongitude) / subHeader.longitudeInterval);\n    var latColumnCount = Math.round(\n      1 + (subHeader.upperLatitude - subHeader.lowerLatitude) / subHeader.latitudeInterval);\n    // Proj4 operates on radians whereas the coordinates are in seconds in the grid\n    grids.push({\n      ll: [secondsToRadians(subHeader.lowerLongitude), secondsToRadians(subHeader.lowerLatitude)],\n      del: [secondsToRadians(subHeader.longitudeInterval), secondsToRadians(subHeader.latitudeInterval)],\n      lim: [lngColumnCount, latColumnCount],\n      count: subHeader.gridNodeCount,\n      cvs: mapNodes(nodes)\n    });\n  }\n  return grids;\n}\n\nfunction mapNodes(nodes) {\n  return nodes.map(function (r) {return [secondsToRadians(r.longitudeShift), secondsToRadians(r.latitudeShift)];});\n}\n\nfunction readGridHeader(view, offset, isLittleEndian) {\n  return {\n    name: decodeString(view, offset + 8, offset + 16).trim(),\n    parent: decodeString(view, offset + 24, offset + 24 + 8).trim(),\n    lowerLatitude: view.getFloat64(offset + 72, isLittleEndian),\n    upperLatitude: view.getFloat64(offset + 88, isLittleEndian),\n    lowerLongitude: view.getFloat64(offset + 104, isLittleEndian),\n    upperLongitude: view.getFloat64(offset + 120, isLittleEndian),\n    latitudeInterval: view.getFloat64(offset + 136, isLittleEndian),\n    longitudeInterval: view.getFloat64(offset + 152, isLittleEndian),\n    gridNodeCount: view.getInt32(offset + 168, isLittleEndian)\n  };\n}\n\nfunction readGridNodes(view, offset, gridHeader, isLittleEndian) {\n  var nodesOffset = offset + 176;\n  var gridRecordLength = 16;\n  var gridShiftRecords = [];\n  for (var i = 0; i < gridHeader.gridNodeCount; i++) {\n    var record = {\n      latitudeShift: view.getFloat32(nodesOffset + i * gridRecordLength, isLittleEndian),\n      longitudeShift: view.getFloat32(nodesOffset + i * gridRecordLength + 4, isLittleEndian),\n      latitudeAccuracy: view.getFloat32(nodesOffset + i * gridRecordLength + 8, isLittleEndian),\n      longitudeAccuracy: view.getFloat32(nodesOffset + i * gridRecordLength + 12, isLittleEndian),\n    };\n    gridShiftRecords.push(record);\n  }\n  return gridShiftRecords;\n}\n","import parseCode from './parseCode';\nimport extend from './extend';\nimport projections from './projections';\nimport {sphere as dc_sphere, eccentricity as dc_eccentricity} from './deriveConstants';\nimport Datum from './constants/Datum';\nimport datum from './datum';\nimport match from './match';\nimport {getNadgrids} from \"./nadgrid\";\n\nfunction Projection(srsCode,callback) {\n  if (!(this instanceof Projection)) {\n    return new Projection(srsCode);\n  }\n  callback = callback || function(error){\n    if(error){\n      throw error;\n    }\n  };\n  var json = parseCode(srsCode);\n  if(typeof json !== 'object'){\n    callback(srsCode);\n    return;\n  }\n  var ourProj = Projection.projections.get(json.projName);\n  if(!ourProj){\n    callback(srsCode);\n    return;\n  }\n  if (json.datumCode && json.datumCode !== 'none') {\n    var datumDef = match(Datum, json.datumCode);\n    if (datumDef) {\n      json.datum_params = json.datum_params || (datumDef.towgs84 ? datumDef.towgs84.split(',') : null);\n      json.ellps = datumDef.ellipse;\n      json.datumName = datumDef.datumName ? datumDef.datumName : json.datumCode;\n    }\n  }\n  json.k0 = json.k0 || 1.0;\n  json.axis = json.axis || 'enu';\n  json.ellps = json.ellps || 'wgs84';\n  json.lat1 = json.lat1 || json.lat0; // Lambert_Conformal_Conic_1SP, for example, needs this\n\n  var sphere_ = dc_sphere(json.a, json.b, json.rf, json.ellps, json.sphere);\n  var ecc = dc_eccentricity(sphere_.a, sphere_.b, sphere_.rf, json.R_A);\n  var nadgrids = getNadgrids(json.nadgrids);\n  var datumObj = json.datum || datum(json.datumCode, json.datum_params, sphere_.a, sphere_.b, ecc.es, ecc.ep2,\n    nadgrids);\n\n  extend(this, json); // transfer everything over from the projection because we don't know what we'll need\n  extend(this, ourProj); // transfer all the methods from the projection\n\n  // copy the 4 things over we calulated in deriveConstants.sphere\n  this.a = sphere_.a;\n  this.b = sphere_.b;\n  this.rf = sphere_.rf;\n  this.sphere = sphere_.sphere;\n\n  // copy the 3 things we calculated in deriveConstants.eccentricity\n  this.es = ecc.es;\n  this.e = ecc.e;\n  this.ep2 = ecc.ep2;\n\n  // add in the datum object\n  this.datum = datumObj;\n\n  // init the projection\n  this.init();\n\n  // legecy callback from back in the day when it went to spatialreference.org\n  callback(null, this);\n\n}\nProjection.projections = projections;\nProjection.projections.start();\nexport default Projection;\n","'use strict';\nimport {PJD_3PARAM, PJD_7PARAM, HALF_PI} from './constants/values';\nexport function compareDatums(source, dest) {\n  if (source.datum_type !== dest.datum_type) {\n    return false; // false, datums are not equal\n  } else if (source.a !== dest.a || Math.abs(source.es - dest.es) > 0.000000000050) {\n    // the tolerance for es is to ensure that GRS80 and WGS84\n    // are considered identical\n    return false;\n  } else if (source.datum_type === PJD_3PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2]);\n  } else if (source.datum_type === PJD_7PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2] && source.datum_params[3] === dest.datum_params[3] && source.datum_params[4] === dest.datum_params[4] && source.datum_params[5] === dest.datum_params[5] && source.datum_params[6] === dest.datum_params[6]);\n  } else {\n    return true; // datums are equal\n  }\n} // cs_compare_datums()\n\n/*\n * The function Convert_Geodetic_To_Geocentric converts geodetic coordinates\n * (latitude, longitude, and height) to geocentric coordinates (X, Y, Z),\n * according to the current ellipsoid parameters.\n *\n *    Latitude  : Geodetic latitude in radians                     (input)\n *    Longitude : Geodetic longitude in radians                    (input)\n *    Height    : Geodetic height, in meters                       (input)\n *    X         : Calculated Geocentric X coordinate, in meters    (output)\n *    Y         : Calculated Geocentric Y coordinate, in meters    (output)\n *    Z         : Calculated Geocentric Z coordinate, in meters    (output)\n *\n */\nexport function geodeticToGeocentric(p, es, a) {\n  var Longitude = p.x;\n  var Latitude = p.y;\n  var Height = p.z ? p.z : 0; //Z value not always supplied\n\n  var Rn; /*  Earth radius at location  */\n  var Sin_Lat; /*  Math.sin(Latitude)  */\n  var Sin2_Lat; /*  Square of Math.sin(Latitude)  */\n  var Cos_Lat; /*  Math.cos(Latitude)  */\n\n  /*\n   ** Don't blow up if Latitude is just a little out of the value\n   ** range as it may just be a rounding issue.  Also removed longitude\n   ** test, it should be wrapped by Math.cos() and Math.sin().  NFW for PROJ.4, Sep/2001.\n   */\n  if (Latitude < -HALF_PI && Latitude > -1.001 * HALF_PI) {\n    Latitude = -HALF_PI;\n  } else if (Latitude > HALF_PI && Latitude < 1.001 * HALF_PI) {\n    Latitude = HALF_PI;\n  } else if (Latitude < -HALF_PI) {\n    /* Latitude out of range */\n    //..reportError('geocent:lat out of range:' + Latitude);\n    return { x: -Infinity, y: -Infinity, z: p.z };\n  } else if (Latitude > HALF_PI) {\n    /* Latitude out of range */\n    return { x: Infinity, y: Infinity, z: p.z };\n  }\n\n  if (Longitude > Math.PI) {\n    Longitude -= (2 * Math.PI);\n  }\n  Sin_Lat = Math.sin(Latitude);\n  Cos_Lat = Math.cos(Latitude);\n  Sin2_Lat = Sin_Lat * Sin_Lat;\n  Rn = a / (Math.sqrt(1.0e0 - es * Sin2_Lat));\n  return {\n    x: (Rn + Height) * Cos_Lat * Math.cos(Longitude),\n    y: (Rn + Height) * Cos_Lat * Math.sin(Longitude),\n    z: ((Rn * (1 - es)) + Height) * Sin_Lat\n  };\n} // cs_geodetic_to_geocentric()\n\nexport function geocentricToGeodetic(p, es, a, b) {\n  /* local defintions and variables */\n  /* end-criterium of loop, accuracy of sin(Latitude) */\n  var genau = 1e-12;\n  var genau2 = (genau * genau);\n  var maxiter = 30;\n\n  var P; /* distance between semi-minor axis and location */\n  var RR; /* distance between center and location */\n  var CT; /* sin of geocentric latitude */\n  var ST; /* cos of geocentric latitude */\n  var RX;\n  var RK;\n  var RN; /* Earth radius at location */\n  var CPHI0; /* cos of start or old geodetic latitude in iterations */\n  var SPHI0; /* sin of start or old geodetic latitude in iterations */\n  var CPHI; /* cos of searched geodetic latitude */\n  var SPHI; /* sin of searched geodetic latitude */\n  var SDPHI; /* end-criterium: addition-theorem of sin(Latitude(iter)-Latitude(iter-1)) */\n  var iter; /* # of continous iteration, max. 30 is always enough (s.a.) */\n\n  var X = p.x;\n  var Y = p.y;\n  var Z = p.z ? p.z : 0.0; //Z value not always supplied\n  var Longitude;\n  var Latitude;\n  var Height;\n\n  P = Math.sqrt(X * X + Y * Y);\n  RR = Math.sqrt(X * X + Y * Y + Z * Z);\n\n  /*      special cases for latitude and longitude */\n  if (P / a < genau) {\n\n    /*  special case, if P=0. (X=0., Y=0.) */\n    Longitude = 0.0;\n\n    /*  if (X,Y,Z)=(0.,0.,0.) then Height becomes semi-minor axis\n     *  of ellipsoid (=center of mass), Latitude becomes PI/2 */\n    if (RR / a < genau) {\n      Latitude = HALF_PI;\n      Height = -b;\n      return {\n        x: p.x,\n        y: p.y,\n        z: p.z\n      };\n    }\n  } else {\n    /*  ellipsoidal (geodetic) longitude\n     *  interval: -PI < Longitude <= +PI */\n    Longitude = Math.atan2(Y, X);\n  }\n\n  /* --------------------------------------------------------------\n   * Following iterative algorithm was developped by\n   * \"Institut for Erdmessung\", University of Hannover, July 1988.\n   * Internet: www.ife.uni-hannover.de\n   * Iterative computation of CPHI,SPHI and Height.\n   * Iteration of CPHI and SPHI to 10**-12 radian resp.\n   * 2*10**-7 arcsec.\n   * --------------------------------------------------------------\n   */\n  CT = Z / RR;\n  ST = P / RR;\n  RX = 1.0 / Math.sqrt(1.0 - es * (2.0 - es) * ST * ST);\n  CPHI0 = ST * (1.0 - es) * RX;\n  SPHI0 = CT * RX;\n  iter = 0;\n\n  /* loop to find sin(Latitude) resp. Latitude\n   * until |sin(Latitude(iter)-Latitude(iter-1))| < genau */\n  do {\n    iter++;\n    RN = a / Math.sqrt(1.0 - es * SPHI0 * SPHI0);\n\n    /*  ellipsoidal (geodetic) height */\n    Height = P * CPHI0 + Z * SPHI0 - RN * (1.0 - es * SPHI0 * SPHI0);\n\n    RK = es * RN / (RN + Height);\n    RX = 1.0 / Math.sqrt(1.0 - RK * (2.0 - RK) * ST * ST);\n    CPHI = ST * (1.0 - RK) * RX;\n    SPHI = CT * RX;\n    SDPHI = SPHI * CPHI0 - CPHI * SPHI0;\n    CPHI0 = CPHI;\n    SPHI0 = SPHI;\n  }\n  while (SDPHI * SDPHI > genau2 && iter < maxiter);\n\n  /*      ellipsoidal (geodetic) latitude */\n  Latitude = Math.atan(SPHI / Math.abs(CPHI));\n  return {\n    x: Longitude,\n    y: Latitude,\n    z: Height\n  };\n} // cs_geocentric_to_geodetic()\n\n/****************************************************************/\n// pj_geocentic_to_wgs84( p )\n//  p = point to transform in geocentric coordinates (x,y,z)\n\n\n/** point object, nothing fancy, just allows values to be\n    passed back and forth by reference rather than by value.\n    Other point classes may be used as long as they have\n    x and y properties, which will get modified in the transform method.\n*/\nexport function geocentricToWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x + datum_params[0],\n      y: p.y + datum_params[1],\n      z: p.z + datum_params[2],\n    };\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: M_BF * (p.x - Rz_BF * p.y + Ry_BF * p.z) + Dx_BF,\n      y: M_BF * (Rz_BF * p.x + p.y - Rx_BF * p.z) + Dy_BF,\n      z: M_BF * (-Ry_BF * p.x + Rx_BF * p.y + p.z) + Dz_BF\n    };\n  }\n} // cs_geocentric_to_wgs84\n\n/****************************************************************/\n// pj_geocentic_from_wgs84()\n//  coordinate system definition,\n//  point to transform in geocentric coordinates (x,y,z)\nexport function geocentricFromWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x - datum_params[0],\n      y: p.y - datum_params[1],\n      z: p.z - datum_params[2],\n    };\n\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    var x_tmp = (p.x - Dx_BF) / M_BF;\n    var y_tmp = (p.y - Dy_BF) / M_BF;\n    var z_tmp = (p.z - Dz_BF) / M_BF;\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n\n    return {\n      x: x_tmp + Rz_BF * y_tmp - Ry_BF * z_tmp,\n      y: -Rz_BF * x_tmp + y_tmp + Rx_BF * z_tmp,\n      z: Ry_BF * x_tmp - Rx_BF * y_tmp + z_tmp\n    };\n  } //cs_geocentric_from_wgs84()\n}\n","import {\n  PJD_3PARAM,\n  PJD_7PARAM,\n  PJD_GRIDSHIFT,\n  PJD_NODATUM,\n  R2D,\n  SRS_WGS84_ESQUARED,\n  SRS_WGS84_SEMIMAJOR, SRS_WGS84_SEMIMINOR\n} from './constants/values';\n\nimport {geodeticToGeocentric, geocentricToGeodetic, geocentricToWgs84, geocentricFromWgs84, compareDatums} from './datumUtils';\nimport adjust_lon from \"./common/adjust_lon\";\nfunction checkParams(type) {\n  return (type === PJD_3PARAM || type === PJD_7PARAM);\n}\n\nexport default function(source, dest, point) {\n  // Short cut if the datums are identical.\n  if (compareDatums(source, dest)) {\n    return point; // in this case, zero is sucess,\n    // whereas cs_compare_datums returns 1 to indicate TRUE\n    // confusing, should fix this\n  }\n\n  // Explicitly skip datum transform by setting 'datum=none' as parameter for either source or dest\n  if (source.datum_type === PJD_NODATUM || dest.datum_type === PJD_NODATUM) {\n    return point;\n  }\n\n  // If this datum requires grid shifts, then apply it to geodetic coordinates.\n  var source_a = source.a;\n  var source_es = source.es;\n  if (source.datum_type === PJD_GRIDSHIFT) {\n    var gridShiftCode = applyGridShift(source, false, point);\n    if (gridShiftCode !== 0) {\n      return undefined;\n    }\n    source_a = SRS_WGS84_SEMIMAJOR;\n    source_es = SRS_WGS84_ESQUARED;\n  }\n\n  var dest_a = dest.a;\n  var dest_b = dest.b;\n  var dest_es = dest.es;\n  if (dest.datum_type === PJD_GRIDSHIFT) {\n    dest_a = SRS_WGS84_SEMIMAJOR;\n    dest_b = SRS_WGS84_SEMIMINOR;\n    dest_es = SRS_WGS84_ESQUARED;\n  }\n\n  // Do we need to go through geocentric coordinates?\n  if (source_es === dest_es && source_a === dest_a && !checkParams(source.datum_type) &&  !checkParams(dest.datum_type)) {\n    return point;\n  }\n\n  // Convert to geocentric coordinates.\n  point = geodeticToGeocentric(point, source_es, source_a);\n  // Convert between datums\n  if (checkParams(source.datum_type)) {\n    point = geocentricToWgs84(point, source.datum_type, source.datum_params);\n  }\n  if (checkParams(dest.datum_type)) {\n    point = geocentricFromWgs84(point, dest.datum_type, dest.datum_params);\n  }\n  point = geocentricToGeodetic(point, dest_es, dest_a, dest_b);\n\n  if (dest.datum_type === PJD_GRIDSHIFT) {\n    var destGridShiftResult = applyGridShift(dest, true, point);\n    if (destGridShiftResult !== 0) {\n      return undefined;\n    }\n  }\n\n  return point;\n}\n\nexport function applyGridShift(source, inverse, point) {\n  if (source.grids === null || source.grids.length === 0) {\n    console.log('Grid shift grids not found');\n    return -1;\n  }\n  var input = {x: -point.x, y: point.y};\n  var output = {x: Number.NaN, y: Number.NaN};\n  var onlyMandatoryGrids = false;\n  var attemptedGrids = [];\n  for (var i = 0; i < source.grids.length; i++) {\n    var grid = source.grids[i];\n    attemptedGrids.push(grid.name);\n    if (grid.isNull) {\n      output = input;\n      break;\n    }\n    onlyMandatoryGrids = grid.mandatory;\n    if (grid.grid === null) {\n      if (grid.mandatory) {\n        console.log(\"Unable to find mandatory grid '\" + grid.name + \"'\");\n        return -1;\n      }\n      continue;\n    }\n    var subgrid = grid.grid.subgrids[0];\n    // skip tables that don't match our point at all\n    var epsilon = (Math.abs(subgrid.del[1]) + Math.abs(subgrid.del[0])) / 10000.0;\n    var minX = subgrid.ll[0] - epsilon;\n    var minY = subgrid.ll[1] - epsilon;\n    var maxX = subgrid.ll[0] + (subgrid.lim[0] - 1) * subgrid.del[0] + epsilon;\n    var maxY = subgrid.ll[1] + (subgrid.lim[1] - 1) * subgrid.del[1] + epsilon;\n    if (minY > input.y || minX > input.x || maxY < input.y || maxX < input.x ) {\n      continue;\n    }\n    output = applySubgridShift(input, inverse, subgrid);\n    if (!isNaN(output.x)) {\n      break;\n    }\n  }\n  if (isNaN(output.x)) {\n    console.log(\"Failed to find a grid shift table for location '\"+\n      -input.x * R2D + \" \" + input.y * R2D + \" tried: '\" + attemptedGrids + \"'\");\n    return -1;\n  }\n  point.x = -output.x;\n  point.y = output.y;\n  return 0;\n}\n\nfunction applySubgridShift(pin, inverse, ct) {\n  var val = {x: Number.NaN, y: Number.NaN};\n  if (isNaN(pin.x)) { return val; }\n  var tb = {x: pin.x, y: pin.y};\n  tb.x -= ct.ll[0];\n  tb.y -= ct.ll[1];\n  tb.x = adjust_lon(tb.x - Math.PI) + Math.PI;\n  var t = nadInterpolate(tb, ct);\n  if (inverse) {\n    if (isNaN(t.x)) {\n      return val;\n    }\n    t.x = tb.x - t.x;\n    t.y = tb.y - t.y;\n    var i = 9, tol = 1e-12;\n    var dif, del;\n    do {\n      del = nadInterpolate(t, ct);\n      if (isNaN(del.x)) {\n        console.log(\"Inverse grid shift iteration failed, presumably at grid edge.  Using first approximation.\");\n        break;\n      }\n      dif = {x: tb.x - (del.x + t.x), y: tb.y - (del.y + t.y)};\n      t.x += dif.x;\n      t.y += dif.y;\n    } while (i-- && Math.abs(dif.x) > tol && Math.abs(dif.y) > tol);\n    if (i < 0) {\n      console.log(\"Inverse grid shift iterator failed to converge.\");\n      return val;\n    }\n    val.x = adjust_lon(t.x + ct.ll[0]);\n    val.y = t.y + ct.ll[1];\n  } else {\n    if (!isNaN(t.x)) {\n      val.x = pin.x + t.x;\n      val.y = pin.y + t.y;\n    }\n  }\n  return val;\n}\n\nfunction nadInterpolate(pin, ct) {\n  var t = {x: pin.x / ct.del[0], y: pin.y / ct.del[1]};\n  var indx = {x: Math.floor(t.x), y: Math.floor(t.y)};\n  var frct = {x: t.x - 1.0 * indx.x, y: t.y - 1.0 * indx.y};\n  var val= {x: Number.NaN, y: Number.NaN};\n  var inx;\n  if (indx.x < 0 || indx.x >= ct.lim[0]) {\n    return val;\n  }\n  if (indx.y < 0 || indx.y >= ct.lim[1]) {\n    return val;\n  }\n  inx = (indx.y * ct.lim[0]) + indx.x;\n  var f00 = {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  inx++;\n  var f10= {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  inx += ct.lim[0];\n  var f11 = {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  inx--;\n  var f01 = {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  var m11 = frct.x * frct.y, m10 = frct.x * (1.0 - frct.y),\n    m00 = (1.0 - frct.x) * (1.0 - frct.y), m01 = (1.0 - frct.x) * frct.y;\n  val.x = (m00 * f00.x + m10 * f10.x + m01 * f01.x + m11 * f11.x);\n  val.y = (m00 * f00.y + m10 * f10.y + m01 * f01.y + m11 * f11.y);\n  return val;\n}\n","export default function(crs, denorm, point) {\n  var xin = point.x,\n    yin = point.y,\n    zin = point.z || 0.0;\n  var v, t, i;\n  var out = {};\n  for (i = 0; i < 3; i++) {\n    if (denorm && i === 2 && point.z === undefined) {\n      continue;\n    }\n    if (i === 0) {\n      v = xin;\n      if (\"ew\".indexOf(crs.axis[i]) !== -1) {\n        t = 'x';\n      } else {\n        t = 'y';\n      }\n\n    }\n    else if (i === 1) {\n      v = yin;\n      if (\"ns\".indexOf(crs.axis[i]) !== -1) {\n        t = 'y';\n      } else {\n        t = 'x';\n      }\n    }\n    else {\n      v = zin;\n      t = 'z';\n    }\n    switch (crs.axis[i]) {\n    case 'e':\n      out[t] = v;\n      break;\n    case 'w':\n      out[t] = -v;\n      break;\n    case 'n':\n      out[t] = v;\n      break;\n    case 's':\n      out[t] = -v;\n      break;\n    case 'u':\n      if (point[t] !== undefined) {\n        out.z = v;\n      }\n      break;\n    case 'd':\n      if (point[t] !== undefined) {\n        out.z = -v;\n      }\n      break;\n    default:\n      //console.log(\"ERROR: unknow axis (\"+crs.axis[i]+\") - check definition of \"+crs.projName);\n      return null;\n    }\n  }\n  return out;\n}\n","export default function (array){\n  var out = {\n    x: array[0],\n    y: array[1]\n  };\n  if (array.length>2) {\n    out.z = array[2];\n  }\n  if (array.length>3) {\n    out.m = array[3];\n  }\n  return out;\n}","export default function (point) {\n  checkCoord(point.x);\n  checkCoord(point.y);\n}\nfunction checkCoord(num) {\n  if (typeof Number.isFinite === 'function') {\n    if (Number.isFinite(num)) {\n      return;\n    }\n    throw new TypeError('coordinates must be finite numbers');\n  }\n  if (typeof num !== 'number' || num !== num || !isFinite(num)) {\n    throw new TypeError('coordinates must be finite numbers');\n  }\n}\n","import {D2R, R2D, PJD_3PARAM, PJD_7PARAM} from './constants/values';\nimport datum_transform from './datum_transform';\nimport adjust_axis from './adjust_axis';\nimport proj from './Proj';\nimport toPoint from './common/toPoint';\nimport checkSanity from './checkSanity';\n\nfunction checkNotWGS(source, dest) {\n  return ((source.datum.datum_type === PJD_3PARAM || source.datum.datum_type === PJD_7PARAM) && dest.datumCode !== 'WGS84') || ((dest.datum.datum_type === PJD_3PARAM || dest.datum.datum_type === PJD_7PARAM) && source.datumCode !== 'WGS84');\n}\n\nexport default function transform(source, dest, point) {\n  var wgs84;\n  if (Array.isArray(point)) {\n    point = toPoint(point);\n  }\n  checkSanity(point);\n  // Workaround for datum shifts towgs84, if either source or destination projection is not wgs84\n  if (source.datum && dest.datum && checkNotWGS(source, dest)) {\n    wgs84 = new proj('WGS84');\n    point = transform(source, wgs84, point);\n    source = wgs84;\n  }\n  // DGR, 2010/11/12\n  if (source.axis !== 'enu') {\n    point = adjust_axis(source, false, point);\n  }\n  // Transform source points to long/lat, if they aren't already.\n  if (source.projName === 'longlat') {\n    point = {\n      x: point.x * D2R,\n      y: point.y * D2R,\n      z: point.z || 0\n    };\n  } else {\n    if (source.to_meter) {\n      point = {\n        x: point.x * source.to_meter,\n        y: point.y * source.to_meter,\n        z: point.z || 0\n      };\n    }\n    point = source.inverse(point); // Convert Cartesian to longlat\n    if (!point) {\n      return;\n    }\n  }\n  // Adjust for the prime meridian if necessary\n  if (source.from_greenwich) {\n    point.x += source.from_greenwich;\n  }\n\n  // Convert datums if needed, and if possible.\n  point = datum_transform(source.datum, dest.datum, point);\n  if (!point) {\n    return;\n  }\n\n  // Adjust for the prime meridian if necessary\n  if (dest.from_greenwich) {\n    point = {\n      x: point.x - dest.from_greenwich,\n      y: point.y,\n      z: point.z || 0\n    };\n  }\n\n  if (dest.projName === 'longlat') {\n    // convert radians to decimal degrees\n    point = {\n      x: point.x * R2D,\n      y: point.y * R2D,\n      z: point.z || 0\n    };\n  } else { // else project\n    point = dest.forward(point);\n    if (dest.to_meter) {\n      point = {\n        x: point.x / dest.to_meter,\n        y: point.y / dest.to_meter,\n        z: point.z || 0\n      };\n    }\n  }\n\n  // DGR, 2010/11/12\n  if (dest.axis !== 'enu') {\n    return adjust_axis(dest, true, point);\n  }\n\n  return point;\n}\n","import proj from './Proj';\nimport transform from './transform';\nvar wgs84 = proj('WGS84');\n\nfunction transformer(from, to, coords) {\n  var transformedArray, out, keys;\n  if (Array.isArray(coords)) {\n    transformedArray = transform(from, to, coords) || {x: NaN, y: NaN};\n    if (coords.length > 2) {\n      if ((typeof from.name !== 'undefined' && from.name === 'geocent') || (typeof to.name !== 'undefined' && to.name === 'geocent')) {\n        if (typeof transformedArray.z === 'number') {\n          return [transformedArray.x, transformedArray.y, transformedArray.z].concat(coords.splice(3));\n        } else {\n          return [transformedArray.x, transformedArray.y, coords[2]].concat(coords.splice(3));\n        }\n      } else {\n        return [transformedArray.x, transformedArray.y].concat(coords.splice(2));\n      }\n    } else {\n      return [transformedArray.x, transformedArray.y];\n    }\n  } else {\n    out = transform(from, to, coords);\n    keys = Object.keys(coords);\n    if (keys.length === 2) {\n      return out;\n    }\n    keys.forEach(function (key) {\n      if ((typeof from.name !== 'undefined' && from.name === 'geocent') || (typeof to.name !== 'undefined' && to.name === 'geocent')) {\n        if (key === 'x' || key === 'y' || key === 'z') {\n          return;\n        }\n      } else {\n        if (key === 'x' || key === 'y') {\n          return;\n        }\n      }\n      out[key] = coords[key];\n    });\n    return out;\n  }\n}\n\nfunction checkProj(item) {\n  if (item instanceof proj) {\n    return item;\n  }\n  if (item.oProj) {\n    return item.oProj;\n  }\n  return proj(item);\n}\n\nfunction proj4(fromProj, toProj, coord) {\n  fromProj = checkProj(fromProj);\n  var single = false;\n  var obj;\n  if (typeof toProj === 'undefined') {\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  } else if (typeof toProj.x !== 'undefined' || Array.isArray(toProj)) {\n    coord = toProj;\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  }\n  toProj = checkProj(toProj);\n  if (coord) {\n    return transformer(fromProj, toProj, coord);\n  } else {\n    obj = {\n      forward: function (coords) {\n        return transformer(fromProj, toProj, coords);\n      },\n      inverse: function (coords) {\n        return transformer(toProj, fromProj, coords);\n      }\n    };\n    if (single) {\n      obj.oProj = toProj;\n    }\n    return obj;\n  }\n}\nexport default proj4;","\n\n\n/**\n * UTM zones are grouped, and assigned to one of a group of 6\n * sets.\n *\n * {int} @private\n */\nvar NUM_100K_SETS = 6;\n\n/**\n * The column letters (for easting) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_COLUMN_LETTERS = 'AJSAJS';\n\n/**\n * The row letters (for northing) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_ROW_LETTERS = 'AFAFAF';\n\nvar A = 65; // A\nvar I = 73; // I\nvar O = 79; // O\nvar V = 86; // V\nvar Z = 90; // Z\nexport default {\n  forward: forward,\n  inverse: inverse,\n  toPoint: toPoint\n};\n/**\n * Conversion of lat/lon to MGRS.\n *\n * @param {object} ll Object literal with lat and lon properties on a\n *     WGS84 ellipsoid.\n * @param {int} accuracy Accuracy in digits (5 for 1 m, 4 for 10 m, 3 for\n *      100 m, 2 for 1000 m or 1 for 10000 m). Optional, default is 5.\n * @return {string} the MGRS string for the given location and accuracy.\n */\nexport function forward(ll, accuracy) {\n  accuracy = accuracy || 5; // default accuracy 1m\n  return encode(LLtoUTM({\n    lat: ll[1],\n    lon: ll[0]\n  }), accuracy);\n};\n\n/**\n * Conversion of MGRS to lat/lon.\n *\n * @param {string} mgrs MGRS string.\n * @return {array} An array with left (longitude), bottom (latitude), right\n *     (longitude) and top (latitude) values in WGS84, representing the\n *     bounding box for the provided MGRS reference.\n */\nexport function inverse(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat, bbox.lon, bbox.lat];\n  }\n  return [bbox.left, bbox.bottom, bbox.right, bbox.top];\n};\n\nexport function toPoint(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat];\n  }\n  return [(bbox.left + bbox.right) / 2, (bbox.top + bbox.bottom) / 2];\n};\n/**\n * Conversion from degrees to radians.\n *\n * @private\n * @param {number} deg the angle in degrees.\n * @return {number} the angle in radians.\n */\nfunction degToRad(deg) {\n  return (deg * (Math.PI / 180.0));\n}\n\n/**\n * Conversion from radians to degrees.\n *\n * @private\n * @param {number} rad the angle in radians.\n * @return {number} the angle in degrees.\n */\nfunction radToDeg(rad) {\n  return (180.0 * (rad / Math.PI));\n}\n\n/**\n * Converts a set of Longitude and Latitude co-ordinates to UTM\n * using the WGS84 ellipsoid.\n *\n * @private\n * @param {object} ll Object literal with lat and lon properties\n *     representing the WGS84 coordinate to be converted.\n * @return {object} Object literal containing the UTM value with easting,\n *     northing, zoneNumber and zoneLetter properties, and an optional\n *     accuracy property in digits. Returns null if the conversion failed.\n */\nfunction LLtoUTM(ll) {\n  var Lat = ll.lat;\n  var Long = ll.lon;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var k0 = 0.9996;\n  var LongOrigin;\n  var eccPrimeSquared;\n  var N, T, C, A, M;\n  var LatRad = degToRad(Lat);\n  var LongRad = degToRad(Long);\n  var LongOriginRad;\n  var ZoneNumber;\n  // (int)\n  ZoneNumber = Math.floor((Long + 180) / 6) + 1;\n\n  //Make sure the longitude 180.00 is in Zone 60\n  if (Long === 180) {\n    ZoneNumber = 60;\n  }\n\n  // Special zone for Norway\n  if (Lat >= 56.0 && Lat < 64.0 && Long >= 3.0 && Long < 12.0) {\n    ZoneNumber = 32;\n  }\n\n  // Special zones for Svalbard\n  if (Lat >= 72.0 && Lat < 84.0) {\n    if (Long >= 0.0 && Long < 9.0) {\n      ZoneNumber = 31;\n    }\n    else if (Long >= 9.0 && Long < 21.0) {\n      ZoneNumber = 33;\n    }\n    else if (Long >= 21.0 && Long < 33.0) {\n      ZoneNumber = 35;\n    }\n    else if (Long >= 33.0 && Long < 42.0) {\n      ZoneNumber = 37;\n    }\n  }\n\n  LongOrigin = (ZoneNumber - 1) * 6 - 180 + 3; //+3 puts origin\n  // in middle of\n  // zone\n  LongOriginRad = degToRad(LongOrigin);\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  N = a / Math.sqrt(1 - eccSquared * Math.sin(LatRad) * Math.sin(LatRad));\n  T = Math.tan(LatRad) * Math.tan(LatRad);\n  C = eccPrimeSquared * Math.cos(LatRad) * Math.cos(LatRad);\n  A = Math.cos(LatRad) * (LongRad - LongOriginRad);\n\n  M = a * ((1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256) * LatRad - (3 * eccSquared / 8 + 3 * eccSquared * eccSquared / 32 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(2 * LatRad) + (15 * eccSquared * eccSquared / 256 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(4 * LatRad) - (35 * eccSquared * eccSquared * eccSquared / 3072) * Math.sin(6 * LatRad));\n\n  var UTMEasting = (k0 * N * (A + (1 - T + C) * A * A * A / 6.0 + (5 - 18 * T + T * T + 72 * C - 58 * eccPrimeSquared) * A * A * A * A * A / 120.0) + 500000.0);\n\n  var UTMNorthing = (k0 * (M + N * Math.tan(LatRad) * (A * A / 2 + (5 - T + 9 * C + 4 * C * C) * A * A * A * A / 24.0 + (61 - 58 * T + T * T + 600 * C - 330 * eccPrimeSquared) * A * A * A * A * A * A / 720.0)));\n  if (Lat < 0.0) {\n    UTMNorthing += 10000000.0; //10000000 meter offset for\n    // southern hemisphere\n  }\n\n  return {\n    northing: Math.round(UTMNorthing),\n    easting: Math.round(UTMEasting),\n    zoneNumber: ZoneNumber,\n    zoneLetter: getLetterDesignator(Lat)\n  };\n}\n\n/**\n * Converts UTM coords to lat/long, using the WGS84 ellipsoid. This is a convenience\n * class where the Zone can be specified as a single string eg.\"60N\" which\n * is then broken down into the ZoneNumber and ZoneLetter.\n *\n * @private\n * @param {object} utm An object literal with northing, easting, zoneNumber\n *     and zoneLetter properties. If an optional accuracy property is\n *     provided (in meters), a bounding box will be returned instead of\n *     latitude and longitude.\n * @return {object} An object literal containing either lat and lon values\n *     (if no accuracy was provided), or top, right, bottom and left values\n *     for the bounding box calculated according to the provided accuracy.\n *     Returns null if the conversion failed.\n */\nfunction UTMtoLL(utm) {\n\n  var UTMNorthing = utm.northing;\n  var UTMEasting = utm.easting;\n  var zoneLetter = utm.zoneLetter;\n  var zoneNumber = utm.zoneNumber;\n  // check the ZoneNummber is valid\n  if (zoneNumber < 0 || zoneNumber > 60) {\n    return null;\n  }\n\n  var k0 = 0.9996;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var eccPrimeSquared;\n  var e1 = (1 - Math.sqrt(1 - eccSquared)) / (1 + Math.sqrt(1 - eccSquared));\n  var N1, T1, C1, R1, D, M;\n  var LongOrigin;\n  var mu, phi1Rad;\n\n  // remove 500,000 meter offset for longitude\n  var x = UTMEasting - 500000.0;\n  var y = UTMNorthing;\n\n  // We must know somehow if we are in the Northern or Southern\n  // hemisphere, this is the only time we use the letter So even\n  // if the Zone letter isn't exactly correct it should indicate\n  // the hemisphere correctly\n  if (zoneLetter < 'N') {\n    y -= 10000000.0; // remove 10,000,000 meter offset used\n    // for southern hemisphere\n  }\n\n  // There are 60 zones with zone 1 being at West -180 to -174\n  LongOrigin = (zoneNumber - 1) * 6 - 180 + 3; // +3 puts origin\n  // in middle of\n  // zone\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  M = y / k0;\n  mu = M / (a * (1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256));\n\n  phi1Rad = mu + (3 * e1 / 2 - 27 * e1 * e1 * e1 / 32) * Math.sin(2 * mu) + (21 * e1 * e1 / 16 - 55 * e1 * e1 * e1 * e1 / 32) * Math.sin(4 * mu) + (151 * e1 * e1 * e1 / 96) * Math.sin(6 * mu);\n  // double phi1 = ProjMath.radToDeg(phi1Rad);\n\n  N1 = a / Math.sqrt(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad));\n  T1 = Math.tan(phi1Rad) * Math.tan(phi1Rad);\n  C1 = eccPrimeSquared * Math.cos(phi1Rad) * Math.cos(phi1Rad);\n  R1 = a * (1 - eccSquared) / Math.pow(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad), 1.5);\n  D = x / (N1 * k0);\n\n  var lat = phi1Rad - (N1 * Math.tan(phi1Rad) / R1) * (D * D / 2 - (5 + 3 * T1 + 10 * C1 - 4 * C1 * C1 - 9 * eccPrimeSquared) * D * D * D * D / 24 + (61 + 90 * T1 + 298 * C1 + 45 * T1 * T1 - 252 * eccPrimeSquared - 3 * C1 * C1) * D * D * D * D * D * D / 720);\n  lat = radToDeg(lat);\n\n  var lon = (D - (1 + 2 * T1 + C1) * D * D * D / 6 + (5 - 2 * C1 + 28 * T1 - 3 * C1 * C1 + 8 * eccPrimeSquared + 24 * T1 * T1) * D * D * D * D * D / 120) / Math.cos(phi1Rad);\n  lon = LongOrigin + radToDeg(lon);\n\n  var result;\n  if (utm.accuracy) {\n    var topRight = UTMtoLL({\n      northing: utm.northing + utm.accuracy,\n      easting: utm.easting + utm.accuracy,\n      zoneLetter: utm.zoneLetter,\n      zoneNumber: utm.zoneNumber\n    });\n    result = {\n      top: topRight.lat,\n      right: topRight.lon,\n      bottom: lat,\n      left: lon\n    };\n  }\n  else {\n    result = {\n      lat: lat,\n      lon: lon\n    };\n  }\n  return result;\n}\n\n/**\n * Calculates the MGRS letter designator for the given latitude.\n *\n * @private\n * @param {number} lat The latitude in WGS84 to get the letter designator\n *     for.\n * @return {char} The letter designator.\n */\nfunction getLetterDesignator(lat) {\n  //This is here as an error flag to show that the Latitude is\n  //outside MGRS limits\n  var LetterDesignator = 'Z';\n\n  if ((84 >= lat) && (lat >= 72)) {\n    LetterDesignator = 'X';\n  }\n  else if ((72 > lat) && (lat >= 64)) {\n    LetterDesignator = 'W';\n  }\n  else if ((64 > lat) && (lat >= 56)) {\n    LetterDesignator = 'V';\n  }\n  else if ((56 > lat) && (lat >= 48)) {\n    LetterDesignator = 'U';\n  }\n  else if ((48 > lat) && (lat >= 40)) {\n    LetterDesignator = 'T';\n  }\n  else if ((40 > lat) && (lat >= 32)) {\n    LetterDesignator = 'S';\n  }\n  else if ((32 > lat) && (lat >= 24)) {\n    LetterDesignator = 'R';\n  }\n  else if ((24 > lat) && (lat >= 16)) {\n    LetterDesignator = 'Q';\n  }\n  else if ((16 > lat) && (lat >= 8)) {\n    LetterDesignator = 'P';\n  }\n  else if ((8 > lat) && (lat >= 0)) {\n    LetterDesignator = 'N';\n  }\n  else if ((0 > lat) && (lat >= -8)) {\n    LetterDesignator = 'M';\n  }\n  else if ((-8 > lat) && (lat >= -16)) {\n    LetterDesignator = 'L';\n  }\n  else if ((-16 > lat) && (lat >= -24)) {\n    LetterDesignator = 'K';\n  }\n  else if ((-24 > lat) && (lat >= -32)) {\n    LetterDesignator = 'J';\n  }\n  else if ((-32 > lat) && (lat >= -40)) {\n    LetterDesignator = 'H';\n  }\n  else if ((-40 > lat) && (lat >= -48)) {\n    LetterDesignator = 'G';\n  }\n  else if ((-48 > lat) && (lat >= -56)) {\n    LetterDesignator = 'F';\n  }\n  else if ((-56 > lat) && (lat >= -64)) {\n    LetterDesignator = 'E';\n  }\n  else if ((-64 > lat) && (lat >= -72)) {\n    LetterDesignator = 'D';\n  }\n  else if ((-72 > lat) && (lat >= -80)) {\n    LetterDesignator = 'C';\n  }\n  return LetterDesignator;\n}\n\n/**\n * Encodes a UTM location as MGRS string.\n *\n * @private\n * @param {object} utm An object literal with easting, northing,\n *     zoneLetter, zoneNumber\n * @param {number} accuracy Accuracy in digits (1-5).\n * @return {string} MGRS string for the given UTM location.\n */\nfunction encode(utm, accuracy) {\n  // prepend with leading zeroes\n  var seasting = \"00000\" + utm.easting,\n    snorthing = \"00000\" + utm.northing;\n\n  return utm.zoneNumber + utm.zoneLetter + get100kID(utm.easting, utm.northing, utm.zoneNumber) + seasting.substr(seasting.length - 5, accuracy) + snorthing.substr(snorthing.length - 5, accuracy);\n}\n\n/**\n * Get the two letter 100k designator for a given UTM easting,\n * northing and zone number value.\n *\n * @private\n * @param {number} easting\n * @param {number} northing\n * @param {number} zoneNumber\n * @return the two letter 100k designator for the given UTM location.\n */\nfunction get100kID(easting, northing, zoneNumber) {\n  var setParm = get100kSetForZone(zoneNumber);\n  var setColumn = Math.floor(easting / 100000);\n  var setRow = Math.floor(northing / 100000) % 20;\n  return getLetter100kID(setColumn, setRow, setParm);\n}\n\n/**\n * Given a UTM zone number, figure out the MGRS 100K set it is in.\n *\n * @private\n * @param {number} i An UTM zone number.\n * @return {number} the 100k set the UTM zone is in.\n */\nfunction get100kSetForZone(i) {\n  var setParm = i % NUM_100K_SETS;\n  if (setParm === 0) {\n    setParm = NUM_100K_SETS;\n  }\n\n  return setParm;\n}\n\n/**\n * Get the two-letter MGRS 100k designator given information\n * translated from the UTM northing, easting and zone number.\n *\n * @private\n * @param {number} column the column index as it relates to the MGRS\n *        100k set spreadsheet, created from the UTM easting.\n *        Values are 1-8.\n * @param {number} row the row index as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM northing value. Values\n *        are from 0-19.\n * @param {number} parm the set block, as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM zone. Values are from\n *        1-60.\n * @return two letter MGRS 100k code.\n */\nfunction getLetter100kID(column, row, parm) {\n  // colOrigin and rowOrigin are the letters at the origin of the set\n  var index = parm - 1;\n  var colOrigin = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(index);\n  var rowOrigin = SET_ORIGIN_ROW_LETTERS.charCodeAt(index);\n\n  // colInt and rowInt are the letters to build to return\n  var colInt = colOrigin + column - 1;\n  var rowInt = rowOrigin + row;\n  var rollover = false;\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n    rollover = true;\n  }\n\n  if (colInt === I || (colOrigin < I && colInt > I) || ((colInt > I || colOrigin < I) && rollover)) {\n    colInt++;\n  }\n\n  if (colInt === O || (colOrigin < O && colInt > O) || ((colInt > O || colOrigin < O) && rollover)) {\n    colInt++;\n\n    if (colInt === I) {\n      colInt++;\n    }\n  }\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n    rollover = true;\n  }\n  else {\n    rollover = false;\n  }\n\n  if (((rowInt === I) || ((rowOrigin < I) && (rowInt > I))) || (((rowInt > I) || (rowOrigin < I)) && rollover)) {\n    rowInt++;\n  }\n\n  if (((rowInt === O) || ((rowOrigin < O) && (rowInt > O))) || (((rowInt > O) || (rowOrigin < O)) && rollover)) {\n    rowInt++;\n\n    if (rowInt === I) {\n      rowInt++;\n    }\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n  }\n\n  var twoLetter = String.fromCharCode(colInt) + String.fromCharCode(rowInt);\n  return twoLetter;\n}\n\n/**\n * Decode the UTM parameters from a MGRS string.\n *\n * @private\n * @param {string} mgrsString an UPPERCASE coordinate string is expected.\n * @return {object} An object literal with easting, northing, zoneLetter,\n *     zoneNumber and accuracy (in meters) properties.\n */\nfunction decode(mgrsString) {\n\n  if (mgrsString && mgrsString.length === 0) {\n    throw (\"MGRSPoint coverting from nothing\");\n  }\n\n  var length = mgrsString.length;\n\n  var hunK = null;\n  var sb = \"\";\n  var testChar;\n  var i = 0;\n\n  // get Zone number\n  while (!(/[A-Z]/).test(testChar = mgrsString.charAt(i))) {\n    if (i >= 2) {\n      throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n    }\n    sb += testChar;\n    i++;\n  }\n\n  var zoneNumber = parseInt(sb, 10);\n\n  if (i === 0 || i + 3 > length) {\n    // A good MGRS string has to be 4-5 digits long,\n    // ##AAA/#AAA at least.\n    throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n  }\n\n  var zoneLetter = mgrsString.charAt(i++);\n\n  // Should we check the zone letter here? Why not.\n  if (zoneLetter <= 'A' || zoneLetter === 'B' || zoneLetter === 'Y' || zoneLetter >= 'Z' || zoneLetter === 'I' || zoneLetter === 'O') {\n    throw (\"MGRSPoint zone letter \" + zoneLetter + \" not handled: \" + mgrsString);\n  }\n\n  hunK = mgrsString.substring(i, i += 2);\n\n  var set = get100kSetForZone(zoneNumber);\n\n  var east100k = getEastingFromChar(hunK.charAt(0), set);\n  var north100k = getNorthingFromChar(hunK.charAt(1), set);\n\n  // We have a bug where the northing may be 2000000 too low.\n  // How\n  // do we know when to roll over?\n\n  while (north100k < getMinNorthing(zoneLetter)) {\n    north100k += 2000000;\n  }\n\n  // calculate the char index for easting/northing separator\n  var remainder = length - i;\n\n  if (remainder % 2 !== 0) {\n    throw (\"MGRSPoint has to have an even number \\nof digits after the zone letter and two 100km letters - front \\nhalf for easting meters, second half for \\nnorthing meters\" + mgrsString);\n  }\n\n  var sep = remainder / 2;\n\n  var sepEasting = 0.0;\n  var sepNorthing = 0.0;\n  var accuracyBonus, sepEastingString, sepNorthingString, easting, northing;\n  if (sep > 0) {\n    accuracyBonus = 100000.0 / Math.pow(10, sep);\n    sepEastingString = mgrsString.substring(i, i + sep);\n    sepEasting = parseFloat(sepEastingString) * accuracyBonus;\n    sepNorthingString = mgrsString.substring(i + sep);\n    sepNorthing = parseFloat(sepNorthingString) * accuracyBonus;\n  }\n\n  easting = sepEasting + east100k;\n  northing = sepNorthing + north100k;\n\n  return {\n    easting: easting,\n    northing: northing,\n    zoneLetter: zoneLetter,\n    zoneNumber: zoneNumber,\n    accuracy: accuracyBonus\n  };\n}\n\n/**\n * Given the first letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the easting value that\n * should be added to the other, secondary easting value.\n *\n * @private\n * @param {char} e The first letter from a two-letter MGRS 100´k zone.\n * @param {number} set The MGRS table set for the zone number.\n * @return {number} The easting value for the given letter and set.\n */\nfunction getEastingFromChar(e, set) {\n  // colOrigin is the letter at the origin of the set for the\n  // column\n  var curCol = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(set - 1);\n  var eastingValue = 100000.0;\n  var rewindMarker = false;\n\n  while (curCol !== e.charCodeAt(0)) {\n    curCol++;\n    if (curCol === I) {\n      curCol++;\n    }\n    if (curCol === O) {\n      curCol++;\n    }\n    if (curCol > Z) {\n      if (rewindMarker) {\n        throw (\"Bad character: \" + e);\n      }\n      curCol = A;\n      rewindMarker = true;\n    }\n    eastingValue += 100000.0;\n  }\n\n  return eastingValue;\n}\n\n/**\n * Given the second letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the northing value that\n * should be added to the other, secondary northing value. You have to\n * remember that Northings are determined from the equator, and the vertical\n * cycle of letters mean a 2000000 additional northing meters. This happens\n * approx. every 18 degrees of latitude. This method does *NOT* count any\n * additional northings. You have to figure out how many 2000000 meters need\n * to be added for the zone letter of the MGRS coordinate.\n *\n * @private\n * @param {char} n Second letter of the MGRS 100k zone\n * @param {number} set The MGRS table set number, which is dependent on the\n *     UTM zone number.\n * @return {number} The northing value for the given letter and set.\n */\nfunction getNorthingFromChar(n, set) {\n\n  if (n > 'V') {\n    throw (\"MGRSPoint given invalid Northing \" + n);\n  }\n\n  // rowOrigin is the letter at the origin of the set for the\n  // column\n  var curRow = SET_ORIGIN_ROW_LETTERS.charCodeAt(set - 1);\n  var northingValue = 0.0;\n  var rewindMarker = false;\n\n  while (curRow !== n.charCodeAt(0)) {\n    curRow++;\n    if (curRow === I) {\n      curRow++;\n    }\n    if (curRow === O) {\n      curRow++;\n    }\n    // fixing a bug making whole application hang in this loop\n    // when 'n' is a wrong character\n    if (curRow > V) {\n      if (rewindMarker) { // making sure that this loop ends\n        throw (\"Bad character: \" + n);\n      }\n      curRow = A;\n      rewindMarker = true;\n    }\n    northingValue += 100000.0;\n  }\n\n  return northingValue;\n}\n\n/**\n * The function getMinNorthing returns the minimum northing value of a MGRS\n * zone.\n *\n * Ported from Geotrans' c Lattitude_Band_Value structure table.\n *\n * @private\n * @param {char} zoneLetter The MGRS zone to get the min northing for.\n * @return {number}\n */\nfunction getMinNorthing(zoneLetter) {\n  var northing;\n  switch (zoneLetter) {\n  case 'C':\n    northing = 1100000.0;\n    break;\n  case 'D':\n    northing = 2000000.0;\n    break;\n  case 'E':\n    northing = 2800000.0;\n    break;\n  case 'F':\n    northing = 3700000.0;\n    break;\n  case 'G':\n    northing = 4600000.0;\n    break;\n  case 'H':\n    northing = 5500000.0;\n    break;\n  case 'J':\n    northing = 6400000.0;\n    break;\n  case 'K':\n    northing = 7300000.0;\n    break;\n  case 'L':\n    northing = 8200000.0;\n    break;\n  case 'M':\n    northing = 9100000.0;\n    break;\n  case 'N':\n    northing = 0.0;\n    break;\n  case 'P':\n    northing = 800000.0;\n    break;\n  case 'Q':\n    northing = 1700000.0;\n    break;\n  case 'R':\n    northing = 2600000.0;\n    break;\n  case 'S':\n    northing = 3500000.0;\n    break;\n  case 'T':\n    northing = 4400000.0;\n    break;\n  case 'U':\n    northing = 5300000.0;\n    break;\n  case 'V':\n    northing = 6200000.0;\n    break;\n  case 'W':\n    northing = 7000000.0;\n    break;\n  case 'X':\n    northing = 7900000.0;\n    break;\n  default:\n    northing = -1.0;\n  }\n  if (northing >= 0.0) {\n    return northing;\n  }\n  else {\n    throw (\"Invalid zone letter: \" + zoneLetter);\n  }\n\n}\n","import {toPoint, forward} from 'mgrs';\n\nfunction Point(x, y, z) {\n  if (!(this instanceof Point)) {\n    return new Point(x, y, z);\n  }\n  if (Array.isArray(x)) {\n    this.x = x[0];\n    this.y = x[1];\n    this.z = x[2] || 0.0;\n  } else if(typeof x === 'object') {\n    this.x = x.x;\n    this.y = x.y;\n    this.z = x.z || 0.0;\n  } else if (typeof x === 'string' && typeof y === 'undefined') {\n    var coords = x.split(',');\n    this.x = parseFloat(coords[0], 10);\n    this.y = parseFloat(coords[1], 10);\n    this.z = parseFloat(coords[2], 10) || 0.0;\n  } else {\n    this.x = x;\n    this.y = y;\n    this.z = z || 0.0;\n  }\n  console.warn('proj4.Point will be removed in version 3, use proj4.toPoint');\n}\n\nPoint.fromMGRS = function(mgrsStr) {\n  return new Point(toPoint(mgrsStr));\n};\nPoint.prototype.toMGRS = function(accuracy) {\n  return forward([this.x, this.y], accuracy);\n};\nexport default Point;\n","var C00 = 1;\nvar C02 = 0.25;\nvar C04 = 0.046875;\nvar C06 = 0.01953125;\nvar C08 = 0.01068115234375;\nvar C22 = 0.75;\nvar C44 = 0.46875;\nvar C46 = 0.01302083333333333333;\nvar C48 = 0.00712076822916666666;\nvar C66 = 0.36458333333333333333;\nvar C68 = 0.00569661458333333333;\nvar C88 = 0.3076171875;\n\nexport default function(es) {\n  var en = [];\n  en[0] = C00 - es * (C02 + es * (C04 + es * (C06 + es * C08)));\n  en[1] = es * (C22 - es * (C04 + es * (C06 + es * C08)));\n  var t = es * es;\n  en[2] = t * (C44 - es * (C46 + es * C48));\n  t *= es;\n  en[3] = t * (C66 - es * C68);\n  en[4] = t * es * C88;\n  return en;\n}","export default function(phi, sphi, cphi, en) {\n  cphi *= sphi;\n  sphi *= sphi;\n  return (en[0] * phi - cphi * (en[1] + sphi * (en[2] + sphi * (en[3] + sphi * en[4]))));\n}","import pj_mlfn from \"./pj_mlfn\";\nimport {EPSLN} from '../constants/values';\n\nvar MAX_ITER = 20;\n\nexport default function(arg, es, en) {\n  var k = 1 / (1 - es);\n  var phi = arg;\n  for (var i = MAX_ITER; i; --i) { /* rarely goes over 2 iterations */\n    var s = Math.sin(phi);\n    var t = 1 - es * s * s;\n    //t = this.pj_mlfn(phi, s, Math.cos(phi), en) - arg;\n    //phi -= t * (t * Math.sqrt(t)) * k;\n    t = (pj_mlfn(phi, s, Math.cos(phi), en) - arg) * (t * Math.sqrt(t)) * k;\n    phi -= t;\n    if (Math.abs(t) < EPSLN) {\n      return phi;\n    }\n  }\n  //..reportError(\"cass:pj_inv_mlfn: Convergence error\");\n  return phi;\n}\n","// Heavily based on this tmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/tmerc.js\n\nimport pj_enfn from '../common/pj_enfn';\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport adjust_lon from '../common/adjust_lon';\n\nimport {EPSLN, HALF_PI} from '../constants/values';\nimport sign from '../common/sign';\n\nexport function init() {\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  if (this.es) {\n    this.en = pj_enfn(this.es);\n    this.ml0 = pj_mlfn(this.lat0, Math.sin(this.lat0), Math.cos(this.lat0), this.en);\n  }\n}\n\n/**\n    Transverse Mercator Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var con;\n  var x, y;\n  var sin_phi = Math.sin(lat);\n  var cos_phi = Math.cos(lat);\n\n  if (!this.es) {\n    var b = cos_phi * Math.sin(delta_lon);\n\n    if ((Math.abs(Math.abs(b) - 1)) < EPSLN) {\n      return (93);\n    }\n    else {\n      x = 0.5 * this.a * this.k0 * Math.log((1 + b) / (1 - b)) + this.x0;\n      y = cos_phi * Math.cos(delta_lon) / Math.sqrt(1 - Math.pow(b, 2));\n      b = Math.abs(y);\n\n      if (b >= 1) {\n        if ((b - 1) > EPSLN) {\n          return (93);\n        }\n        else {\n          y = 0;\n        }\n      }\n      else {\n        y = Math.acos(y);\n      }\n\n      if (lat < 0) {\n        y = -y;\n      }\n\n      y = this.a * this.k0 * (y - this.lat0) + this.y0;\n    }\n  }\n  else {\n    var al = cos_phi * delta_lon;\n    var als = Math.pow(al, 2);\n    var c = this.ep2 * Math.pow(cos_phi, 2);\n    var cs = Math.pow(c, 2);\n    var tq = Math.abs(cos_phi) > EPSLN ? Math.tan(lat) : 0;\n    var t = Math.pow(tq, 2);\n    var ts = Math.pow(t, 2);\n    con = 1 - this.es * Math.pow(sin_phi, 2);\n    al = al / Math.sqrt(con);\n    var ml = pj_mlfn(lat, sin_phi, cos_phi, this.en);\n\n    x = this.a * (this.k0 * al * (1 +\n      als / 6 * (1 - t + c +\n      als / 20 * (5 - 18 * t + ts + 14 * c - 58 * t * c +\n      als / 42 * (61 + 179 * ts - ts * t - 479 * t))))) +\n      this.x0;\n\n    y = this.a * (this.k0 * (ml - this.ml0 +\n      sin_phi * delta_lon * al / 2 * (1 +\n      als / 12 * (5 - t + 9 * c + 4 * cs +\n      als / 30 * (61 + ts - 58 * t + 270 * c - 330 * t * c +\n      als / 56 * (1385 + 543 * ts - ts * t - 3111 * t)))))) +\n      this.y0;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\n/**\n    Transverse Mercator Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var con, phi;\n  var lat, lon;\n  var x = (p.x - this.x0) * (1 / this.a);\n  var y = (p.y - this.y0) * (1 / this.a);\n\n  if (!this.es) {\n    var f = Math.exp(x / this.k0);\n    var g = 0.5 * (f - 1 / f);\n    var temp = this.lat0 + y / this.k0;\n    var h = Math.cos(temp);\n    con = Math.sqrt((1 - Math.pow(h, 2)) / (1 + Math.pow(g, 2)));\n    lat = Math.asin(con);\n\n    if (y < 0) {\n      lat = -lat;\n    }\n\n    if ((g === 0) && (h === 0)) {\n      lon = 0;\n    }\n    else {\n      lon = adjust_lon(Math.atan2(g, h) + this.long0);\n    }\n  }\n  else { // ellipsoidal form\n    con = this.ml0 + y / this.k0;\n    phi = pj_inv_mlfn(con, this.es, this.en);\n\n    if (Math.abs(phi) < HALF_PI) {\n      var sin_phi = Math.sin(phi);\n      var cos_phi = Math.cos(phi);\n      var tan_phi = Math.abs(cos_phi) > EPSLN ? Math.tan(phi) : 0;\n      var c = this.ep2 * Math.pow(cos_phi, 2);\n      var cs = Math.pow(c, 2);\n      var t = Math.pow(tan_phi, 2);\n      var ts = Math.pow(t, 2);\n      con = 1 - this.es * Math.pow(sin_phi, 2);\n      var d = x * Math.sqrt(con) / this.k0;\n      var ds = Math.pow(d, 2);\n      con = con * tan_phi;\n\n      lat = phi - (con * ds / (1 - this.es)) * 0.5 * (1 -\n        ds / 12 * (5 + 3 * t - 9 * c * t + c - 4 * cs -\n        ds / 30 * (61 + 90 * t - 252 * c * t + 45 * ts + 46 * c -\n        ds / 56 * (1385 + 3633 * t + 4095 * ts + 1574 * ts * t))));\n\n      lon = adjust_lon(this.long0 + (d * (1 -\n        ds / 6 * (1 + 2 * t + c -\n        ds / 20 * (5 + 28 * t + 24 * ts + 8 * c * t + 6 * c -\n        ds / 42 * (61 + 662 * t + 1320 * ts + 720 * ts * t)))) / cos_phi));\n    }\n    else {\n      lat = HALF_PI * sign(y);\n      lon = 0;\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Fast_Transverse_Mercator\", \"Fast Transverse Mercator\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function(x) {\n  var r = Math.exp(x);\n  r = (r - 1 / r) / 2;\n  return r;\n}","export default function(x, y) {\n  x = Math.abs(x);\n  y = Math.abs(y);\n  var a = Math.max(x, y);\n  var b = Math.min(x, y) / (a ? a : 1);\n\n  return a * Math.sqrt(1 + Math.pow(b, 2));\n}\n","export default function(x) {\n  var y = 1 + x;\n  var z = y - 1;\n\n  return z === 0 ? x : x * Math.log(y) / z;\n}\n","import hypot from './hypot';\nimport log1py from './log1py';\n\nexport default function(x) {\n  var y = Math.abs(x);\n  y = log1py(y * (1 + y / (hypot(1, y) + 1)));\n\n  return x < 0 ? -y : y;\n}\n","export default function(pp, B) {\n  var cos_2B = 2 * Math.cos(2 * B);\n  var i = pp.length - 1;\n  var h1 = pp[i];\n  var h2 = 0;\n  var h;\n\n  while (--i >= 0) {\n    h = -h2 + cos_2B * h1 + pp[i];\n    h2 = h1;\n    h1 = h;\n  }\n\n  return (B + h * Math.sin(2 * B));\n}\n","export default function(pp, arg_r) {\n  var r = 2 * Math.cos(arg_r);\n  var i = pp.length - 1;\n  var hr1 = pp[i];\n  var hr2 = 0;\n  var hr;\n\n  while (--i >= 0) {\n    hr = -hr2 + r * hr1 + pp[i];\n    hr2 = hr1;\n    hr1 = hr;\n  }\n\n  return Math.sin(arg_r) * hr;\n}\n","export default function(x) {\n  var r = Math.exp(x);\n  r = (r + 1 / r) / 2;\n  return r;\n}","import sinh from './sinh';\nimport cosh from './cosh';\n\nexport default function(pp, arg_r, arg_i) {\n  var sin_arg_r = Math.sin(arg_r);\n  var cos_arg_r = Math.cos(arg_r);\n  var sinh_arg_i = sinh(arg_i);\n  var cosh_arg_i = cosh(arg_i);\n  var r = 2 * cos_arg_r * cosh_arg_i;\n  var i = -2 * sin_arg_r * sinh_arg_i;\n  var j = pp.length - 1;\n  var hr = pp[j];\n  var hi1 = 0;\n  var hr1 = 0;\n  var hi = 0;\n  var hr2;\n  var hi2;\n\n  while (--j >= 0) {\n    hr2 = hr1;\n    hi2 = hi1;\n    hr1 = hr;\n    hi1 = hi;\n    hr = -hr2 + r * hr1 - i * hi1 + pp[j];\n    hi = -hi2 + i * hr1 + r * hi1;\n  }\n\n  r = sin_arg_r * cosh_arg_i;\n  i = cos_arg_r * sinh_arg_i;\n\n  return [r * hr - i * hi, r * hi + i * hr];\n}\n","// Heavily based on this etmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/etmerc.js\n\nimport tmerc from '../projections/tmerc';\nimport sinh from '../common/sinh';\nimport hypot from '../common/hypot';\nimport asinhy from '../common/asinhy';\nimport gatg from '../common/gatg';\nimport clens from '../common/clens';\nimport clens_cmplx from '../common/clens_cmplx';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  if (!this.approx && (isNaN(this.es) || this.es <= 0)) {\n    throw new Error('Incorrect elliptical usage. Try using the +approx option in the proj string, or PROJECTION[\"Fast_Transverse_Mercator\"] in the WKT.');\n  }\n  if (this.approx) {\n    // When '+approx' is set, use tmerc instead\n    tmerc.init.apply(this);\n    this.forward = tmerc.forward;\n    this.inverse = tmerc.inverse;\n  }\n\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  this.cgb = [];\n  this.cbg = [];\n  this.utg = [];\n  this.gtu = [];\n\n  var f = this.es / (1 + Math.sqrt(1 - this.es));\n  var n = f / (2 - f);\n  var np = n;\n\n  this.cgb[0] = n * (2 + n * (-2 / 3 + n * (-2 + n * (116 / 45 + n * (26 / 45 + n * (-2854 / 675 ))))));\n  this.cbg[0] = n * (-2 + n * ( 2 / 3 + n * ( 4 / 3 + n * (-82 / 45 + n * (32 / 45 + n * (4642 / 4725))))));\n\n  np = np * n;\n  this.cgb[1] = np * (7 / 3 + n * (-8 / 5 + n * (-227 / 45 + n * (2704 / 315 + n * (2323 / 945)))));\n  this.cbg[1] = np * (5 / 3 + n * (-16 / 15 + n * ( -13 / 9 + n * (904 / 315 + n * (-1522 / 945)))));\n\n  np = np * n;\n  this.cgb[2] = np * (56 / 15 + n * (-136 / 35 + n * (-1262 / 105 + n * (73814 / 2835))));\n  this.cbg[2] = np * (-26 / 15 + n * (34 / 21 + n * (8 / 5 + n * (-12686 / 2835))));\n\n  np = np * n;\n  this.cgb[3] = np * (4279 / 630 + n * (-332 / 35 + n * (-399572 / 14175)));\n  this.cbg[3] = np * (1237 / 630 + n * (-12 / 5 + n * ( -24832 / 14175)));\n\n  np = np * n;\n  this.cgb[4] = np * (4174 / 315 + n * (-144838 / 6237));\n  this.cbg[4] = np * (-734 / 315 + n * (109598 / 31185));\n\n  np = np * n;\n  this.cgb[5] = np * (601676 / 22275);\n  this.cbg[5] = np * (444337 / 155925);\n\n  np = Math.pow(n, 2);\n  this.Qn = this.k0 / (1 + n) * (1 + np * (1 / 4 + np * (1 / 64 + np / 256)));\n\n  this.utg[0] = n * (-0.5 + n * ( 2 / 3 + n * (-37 / 96 + n * ( 1 / 360 + n * (81 / 512 + n * (-96199 / 604800))))));\n  this.gtu[0] = n * (0.5 + n * (-2 / 3 + n * (5 / 16 + n * (41 / 180 + n * (-127 / 288 + n * (7891 / 37800))))));\n\n  this.utg[1] = np * (-1 / 48 + n * (-1 / 15 + n * (437 / 1440 + n * (-46 / 105 + n * (1118711 / 3870720)))));\n  this.gtu[1] = np * (13 / 48 + n * (-3 / 5 + n * (557 / 1440 + n * (281 / 630 + n * (-1983433 / 1935360)))));\n\n  np = np * n;\n  this.utg[2] = np * (-17 / 480 + n * (37 / 840 + n * (209 / 4480 + n * (-5569 / 90720 ))));\n  this.gtu[2] = np * (61 / 240 + n * (-103 / 140 + n * (15061 / 26880 + n * (167603 / 181440))));\n\n  np = np * n;\n  this.utg[3] = np * (-4397 / 161280 + n * (11 / 504 + n * (830251 / 7257600)));\n  this.gtu[3] = np * (49561 / 161280 + n * (-179 / 168 + n * (6601661 / 7257600)));\n\n  np = np * n;\n  this.utg[4] = np * (-4583 / 161280 + n * (108847 / 3991680));\n  this.gtu[4] = np * (34729 / 80640 + n * (-3418889 / 1995840));\n\n  np = np * n;\n  this.utg[5] = np * (-20648693 / 638668800);\n  this.gtu[5] = np * (212378941 / 319334400);\n\n  var Z = gatg(this.cbg, this.lat0);\n  this.Zb = -this.Qn * (Z + clens(this.gtu, 2 * Z));\n}\n\nexport function forward(p) {\n  var Ce = adjust_lon(p.x - this.long0);\n  var Cn = p.y;\n\n  Cn = gatg(this.cbg, Cn);\n  var sin_Cn = Math.sin(Cn);\n  var cos_Cn = Math.cos(Cn);\n  var sin_Ce = Math.sin(Ce);\n  var cos_Ce = Math.cos(Ce);\n\n  Cn = Math.atan2(sin_Cn, cos_Ce * cos_Cn);\n  Ce = Math.atan2(sin_Ce * cos_Cn, hypot(sin_Cn, cos_Cn * cos_Ce));\n  Ce = asinhy(Math.tan(Ce));\n\n  var tmp = clens_cmplx(this.gtu, 2 * Cn, 2 * Ce);\n\n  Cn = Cn + tmp[0];\n  Ce = Ce + tmp[1];\n\n  var x;\n  var y;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    x = this.a * (this.Qn * Ce) + this.x0;\n    y = this.a * (this.Qn * Cn + this.Zb) + this.y0;\n  }\n  else {\n    x = Infinity;\n    y = Infinity;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\nexport function inverse(p) {\n  var Ce = (p.x - this.x0) * (1 / this.a);\n  var Cn = (p.y - this.y0) * (1 / this.a);\n\n  Cn = (Cn - this.Zb) / this.Qn;\n  Ce = Ce / this.Qn;\n\n  var lon;\n  var lat;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    var tmp = clens_cmplx(this.utg, 2 * Cn, 2 * Ce);\n\n    Cn = Cn + tmp[0];\n    Ce = Ce + tmp[1];\n    Ce = Math.atan(sinh(Ce));\n\n    var sin_Cn = Math.sin(Cn);\n    var cos_Cn = Math.cos(Cn);\n    var sin_Ce = Math.sin(Ce);\n    var cos_Ce = Math.cos(Ce);\n\n    Cn = Math.atan2(sin_Cn * cos_Ce, hypot(sin_Ce, cos_Ce * cos_Cn));\n    Ce = Math.atan2(sin_Ce, cos_Ce * cos_Cn);\n\n    lon = adjust_lon(Ce + this.long0);\n    lat = gatg(this.cgb, Cn);\n  }\n  else {\n    lon = Infinity;\n    lat = Infinity;\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Extended_Transverse_Mercator\", \"Extended Transverse Mercator\", \"etmerc\", \"Transverse_Mercator\", \"Transverse Mercator\", \"tmerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from './adjust_lon';\n\nexport default function(zone, lon) {\n  if (zone === undefined) {\n    zone = Math.floor((adjust_lon(lon) + Math.PI) * 30 / Math.PI) + 1;\n\n    if (zone < 0) {\n      return 0;\n    } else if (zone > 60) {\n      return 60;\n    }\n  }\n  return zone;\n}\n","import adjust_zone from '../common/adjust_zone';\nimport etmerc from './etmerc';\nexport var dependsOn = 'etmerc';\nimport {D2R} from '../constants/values';\n\n\nexport function init() {\n  var zone = adjust_zone(this.zone, this.long0);\n  if (zone === undefined) {\n    throw new Error('unknown utm zone');\n  }\n  this.lat0 = 0;\n  this.long0 =  ((6 * Math.abs(zone)) - 183) * D2R;\n  this.x0 = 500000;\n  this.y0 = this.utmSouth ? 10000000 : 0;\n  this.k0 = 0.9996;\n\n  etmerc.init.apply(this);\n  this.forward = etmerc.forward;\n  this.inverse = etmerc.inverse;\n}\n\nexport var names = [\"Universal Transverse Mercator System\", \"utm\"];\nexport default {\n  init: init,\n  names: names,\n  dependsOn: dependsOn\n};\n","export default function(esinp, exp) {\n  return (Math.pow((1 - esinp) / (1 + esinp), exp));\n}","import srat from '../common/srat';\nvar MAX_ITER = 20;\nimport {HALF_PI, FORTPI} from '../constants/values';\n\nexport function init() {\n  var sphi = Math.sin(this.lat0);\n  var cphi = Math.cos(this.lat0);\n  cphi *= cphi;\n  this.rc = Math.sqrt(1 - this.es) / (1 - this.es * sphi * sphi);\n  this.C = Math.sqrt(1 + this.es * cphi * cphi / (1 - this.es));\n  this.phic0 = Math.asin(sphi / this.C);\n  this.ratexp = 0.5 * this.C * this.e;\n  this.K = Math.tan(0.5 * this.phic0 + FORTPI) / (Math.pow(Math.tan(0.5 * this.lat0 + FORTPI), this.C) * srat(this.e * sphi, this.ratexp));\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  p.y = 2 * Math.atan(this.K * Math.pow(Math.tan(0.5 * lat + FORTPI), this.C) * srat(this.e * Math.sin(lat), this.ratexp)) - HALF_PI;\n  p.x = this.C * lon;\n  return p;\n}\n\nexport function inverse(p) {\n  var DEL_TOL = 1e-14;\n  var lon = p.x / this.C;\n  var lat = p.y;\n  var num = Math.pow(Math.tan(0.5 * lat + FORTPI) / this.K, 1 / this.C);\n  for (var i = MAX_ITER; i > 0; --i) {\n    lat = 2 * Math.atan(num * srat(this.e * Math.sin(p.y), - 0.5 * this.e)) - HALF_PI;\n    if (Math.abs(lat - p.y) < DEL_TOL) {\n      break;\n    }\n    p.y = lat;\n  }\n  /* convergence failed */\n  if (!i) {\n    return null;\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gauss\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import gauss from './gauss';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  gauss.init.apply(this);\n  if (!this.rc) {\n    return;\n  }\n  this.sinc0 = Math.sin(this.phic0);\n  this.cosc0 = Math.cos(this.phic0);\n  this.R2 = 2 * this.rc;\n  if (!this.title) {\n    this.title = \"Oblique Stereographic Alternative\";\n  }\n}\n\nexport function forward(p) {\n  var sinc, cosc, cosl, k;\n  p.x = adjust_lon(p.x - this.long0);\n  gauss.forward.apply(this, [p]);\n  sinc = Math.sin(p.y);\n  cosc = Math.cos(p.y);\n  cosl = Math.cos(p.x);\n  k = this.k0 * this.R2 / (1 + this.sinc0 * sinc + this.cosc0 * cosc * cosl);\n  p.x = k * cosc * Math.sin(p.x);\n  p.y = k * (this.cosc0 * sinc - this.sinc0 * cosc * cosl);\n  p.x = this.a * p.x + this.x0;\n  p.y = this.a * p.y + this.y0;\n  return p;\n}\n\nexport function inverse(p) {\n  var sinc, cosc, lon, lat, rho;\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n  if ((rho = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    var c = 2 * Math.atan2(rho, this.R2);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n    lat = Math.asin(cosc * this.sinc0 + p.y * sinc * this.cosc0 / rho);\n    lon = Math.atan2(p.x * sinc, rho * this.cosc0 * cosc - p.y * this.sinc0 * sinc);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  gauss.inverse.apply(this, [p]);\n  p.x = adjust_lon(p.x + this.long0);\n  return p;\n}\n\nexport var names = [\"Stereographic_North_Pole\", \"Oblique_Stereographic\", \"Polar_Stereographic\", \"sterea\",\"Oblique Stereographic Alternative\",\"Double_Stereographic\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {EPSLN, HALF_PI} from '../constants/values';\n\nimport sign from '../common/sign';\nimport msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function ssfn_(phit, sinphi, eccen) {\n  sinphi *= eccen;\n  return (Math.tan(0.5 * (HALF_PI + phit)) * Math.pow((1 - sinphi) / (1 + sinphi), 0.5 * eccen));\n}\n\nexport function init() {\n  this.coslat0 = Math.cos(this.lat0);\n  this.sinlat0 = Math.sin(this.lat0);\n  if (this.sphere) {\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * (1 + sign(this.lat0) * Math.sin(this.lat_ts));\n    }\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (this.lat0 > 0) {\n        //North pole\n        //trace('stere:north pole');\n        this.con = 1;\n      }\n      else {\n        //South pole\n        //trace('stere:south pole');\n        this.con = -1;\n      }\n    }\n    this.cons = Math.sqrt(Math.pow(1 + this.e, 1 + this.e) * Math.pow(1 - this.e, 1 - this.e));\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * this.cons * msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts)) / tsfnz(this.e, this.con * this.lat_ts, this.con * Math.sin(this.lat_ts));\n    }\n    this.ms1 = msfnz(this.e, this.sinlat0, this.coslat0);\n    this.X0 = 2 * Math.atan(this.ssfn_(this.lat0, this.sinlat0, this.e)) - HALF_PI;\n    this.cosX0 = Math.cos(this.X0);\n    this.sinX0 = Math.sin(this.X0);\n  }\n}\n\n// Stereographic forward equations--mapping lat,long to x,y\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinlat = Math.sin(lat);\n  var coslat = Math.cos(lat);\n  var A, X, sinX, cosX, ts, rh;\n  var dlon = adjust_lon(lon - this.long0);\n\n  if (Math.abs(Math.abs(lon - this.long0) - Math.PI) <= EPSLN && Math.abs(lat + this.lat0) <= EPSLN) {\n    //case of the origine point\n    //trace('stere:this is the origin point');\n    p.x = NaN;\n    p.y = NaN;\n    return p;\n  }\n  if (this.sphere) {\n    //trace('stere:sphere case');\n    A = 2 * this.k0 / (1 + this.sinlat0 * sinlat + this.coslat0 * coslat * Math.cos(dlon));\n    p.x = this.a * A * coslat * Math.sin(dlon) + this.x0;\n    p.y = this.a * A * (this.coslat0 * sinlat - this.sinlat0 * coslat * Math.cos(dlon)) + this.y0;\n    return p;\n  }\n  else {\n    X = 2 * Math.atan(this.ssfn_(lat, sinlat, this.e)) - HALF_PI;\n    cosX = Math.cos(X);\n    sinX = Math.sin(X);\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      ts = tsfnz(this.e, lat * this.con, this.con * sinlat);\n      rh = 2 * this.a * this.k0 * ts / this.cons;\n      p.x = this.x0 + rh * Math.sin(lon - this.long0);\n      p.y = this.y0 - this.con * rh * Math.cos(lon - this.long0);\n      //trace(p.toString());\n      return p;\n    }\n    else if (Math.abs(this.sinlat0) < EPSLN) {\n      //Eq\n      //trace('stere:equateur');\n      A = 2 * this.a * this.k0 / (1 + cosX * Math.cos(dlon));\n      p.y = A * sinX;\n    }\n    else {\n      //other case\n      //trace('stere:normal case');\n      A = 2 * this.a * this.k0 * this.ms1 / (this.cosX0 * (1 + this.sinX0 * sinX + this.cosX0 * cosX * Math.cos(dlon)));\n      p.y = A * (this.cosX0 * sinX - this.sinX0 * cosX * Math.cos(dlon)) + this.y0;\n    }\n    p.x = A * cosX * Math.sin(dlon) + this.x0;\n  }\n  //trace(p.toString());\n  return p;\n}\n\n//* Stereographic inverse equations--mapping x,y to lat/long\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat, ts, ce, Chi;\n  var rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  if (this.sphere) {\n    var c = 2 * Math.atan(rh / (2 * this.a * this.k0));\n    lon = this.long0;\n    lat = this.lat0;\n    if (rh <= EPSLN) {\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    lat = Math.asin(Math.cos(c) * this.sinlat0 + p.y * Math.sin(c) * this.coslat0 / rh);\n    if (Math.abs(this.coslat0) < EPSLN) {\n      if (this.lat0 > 0) {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      }\n      else {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      }\n    }\n    else {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(c), rh * this.coslat0 * Math.cos(c) - p.y * this.sinlat0 * Math.sin(c)));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (rh <= EPSLN) {\n        lat = this.lat0;\n        lon = this.long0;\n        p.x = lon;\n        p.y = lat;\n        //trace(p.toString());\n        return p;\n      }\n      p.x *= this.con;\n      p.y *= this.con;\n      ts = rh * this.cons / (2 * this.a * this.k0);\n      lat = this.con * phi2z(this.e, ts);\n      lon = this.con * adjust_lon(this.con * this.long0 + Math.atan2(p.x, - 1 * p.y));\n    }\n    else {\n      ce = 2 * Math.atan(rh * this.cosX0 / (2 * this.a * this.k0 * this.ms1));\n      lon = this.long0;\n      if (rh <= EPSLN) {\n        Chi = this.X0;\n      }\n      else {\n        Chi = Math.asin(Math.cos(ce) * this.sinX0 + p.y * Math.sin(ce) * this.cosX0 / rh);\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(ce), rh * this.cosX0 * Math.cos(ce) - p.y * this.sinX0 * Math.sin(ce)));\n      }\n      lat = -1 * phi2z(this.e, Math.tan(0.5 * (HALF_PI + Chi)));\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n\n  //trace(p.toString());\n  return p;\n\n}\n\nexport var names = [\"stere\", \"Stereographic_South_Pole\", \"Polar Stereographic (variant B)\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  ssfn_: ssfn_\n};\n","/*\n  references:\n    Formules et constantes pour le Calcul pour la\n    projection cylindrique conforme à axe oblique et pour la transformation entre\n    des systèmes de référence.\n    http://www.swisstopo.admin.ch/internet/swisstopo/fr/home/topics/survey/sys/refsys/switzerland.parsysrelated1.31216.downloadList.77004.DownloadFile.tmp/swissprojectionfr.pdf\n  */\n\nexport function init() {\n  var phy0 = this.lat0;\n  this.lambda0 = this.long0;\n  var sinPhy0 = Math.sin(phy0);\n  var semiMajorAxis = this.a;\n  var invF = this.rf;\n  var flattening = 1 / invF;\n  var e2 = 2 * flattening - Math.pow(flattening, 2);\n  var e = this.e = Math.sqrt(e2);\n  this.R = this.k0 * semiMajorAxis * Math.sqrt(1 - e2) / (1 - e2 * Math.pow(sinPhy0, 2));\n  this.alpha = Math.sqrt(1 + e2 / (1 - e2) * Math.pow(Math.cos(phy0), 4));\n  this.b0 = Math.asin(sinPhy0 / this.alpha);\n  var k1 = Math.log(Math.tan(Math.PI / 4 + this.b0 / 2));\n  var k2 = Math.log(Math.tan(Math.PI / 4 + phy0 / 2));\n  var k3 = Math.log((1 + e * sinPhy0) / (1 - e * sinPhy0));\n  this.K = k1 - this.alpha * k2 + this.alpha * e / 2 * k3;\n}\n\nexport function forward(p) {\n  var Sa1 = Math.log(Math.tan(Math.PI / 4 - p.y / 2));\n  var Sa2 = this.e / 2 * Math.log((1 + this.e * Math.sin(p.y)) / (1 - this.e * Math.sin(p.y)));\n  var S = -this.alpha * (Sa1 + Sa2) + this.K;\n\n  // spheric latitude\n  var b = 2 * (Math.atan(Math.exp(S)) - Math.PI / 4);\n\n  // spheric longitude\n  var I = this.alpha * (p.x - this.lambda0);\n\n  // psoeudo equatorial rotation\n  var rotI = Math.atan(Math.sin(I) / (Math.sin(this.b0) * Math.tan(b) + Math.cos(this.b0) * Math.cos(I)));\n\n  var rotB = Math.asin(Math.cos(this.b0) * Math.sin(b) - Math.sin(this.b0) * Math.cos(b) * Math.cos(I));\n\n  p.y = this.R / 2 * Math.log((1 + Math.sin(rotB)) / (1 - Math.sin(rotB))) + this.y0;\n  p.x = this.R * rotI + this.x0;\n  return p;\n}\n\nexport function inverse(p) {\n  var Y = p.x - this.x0;\n  var X = p.y - this.y0;\n\n  var rotI = Y / this.R;\n  var rotB = 2 * (Math.atan(Math.exp(X / this.R)) - Math.PI / 4);\n\n  var b = Math.asin(Math.cos(this.b0) * Math.sin(rotB) + Math.sin(this.b0) * Math.cos(rotB) * Math.cos(rotI));\n  var I = Math.atan(Math.sin(rotI) / (Math.cos(this.b0) * Math.cos(rotI) - Math.sin(this.b0) * Math.tan(rotB)));\n\n  var lambda = this.lambda0 + I / this.alpha;\n\n  var S = 0;\n  var phy = b;\n  var prevPhy = -1000;\n  var iteration = 0;\n  while (Math.abs(phy - prevPhy) > 0.0000001) {\n    if (++iteration > 20) {\n      //...reportError(\"omercFwdInfinity\");\n      return;\n    }\n    //S = Math.log(Math.tan(Math.PI / 4 + phy / 2));\n    S = 1 / this.alpha * (Math.log(Math.tan(Math.PI / 4 + b / 2)) - this.K) + this.e * Math.log(Math.tan(Math.PI / 4 + Math.asin(this.e * Math.sin(phy)) / 2));\n    prevPhy = phy;\n    phy = 2 * Math.atan(Math.exp(S)) - Math.PI / 2;\n  }\n\n  p.x = lambda;\n  p.y = phy;\n  return p;\n}\n\nexport var names = [\"somerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import tsfnz from '../common/tsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport { D2R, EPSLN, HALF_PI, TWO_PI, FORTPI } from '../constants/values';\n\nvar TOL = 1e-7;\n\nfunction isTypeA(P) {\n  var typeAProjections = ['Hotine_Oblique_Mercator','Hotine_Oblique_Mercator_Azimuth_Natural_Origin'];\n  var projectionName = typeof P.PROJECTION === \"object\" ? Object.keys(P.PROJECTION)[0] : P.PROJECTION;\n  \n  return 'no_uoff' in P || 'no_off' in P || typeAProjections.indexOf(projectionName) !== -1;\n}\n\n\n/* Initialize the Oblique Mercator  projection\n    ------------------------------------------*/\nexport function init() {  \n  var con, com, cosph0, D, F, H, L, sinph0, p, J, gamma = 0,\n    gamma0, lamc = 0, lam1 = 0, lam2 = 0, phi1 = 0, phi2 = 0, alpha_c = 0, AB;\n  \n  // only Type A uses the no_off or no_uoff property\n  // https://github.com/OSGeo/proj.4/issues/104\n  this.no_off = isTypeA(this);\n  this.no_rot = 'no_rot' in this;\n  \n  var alp = false;\n  if (\"alpha\" in this) {\n    alp = true;\n  }\n\n  var gam = false;\n  if (\"rectified_grid_angle\" in this) {\n    gam = true;\n  }\n\n  if (alp) {\n    alpha_c = this.alpha;\n  }\n  \n  if (gam) {\n    gamma = (this.rectified_grid_angle * D2R);\n  }\n  \n  if (alp || gam) {\n    lamc = this.longc;\n  } else {\n    lam1 = this.long1;\n    phi1 = this.lat1;\n    lam2 = this.long2;\n    phi2 = this.lat2;\n    \n    if (Math.abs(phi1 - phi2) <= TOL || (con = Math.abs(phi1)) <= TOL ||\n        Math.abs(con - HALF_PI) <= TOL || Math.abs(Math.abs(this.lat0) - HALF_PI) <= TOL ||\n        Math.abs(Math.abs(phi2) - HALF_PI) <= TOL) {\n      throw new Error();\n    }\n  }\n  \n  var one_es = 1.0 - this.es;\n  com = Math.sqrt(one_es);\n  \n  if (Math.abs(this.lat0) > EPSLN) {\n    sinph0 = Math.sin(this.lat0);\n    cosph0 = Math.cos(this.lat0);\n    con = 1 - this.es * sinph0 * sinph0;\n    this.B = cosph0 * cosph0;\n    this.B = Math.sqrt(1 + this.es * this.B * this.B / one_es);\n    this.A = this.B * this.k0 * com / con;\n    D = this.B * com / (cosph0 * Math.sqrt(con));\n    F = D * D -1;\n    \n    if (F <= 0) {\n      F = 0;\n    } else {\n      F = Math.sqrt(F);\n      if (this.lat0 < 0) {\n        F = -F;\n      }\n    }\n    \n    this.E = F += D;\n    this.E *= Math.pow(tsfnz(this.e, this.lat0, sinph0), this.B);\n  } else {\n    this.B = 1 / com;\n    this.A = this.k0;\n    this.E = D = F = 1;\n  }\n  \n  if (alp || gam) {\n    if (alp) {\n      gamma0 = Math.asin(Math.sin(alpha_c) / D);\n      if (!gam) {\n        gamma = alpha_c;\n      }\n    } else {\n      gamma0 = gamma;\n      alpha_c = Math.asin(D * Math.sin(gamma0));\n    }\n    this.lam0 = lamc - Math.asin(0.5 * (F - 1 / F) * Math.tan(gamma0)) / this.B;\n  } else {\n    H = Math.pow(tsfnz(this.e, phi1, Math.sin(phi1)), this.B);\n    L = Math.pow(tsfnz(this.e, phi2, Math.sin(phi2)), this.B);\n    F = this.E / H;\n    p = (L - H) / (L + H);\n    J = this.E * this.E;\n    J = (J - L * H) / (J + L * H);\n    con = lam1 - lam2;\n    \n    if (con < -Math.pi) {\n      lam2 -=TWO_PI;\n    } else if (con > Math.pi) {\n      lam2 += TWO_PI;\n    }\n    \n    this.lam0 = adjust_lon(0.5 * (lam1 + lam2) - Math.atan(J * Math.tan(0.5 * this.B * (lam1 - lam2)) / p) / this.B);\n    gamma0 = Math.atan(2 * Math.sin(this.B * adjust_lon(lam1 - this.lam0)) / (F - 1 / F));\n    gamma = alpha_c = Math.asin(D * Math.sin(gamma0));\n  }\n  \n  this.singam = Math.sin(gamma0);\n  this.cosgam = Math.cos(gamma0);\n  this.sinrot = Math.sin(gamma);\n  this.cosrot = Math.cos(gamma);\n  \n  this.rB = 1 / this.B;\n  this.ArB = this.A * this.rB;\n  this.BrA = 1 / this.ArB;\n  AB = this.A * this.B;\n  \n  if (this.no_off) {\n    this.u_0 = 0;\n  } else {\n    this.u_0 = Math.abs(this.ArB * Math.atan(Math.sqrt(D * D - 1) / Math.cos(alpha_c)));\n    \n    if (this.lat0 < 0) {\n      this.u_0 = - this.u_0;\n    }  \n  }\n    \n  F = 0.5 * gamma0;\n  this.v_pole_n = this.ArB * Math.log(Math.tan(FORTPI - F));\n  this.v_pole_s = this.ArB * Math.log(Math.tan(FORTPI + F));\n}\n\n\n/* Oblique Mercator forward equations--mapping lat,long to x,y\n    ----------------------------------------------------------*/\nexport function forward(p) {\n  var coords = {};\n  var S, T, U, V, W, temp, u, v;\n  p.x = p.x - this.lam0;\n  \n  if (Math.abs(Math.abs(p.y) - HALF_PI) > EPSLN) {\n    W = this.E / Math.pow(tsfnz(this.e, p.y, Math.sin(p.y)), this.B);\n    \n    temp = 1 / W;\n    S = 0.5 * (W - temp);\n    T = 0.5 * (W + temp);\n    V = Math.sin(this.B * p.x);\n    U = (S * this.singam - V * this.cosgam) / T;\n        \n    if (Math.abs(Math.abs(U) - 1.0) < EPSLN) {\n      throw new Error();\n    }\n    \n    v = 0.5 * this.ArB * Math.log((1 - U)/(1 + U));\n    temp = Math.cos(this.B * p.x);\n    \n    if (Math.abs(temp) < TOL) {\n      u = this.A * p.x;\n    } else {\n      u = this.ArB * Math.atan2((S * this.cosgam + V * this.singam), temp);\n    }    \n  } else {\n    v = p.y > 0 ? this.v_pole_n : this.v_pole_s;\n    u = this.ArB * p.y;\n  }\n     \n  if (this.no_rot) {\n    coords.x = u;\n    coords.y = v;\n  } else {\n    u -= this.u_0;\n    coords.x = v * this.cosrot + u * this.sinrot;\n    coords.y = u * this.cosrot - v * this.sinrot;\n  }\n  \n  coords.x = (this.a * coords.x + this.x0);\n  coords.y = (this.a * coords.y + this.y0);\n  \n  return coords;\n}\n\nexport function inverse(p) {\n  var u, v, Qp, Sp, Tp, Vp, Up;\n  var coords = {};\n  \n  p.x = (p.x - this.x0) * (1.0 / this.a);\n  p.y = (p.y - this.y0) * (1.0 / this.a);\n\n  if (this.no_rot) {\n    v = p.y;\n    u = p.x;\n  } else {\n    v = p.x * this.cosrot - p.y * this.sinrot;\n    u = p.y * this.cosrot + p.x * this.sinrot + this.u_0;\n  }\n  \n  Qp = Math.exp(-this.BrA * v);\n  Sp = 0.5 * (Qp - 1 / Qp);\n  Tp = 0.5 * (Qp + 1 / Qp);\n  Vp = Math.sin(this.BrA * u);\n  Up = (Vp * this.cosgam + Sp * this.singam) / Tp;\n  \n  if (Math.abs(Math.abs(Up) - 1) < EPSLN) {\n    coords.x = 0;\n    coords.y = Up < 0 ? -HALF_PI : HALF_PI;\n  } else {\n    coords.y = this.E / Math.sqrt((1 + Up) / (1 - Up));\n    coords.y = phi2z(this.e, Math.pow(coords.y, 1 / this.B));\n    \n    if (coords.y === Infinity) {\n      throw new Error();\n    }\n        \n    coords.x = -this.rB * Math.atan2((Sp * this.cosgam - Vp * this.singam), Math.cos(this.BrA * u));\n  }\n  \n  coords.x += this.lam0;\n  \n  return coords;\n}\n\nexport var names = [\"Hotine_Oblique_Mercator\", \"Hotine Oblique Mercator\", \"Hotine_Oblique_Mercator_Azimuth_Natural_Origin\", \"Hotine_Oblique_Mercator_Two_Point_Natural_Origin\", \"Hotine_Oblique_Mercator_Azimuth_Center\", \"Oblique_Mercator\", \"omerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport sign from '../common/sign';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport {HALF_PI, EPSLN} from '../constants/values';\nexport function init() {\n\n  // array of:  r_maj,r_min,lat1,lat2,c_lon,c_lat,false_east,false_north\n  //double c_lat;                   /* center latitude                      */\n  //double c_lon;                   /* center longitude                     */\n  //double lat1;                    /* first standard parallel              */\n  //double lat2;                    /* second standard parallel             */\n  //double r_maj;                   /* major axis                           */\n  //double r_min;                   /* minor axis                           */\n  //double false_east;              /* x offset in meters                   */\n  //double false_north;             /* y offset in meters                   */\n\n  if (!this.lat2) {\n    this.lat2 = this.lat1;\n  } //if lat2 is not defined\n  if (!this.k0) {\n    this.k0 = 1;\n  }\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n\n  var temp = this.b / this.a;\n  this.e = Math.sqrt(1 - temp * temp);\n\n  var sin1 = Math.sin(this.lat1);\n  var cos1 = Math.cos(this.lat1);\n  var ms1 = msfnz(this.e, sin1, cos1);\n  var ts1 = tsfnz(this.e, this.lat1, sin1);\n\n  var sin2 = Math.sin(this.lat2);\n  var cos2 = Math.cos(this.lat2);\n  var ms2 = msfnz(this.e, sin2, cos2);\n  var ts2 = tsfnz(this.e, this.lat2, sin2);\n\n  var ts0 = tsfnz(this.e, this.lat0, Math.sin(this.lat0));\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns = Math.log(ms1 / ms2) / Math.log(ts1 / ts2);\n  }\n  else {\n    this.ns = sin1;\n  }\n  if (isNaN(this.ns)) {\n    this.ns = sin1;\n  }\n  this.f0 = ms1 / (this.ns * Math.pow(ts1, this.ns));\n  this.rh = this.a * this.f0 * Math.pow(ts0, this.ns);\n  if (!this.title) {\n    this.title = \"Lambert Conformal Conic\";\n  }\n}\n\n// Lambert Conformal conic forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  // singular cases :\n  if (Math.abs(2 * Math.abs(lat) - Math.PI) <= EPSLN) {\n    lat = sign(lat) * (HALF_PI - 2 * EPSLN);\n  }\n\n  var con = Math.abs(Math.abs(lat) - HALF_PI);\n  var ts, rh1;\n  if (con > EPSLN) {\n    ts = tsfnz(this.e, lat, Math.sin(lat));\n    rh1 = this.a * this.f0 * Math.pow(ts, this.ns);\n  }\n  else {\n    con = lat * this.ns;\n    if (con <= 0) {\n      return null;\n    }\n    rh1 = 0;\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  p.x = this.k0 * (rh1 * Math.sin(theta)) + this.x0;\n  p.y = this.k0 * (this.rh - rh1 * Math.cos(theta)) + this.y0;\n\n  return p;\n}\n\n// Lambert Conformal Conic inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var rh1, con, ts;\n  var lat, lon;\n  var x = (p.x - this.x0) / this.k0;\n  var y = (this.rh - (p.y - this.y0) / this.k0);\n  if (this.ns > 0) {\n    rh1 = Math.sqrt(x * x + y * y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(x * x + y * y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2((con * x), (con * y));\n  }\n  if ((rh1 !== 0) || (this.ns > 0)) {\n    con = 1 / this.ns;\n    ts = Math.pow((rh1 / (this.a * this.f0)), con);\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  else {\n    lat = -HALF_PI;\n  }\n  lon = adjust_lon(theta / this.ns + this.long0);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\n  \"Lambert Tangential Conformal Conic Projection\",\n  \"Lambert_Conformal_Conic\",\n  \"Lambert_Conformal_Conic_1SP\",\n  \"Lambert_Conformal_Conic_2SP\",\n  \"lcc\"\n];\n\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  this.a = 6377397.155;\n  this.es = 0.006674372230614;\n  this.e = Math.sqrt(this.es);\n  if (!this.lat0) {\n    this.lat0 = 0.863937979737193;\n  }\n  if (!this.long0) {\n    this.long0 = 0.7417649320975901 - 0.308341501185665;\n  }\n  /* if scale not set default to 0.9999 */\n  if (!this.k0) {\n    this.k0 = 0.9999;\n  }\n  this.s45 = 0.785398163397448; /* 45 */\n  this.s90 = 2 * this.s45;\n  this.fi0 = this.lat0;\n  this.e2 = this.es;\n  this.e = Math.sqrt(this.e2);\n  this.alfa = Math.sqrt(1 + (this.e2 * Math.pow(Math.cos(this.fi0), 4)) / (1 - this.e2));\n  this.uq = 1.04216856380474;\n  this.u0 = Math.asin(Math.sin(this.fi0) / this.alfa);\n  this.g = Math.pow((1 + this.e * Math.sin(this.fi0)) / (1 - this.e * Math.sin(this.fi0)), this.alfa * this.e / 2);\n  this.k = Math.tan(this.u0 / 2 + this.s45) / Math.pow(Math.tan(this.fi0 / 2 + this.s45), this.alfa) * this.g;\n  this.k1 = this.k0;\n  this.n0 = this.a * Math.sqrt(1 - this.e2) / (1 - this.e2 * Math.pow(Math.sin(this.fi0), 2));\n  this.s0 = 1.37008346281555;\n  this.n = Math.sin(this.s0);\n  this.ro0 = this.k1 * this.n0 / Math.tan(this.s0);\n  this.ad = this.s90 - this.uq;\n}\n\n/* ellipsoid */\n/* calculate xy from lat/lon */\n/* Constants, identical to inverse transform function */\nexport function forward(p) {\n  var gfi, u, deltav, s, d, eps, ro;\n  var lon = p.x;\n  var lat = p.y;\n  var delta_lon = adjust_lon(lon - this.long0);\n  /* Transformation */\n  gfi = Math.pow(((1 + this.e * Math.sin(lat)) / (1 - this.e * Math.sin(lat))), (this.alfa * this.e / 2));\n  u = 2 * (Math.atan(this.k * Math.pow(Math.tan(lat / 2 + this.s45), this.alfa) / gfi) - this.s45);\n  deltav = -delta_lon * this.alfa;\n  s = Math.asin(Math.cos(this.ad) * Math.sin(u) + Math.sin(this.ad) * Math.cos(u) * Math.cos(deltav));\n  d = Math.asin(Math.cos(u) * Math.sin(deltav) / Math.cos(s));\n  eps = this.n * d;\n  ro = this.ro0 * Math.pow(Math.tan(this.s0 / 2 + this.s45), this.n) / Math.pow(Math.tan(s / 2 + this.s45), this.n);\n  p.y = ro * Math.cos(eps) / 1;\n  p.x = ro * Math.sin(eps) / 1;\n\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  return (p);\n}\n\n/* calculate lat/lon from xy */\nexport function inverse(p) {\n  var u, deltav, s, d, eps, ro, fi1;\n  var ok;\n\n  /* Transformation */\n  /* revert y, x*/\n  var tmp = p.x;\n  p.x = p.y;\n  p.y = tmp;\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  ro = Math.sqrt(p.x * p.x + p.y * p.y);\n  eps = Math.atan2(p.y, p.x);\n  d = eps / Math.sin(this.s0);\n  s = 2 * (Math.atan(Math.pow(this.ro0 / ro, 1 / this.n) * Math.tan(this.s0 / 2 + this.s45)) - this.s45);\n  u = Math.asin(Math.cos(this.ad) * Math.sin(s) - Math.sin(this.ad) * Math.cos(s) * Math.cos(d));\n  deltav = Math.asin(Math.cos(s) * Math.sin(d) / Math.cos(u));\n  p.x = this.long0 - deltav / this.alfa;\n  fi1 = u;\n  ok = 0;\n  var iter = 0;\n  do {\n    p.y = 2 * (Math.atan(Math.pow(this.k, - 1 / this.alfa) * Math.pow(Math.tan(u / 2 + this.s45), 1 / this.alfa) * Math.pow((1 + this.e * Math.sin(fi1)) / (1 - this.e * Math.sin(fi1)), this.e / 2)) - this.s45);\n    if (Math.abs(fi1 - p.y) < 0.0000000001) {\n      ok = 1;\n    }\n    fi1 = p.y;\n    iter += 1;\n  } while (ok === 0 && iter < 15);\n  if (iter >= 15) {\n    return null;\n  }\n\n  return (p);\n}\n\nexport var names = [\"Krovak\", \"krovak\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function(e0, e1, e2, e3, phi) {\n  return (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi));\n}","export default function(x) {\n  return (1 - 0.25 * x * (1 + x / 16 * (3 + 1.25 * x)));\n}","export default function(x) {\n  return (0.375 * x * (1 + 0.25 * x * (1 + 0.46875 * x)));\n}","export default function(x) {\n  return (0.05859375 * x * x * (1 + 0.75 * x));\n}","export default function(x) {\n  return (x * x * x * (35 / 3072));\n}","export default function(a, e, sinphi) {\n  var temp = e * sinphi;\n  return a / Math.sqrt(1 - temp * temp);\n}","import {HALF_PI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) < HALF_PI) ? x : (x - (sign(x) * Math.PI));\n}\n","export default function(ml, e0, e1, e2, e3) {\n  var phi;\n  var dphi;\n\n  phi = ml / e0;\n  for (var i = 0; i < 15; i++) {\n    dphi = (ml - (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi))) / (e0 - 2 * e1 * Math.cos(2 * phi) + 4 * e2 * Math.cos(4 * phi) - 6 * e3 * Math.cos(6 * phi));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //..reportError(\"IMLFN-CONV:Latitude failed to converge after 15 iterations\");\n  return NaN;\n}","import mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nexport function init() {\n  if (!this.sphere) {\n    this.e0 = e0fn(this.es);\n    this.e1 = e1fn(this.es);\n    this.e2 = e2fn(this.es);\n    this.e3 = e3fn(this.es);\n    this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  }\n}\n\n/* Cassini forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y;\n  var lam = p.x;\n  var phi = p.y;\n  lam = adjust_lon(lam - this.long0);\n\n  if (this.sphere) {\n    x = this.a * Math.asin(Math.cos(phi) * Math.sin(lam));\n    y = this.a * (Math.atan2(Math.tan(phi), Math.cos(lam)) - this.lat0);\n  }\n  else {\n    //ellipsoid\n    var sinphi = Math.sin(phi);\n    var cosphi = Math.cos(phi);\n    var nl = gN(this.a, this.e, sinphi);\n    var tl = Math.tan(phi) * Math.tan(phi);\n    var al = lam * Math.cos(phi);\n    var asq = al * al;\n    var cl = this.es * cosphi * cosphi / (1 - this.es);\n    var ml = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n\n    x = nl * al * (1 - asq * tl * (1 / 6 - (8 - tl + 8 * cl) * asq / 120));\n    y = ml - this.ml0 + nl * sinphi / cosphi * asq * (0.5 + (5 - tl + 6 * cl) * asq / 24);\n\n\n  }\n\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var phi, lam;\n\n  if (this.sphere) {\n    var dd = y + this.lat0;\n    phi = Math.asin(Math.sin(dd) * Math.cos(x));\n    lam = Math.atan2(Math.tan(x), Math.cos(dd));\n  }\n  else {\n    /* ellipsoid */\n    var ml1 = this.ml0 / this.a + y;\n    var phi1 = imlfn(ml1, this.e0, this.e1, this.e2, this.e3);\n    if (Math.abs(Math.abs(phi1) - HALF_PI) <= EPSLN) {\n      p.x = this.long0;\n      p.y = HALF_PI;\n      if (y < 0) {\n        p.y *= -1;\n      }\n      return p;\n    }\n    var nl1 = gN(this.a, this.e, Math.sin(phi1));\n\n    var rl1 = nl1 * nl1 * nl1 / this.a / this.a * (1 - this.es);\n    var tl1 = Math.pow(Math.tan(phi1), 2);\n    var dl = x * this.a / nl1;\n    var dsq = dl * dl;\n    phi = phi1 - nl1 * Math.tan(phi1) / rl1 * dl * dl * (0.5 - (1 + 3 * tl1) * dl * dl / 24);\n    lam = dl * (1 - dsq * (tl1 / 3 + (1 + 3 * tl1) * tl1 * dsq / 15)) / Math.cos(phi1);\n\n  }\n\n  p.x = adjust_lon(lam + this.long0);\n  p.y = adjust_lat(phi);\n  return p;\n\n}\n\nexport var names = [\"Cassini\", \"Cassini_Soldner\", \"cass\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function(eccent, sinphi) {\n  var con;\n  if (eccent > 1.0e-7) {\n    con = eccent * sinphi;\n    return ((1 - eccent * eccent) * (sinphi / (1 - con * con) - (0.5 / eccent) * Math.log((1 - con) / (1 + con))));\n  }\n  else {\n    return (2 * sinphi);\n  }\n}","\nimport {HALF_PI, EPSLN, FORTPI} from '../constants/values';\n\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\nexport var S_POLE = 1;\n\nexport var N_POLE = 2;\nexport var EQUIT = 3;\nexport var OBLIQ = 4;\n\n/* Initialize the Lambert Azimuthal Equal Area projection\n  ------------------------------------------------------*/\nexport function init() {\n  var t = Math.abs(this.lat0);\n  if (Math.abs(t - HALF_PI) < EPSLN) {\n    this.mode = this.lat0 < 0 ? this.S_POLE : this.N_POLE;\n  }\n  else if (Math.abs(t) < EPSLN) {\n    this.mode = this.EQUIT;\n  }\n  else {\n    this.mode = this.OBLIQ;\n  }\n  if (this.es > 0) {\n    var sinphi;\n\n    this.qp = qsfnz(this.e, 1);\n    this.mmf = 0.5 / (1 - this.es);\n    this.apa = authset(this.es);\n    switch (this.mode) {\n    case this.N_POLE:\n      this.dd = 1;\n      break;\n    case this.S_POLE:\n      this.dd = 1;\n      break;\n    case this.EQUIT:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      this.dd = 1 / this.rq;\n      this.xmf = 1;\n      this.ymf = 0.5 * this.qp;\n      break;\n    case this.OBLIQ:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      sinphi = Math.sin(this.lat0);\n      this.sinb1 = qsfnz(this.e, sinphi) / this.qp;\n      this.cosb1 = Math.sqrt(1 - this.sinb1 * this.sinb1);\n      this.dd = Math.cos(this.lat0) / (Math.sqrt(1 - this.es * sinphi * sinphi) * this.rq * this.cosb1);\n      this.ymf = (this.xmf = this.rq) / this.dd;\n      this.xmf *= this.dd;\n      break;\n    }\n  }\n  else {\n    if (this.mode === this.OBLIQ) {\n      this.sinph0 = Math.sin(this.lat0);\n      this.cosph0 = Math.cos(this.lat0);\n    }\n  }\n}\n\n/* Lambert Azimuthal Equal Area forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y, coslam, sinlam, sinphi, q, sinb, cosb, b, cosphi;\n  var lam = p.x;\n  var phi = p.y;\n\n  lam = adjust_lon(lam - this.long0);\n  if (this.sphere) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    coslam = Math.cos(lam);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      y = (this.mode === this.EQUIT) ? 1 + cosphi * coslam : 1 + this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n      if (y <= EPSLN) {\n        return null;\n      }\n      y = Math.sqrt(2 / y);\n      x = y * cosphi * Math.sin(lam);\n      y *= (this.mode === this.EQUIT) ? sinphi : this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        coslam = -coslam;\n      }\n      if (Math.abs(phi + this.lat0) < EPSLN) {\n        return null;\n      }\n      y = FORTPI - phi * 0.5;\n      y = 2 * ((this.mode === this.S_POLE) ? Math.cos(y) : Math.sin(y));\n      x = y * Math.sin(lam);\n      y *= coslam;\n    }\n  }\n  else {\n    sinb = 0;\n    cosb = 0;\n    b = 0;\n    coslam = Math.cos(lam);\n    sinlam = Math.sin(lam);\n    sinphi = Math.sin(phi);\n    q = qsfnz(this.e, sinphi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinb = q / this.qp;\n      cosb = Math.sqrt(1 - sinb * sinb);\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n      b = 1 + this.sinb1 * sinb + this.cosb1 * cosb * coslam;\n      break;\n    case this.EQUIT:\n      b = 1 + cosb * coslam;\n      break;\n    case this.N_POLE:\n      b = HALF_PI + phi;\n      q = this.qp - q;\n      break;\n    case this.S_POLE:\n      b = phi - HALF_PI;\n      q = this.qp + q;\n      break;\n    }\n    if (Math.abs(b) < EPSLN) {\n      return null;\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n    case this.EQUIT:\n      b = Math.sqrt(2 / b);\n      if (this.mode === this.OBLIQ) {\n        y = this.ymf * b * (this.cosb1 * sinb - this.sinb1 * cosb * coslam);\n      }\n      else {\n        y = (b = Math.sqrt(2 / (1 + cosb * coslam))) * sinb * this.ymf;\n      }\n      x = this.xmf * b * cosb * sinlam;\n      break;\n    case this.N_POLE:\n    case this.S_POLE:\n      if (q >= 0) {\n        x = (b = Math.sqrt(q)) * sinlam;\n        y = coslam * ((this.mode === this.S_POLE) ? b : -b);\n      }\n      else {\n        x = y = 0;\n      }\n      break;\n    }\n  }\n\n  p.x = this.a * x + this.x0;\n  p.y = this.a * y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var lam, phi, cCe, sCe, q, rho, ab;\n  if (this.sphere) {\n    var cosz = 0,\n      rh, sinz = 0;\n\n    rh = Math.sqrt(x * x + y * y);\n    phi = rh * 0.5;\n    if (phi > 1) {\n      return null;\n    }\n    phi = 2 * Math.asin(phi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinz = Math.sin(phi);\n      cosz = Math.cos(phi);\n    }\n    switch (this.mode) {\n    case this.EQUIT:\n      phi = (Math.abs(rh) <= EPSLN) ? 0 : Math.asin(y * sinz / rh);\n      x *= sinz;\n      y = cosz * rh;\n      break;\n    case this.OBLIQ:\n      phi = (Math.abs(rh) <= EPSLN) ? this.lat0 : Math.asin(cosz * this.sinph0 + y * sinz * this.cosph0 / rh);\n      x *= sinz * this.cosph0;\n      y = (cosz - Math.sin(phi) * this.sinph0) * rh;\n      break;\n    case this.N_POLE:\n      y = -y;\n      phi = HALF_PI - phi;\n      break;\n    case this.S_POLE:\n      phi -= HALF_PI;\n      break;\n    }\n    lam = (y === 0 && (this.mode === this.EQUIT || this.mode === this.OBLIQ)) ? 0 : Math.atan2(x, y);\n  }\n  else {\n    ab = 0;\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      x /= this.dd;\n      y *= this.dd;\n      rho = Math.sqrt(x * x + y * y);\n      if (rho < EPSLN) {\n        p.x = this.long0;\n        p.y = this.lat0;\n        return p;\n      }\n      sCe = 2 * Math.asin(0.5 * rho / this.rq);\n      cCe = Math.cos(sCe);\n      x *= (sCe = Math.sin(sCe));\n      if (this.mode === this.OBLIQ) {\n        ab = cCe * this.sinb1 + y * sCe * this.cosb1 / rho;\n        q = this.qp * ab;\n        y = rho * this.cosb1 * cCe - y * this.sinb1 * sCe;\n      }\n      else {\n        ab = y * sCe / rho;\n        q = this.qp * ab;\n        y = rho * cCe;\n      }\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        y = -y;\n      }\n      q = (x * x + y * y);\n      if (!q) {\n        p.x = this.long0;\n        p.y = this.lat0;\n        return p;\n      }\n      ab = 1 - q / this.qp;\n      if (this.mode === this.S_POLE) {\n        ab = -ab;\n      }\n    }\n    lam = Math.atan2(x, y);\n    phi = authlat(Math.asin(ab), this.apa);\n  }\n\n  p.x = adjust_lon(this.long0 + lam);\n  p.y = phi;\n  return p;\n}\n\n/* determine latitude from authalic latitude */\nvar P00 = 0.33333333333333333333;\n\nvar P01 = 0.17222222222222222222;\nvar P02 = 0.10257936507936507936;\nvar P10 = 0.06388888888888888888;\nvar P11 = 0.06640211640211640211;\nvar P20 = 0.01641501294219154443;\n\nfunction authset(es) {\n  var t;\n  var APA = [];\n  APA[0] = es * P00;\n  t = es * es;\n  APA[0] += t * P01;\n  APA[1] = t * P10;\n  t *= es;\n  APA[0] += t * P02;\n  APA[1] += t * P11;\n  APA[2] = t * P20;\n  return APA;\n}\n\nfunction authlat(beta, APA) {\n  var t = beta + beta;\n  return (beta + APA[0] * Math.sin(t) + APA[1] * Math.sin(t + t) + APA[2] * Math.sin(t + t + t));\n}\n\nexport var names = [\"Lambert Azimuthal Equal Area\", \"Lambert_Azimuthal_Equal_Area\", \"laea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  S_POLE: S_POLE,\n  N_POLE: N_POLE,\n  EQUIT: EQUIT,\n  OBLIQ: OBLIQ\n};\n","export default function(x) {\n  if (Math.abs(x) > 1) {\n    x = (x > 1) ? 1 : -1;\n  }\n  return Math.asin(x);\n}","import msfnz from '../common/msfnz';\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e3 = Math.sqrt(this.es);\n\n  this.sin_po = Math.sin(this.lat1);\n  this.cos_po = Math.cos(this.lat1);\n  this.t1 = this.sin_po;\n  this.con = this.sin_po;\n  this.ms1 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs1 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  this.sin_po = Math.sin(this.lat2);\n  this.cos_po = Math.cos(this.lat2);\n  this.t2 = this.sin_po;\n  this.ms2 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs2 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  this.sin_po = Math.sin(this.lat0);\n  this.cos_po = Math.cos(this.lat0);\n  this.t3 = this.sin_po;\n  this.qs0 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns0 = (this.ms1 * this.ms1 - this.ms2 * this.ms2) / (this.qs2 - this.qs1);\n  }\n  else {\n    this.ns0 = this.con;\n  }\n  this.c = this.ms1 * this.ms1 + this.ns0 * this.qs1;\n  this.rh = this.a * Math.sqrt(this.c - this.ns0 * this.qs0) / this.ns0;\n}\n\n/* Albers Conical Equal Area forward equations--mapping lat,long to x,y\n  -------------------------------------------------------------------*/\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  this.sin_phi = Math.sin(lat);\n  this.cos_phi = Math.cos(lat);\n\n  var qs = qsfnz(this.e3, this.sin_phi, this.cos_phi);\n  var rh1 = this.a * Math.sqrt(this.c - this.ns0 * qs) / this.ns0;\n  var theta = this.ns0 * adjust_lon(lon - this.long0);\n  var x = rh1 * Math.sin(theta) + this.x0;\n  var y = this.rh - rh1 * Math.cos(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh1, qs, con, theta, lon, lat;\n\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  if (this.ns0 >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n  con = rh1 * this.ns0 / this.a;\n  if (this.sphere) {\n    lat = Math.asin((this.c - con * con) / (2 * this.ns0));\n  }\n  else {\n    qs = (this.c - con * con) / this.ns0;\n    lat = this.phi1z(this.e3, qs);\n  }\n\n  lon = adjust_lon(theta / this.ns0 + this.long0);\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\n/* Function to compute phi1, the latitude for the inverse of the\n   Albers Conical Equal-Area projection.\n-------------------------------------------*/\nexport function phi1z(eccent, qs) {\n  var sinphi, cosphi, con, com, dphi;\n  var phi = asinz(0.5 * qs);\n  if (eccent < EPSLN) {\n    return phi;\n  }\n\n  var eccnts = eccent * eccent;\n  for (var i = 1; i <= 25; i++) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    con = eccent * sinphi;\n    com = 1 - con * con;\n    dphi = 0.5 * com * com / cosphi * (qs / (1 - eccnts) - sinphi / com + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi = phi + dphi;\n    if (Math.abs(dphi) <= 1e-7) {\n      return phi;\n    }\n  }\n  return null;\n}\n\nexport var names = [\"Albers_Conic_Equal_Area\", \"Albers\", \"aea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  phi1z: phi1z\n};\n","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\n/*\n  reference:\n    Wolfram Mathworld \"Gnomonic Projection\"\n    http://mathworld.wolfram.com/GnomonicProjection.html\n    Accessed: 12th November 2009\n  */\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n  // Approximation for projecting points to the horizon (infinity)\n  this.infinity_dist = 1000 * this.a;\n  this.rc = 1;\n}\n\n/* Gnomonic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g;\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.x0 + this.a * ksp * cosphi * Math.sin(dlon) / g;\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon) / g;\n  }\n  else {\n\n    // Point is in the opposing hemisphere and is unprojectable\n    // We still need to return a reasonable point, so we project\n    // to infinity, on a bearing\n    // equivalent to the northern hemisphere equivalent\n    // This is a reasonable approximation for short shapes and lines that\n    // straddle the horizon.\n\n    x = this.x0 + this.infinity_dist * cosphi * Math.sin(dlon);\n    y = this.y0 + this.infinity_dist * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* Rho */\n  var sinc, cosc;\n  var c;\n  var lon, lat;\n\n  /* Inverse equations\n      -----------------*/\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n\n  if ((rh = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    c = Math.atan2(rh, this.rc);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n\n    lat = asinz(cosc * this.sin_p14 + (p.y * sinc * this.cos_p14) / rh);\n    lon = Math.atan2(p.x * sinc, rh * this.cos_p14 * cosc - p.y * this.sin_p14 * sinc);\n    lon = adjust_lon(this.long0 + lon);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gnom\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, q) {\n  var temp = 1 - (1 - eccent * eccent) / (2 * eccent) * Math.log((1 - eccent) / (1 + eccent));\n  if (Math.abs(Math.abs(q) - temp) < 1.0E-6) {\n    if (q < 0) {\n      return (-1 * HALF_PI);\n    }\n    else {\n      return HALF_PI;\n    }\n  }\n  //var phi = 0.5* q/(1-eccent*eccent);\n  var phi = Math.asin(0.5 * q);\n  var dphi;\n  var sin_phi;\n  var cos_phi;\n  var con;\n  for (var i = 0; i < 30; i++) {\n    sin_phi = Math.sin(phi);\n    cos_phi = Math.cos(phi);\n    con = eccent * sin_phi;\n    dphi = Math.pow(1 - con * con, 2) / (2 * cos_phi) * (q / (1 - eccent * eccent) - sin_phi / (1 - con * con) + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //console.log(\"IQSFN-CONV:Latitude failed to converge after 30 iterations\");\n  return NaN;\n}\n","import adjust_lon from '../common/adjust_lon';\nimport qsfnz from '../common/qsfnz';\nimport msfnz from '../common/msfnz';\nimport iqsfnz from '../common/iqsfnz';\n\n/*\n  reference:\n    \"Cartographic Projection Procedures for the UNIX Environment-\n    A User's Manual\" by Gerald I. Evenden,\n    USGS Open File Report 90-284and Release 4 Interim Reports (2003)\n*/\nexport function init() {\n  //no-op\n  if (!this.sphere) {\n    this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n  }\n}\n\n/* Cylindrical Equal Area forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  if (this.sphere) {\n    x = this.x0 + this.a * dlon * Math.cos(this.lat_ts);\n    y = this.y0 + this.a * Math.sin(lat) / Math.cos(this.lat_ts);\n  }\n  else {\n    var qs = qsfnz(this.e, Math.sin(lat));\n    x = this.x0 + this.a * this.k0 * dlon;\n    y = this.y0 + this.a * qs * 0.5 / this.k0;\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Cylindrical Equal Area inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + (p.x / this.a) / Math.cos(this.lat_ts));\n    lat = Math.asin((p.y / this.a) * Math.cos(this.lat_ts));\n  }\n  else {\n    lat = iqsfnz(this.e, 2 * p.y * this.k0 / this.a);\n    lon = adjust_lon(this.long0 + p.x / (this.a * this.k0));\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"cea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Equidistant Cylindrical (Plate Carre)\";\n\n  this.rc = Math.cos(this.lat_ts);\n}\n\n// forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  var dlon = adjust_lon(lon - this.long0);\n  var dlat = adjust_lat(lat - this.lat0);\n  p.x = this.x0 + (this.a * dlon * this.rc);\n  p.y = this.y0 + (this.a * dlat);\n  return p;\n}\n\n// inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var x = p.x;\n  var y = p.y;\n\n  p.x = adjust_lon(this.long0 + ((x - this.x0) / (this.a * this.rc)));\n  p.y = adjust_lat(this.lat0 + ((y - this.y0) / (this.a)));\n  return p;\n}\n\nexport var names = [\"Equirectangular\", \"Equidistant_Cylindrical\", \"eqc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport mlfn from '../common/mlfn';\nimport {EPSLN} from '../constants/values';\n\nimport gN from '../common/gN';\nvar MAX_ITER = 20;\n\nexport function init() {\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2); // devait etre dans tmerc.js mais n y est pas donc je commente sinon retour de valeurs nulles\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n  this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0); //si que des zeros le calcul ne se fait pas\n}\n\n/* Polyconic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y, el;\n  var dlon = adjust_lon(lon - this.long0);\n  el = dlon * Math.sin(lat);\n  if (this.sphere) {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.a * this.lat0;\n    }\n    else {\n      x = this.a * Math.sin(el) / Math.tan(lat);\n      y = this.a * (adjust_lat(lat - this.lat0) + (1 - Math.cos(el)) / Math.tan(lat));\n    }\n  }\n  else {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.ml0;\n    }\n    else {\n      var nl = gN(this.a, this.e, Math.sin(lat)) / Math.tan(lat);\n      x = nl * Math.sin(el);\n      y = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, lat) - this.ml0 + nl * (1 - Math.cos(el));\n    }\n\n  }\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  var lon, lat, x, y, i;\n  var al, bl;\n  var phi, dphi;\n  x = p.x - this.x0;\n  y = p.y - this.y0;\n\n  if (this.sphere) {\n    if (Math.abs(y + this.a * this.lat0) <= EPSLN) {\n      lon = adjust_lon(x / this.a + this.long0);\n      lat = 0;\n    }\n    else {\n      al = this.lat0 + y / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var tanphi;\n      for (i = MAX_ITER; i; --i) {\n        tanphi = Math.tan(phi);\n        dphi = -1 * (al * (phi * tanphi + 1) - phi - 0.5 * (phi * phi + bl) * tanphi) / ((phi - al) / tanphi - 1);\n        phi += dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n      lon = adjust_lon(this.long0 + (Math.asin(x * Math.tan(phi) / this.a)) / Math.sin(lat));\n    }\n  }\n  else {\n    if (Math.abs(y + this.ml0) <= EPSLN) {\n      lat = 0;\n      lon = adjust_lon(this.long0 + x / this.a);\n    }\n    else {\n\n      al = (this.ml0 + y) / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var cl, mln, mlnp, ma;\n      var con;\n      for (i = MAX_ITER; i; --i) {\n        con = this.e * Math.sin(phi);\n        cl = Math.sqrt(1 - con * con) * Math.tan(phi);\n        mln = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n        mlnp = this.e0 - 2 * this.e1 * Math.cos(2 * phi) + 4 * this.e2 * Math.cos(4 * phi) - 6 * this.e3 * Math.cos(6 * phi);\n        ma = mln / this.a;\n        dphi = (al * (cl * ma + 1) - ma - 0.5 * cl * (ma * ma + bl)) / (this.es * Math.sin(2 * phi) * (ma * ma + bl - 2 * al * ma) / (4 * cl) + (al - ma) * (cl * mlnp - 2 / Math.sin(2 * phi)) - mlnp);\n        phi -= dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n\n      //lat=phi4z(this.e,this.e0,this.e1,this.e2,this.e3,al,bl,0,0);\n      cl = Math.sqrt(1 - this.es * Math.pow(Math.sin(lat), 2)) * Math.tan(lat);\n      lon = adjust_lon(this.long0 + Math.asin(x * cl / this.a) / Math.sin(lat));\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Polyconic\", \"poly\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {SEC_TO_RAD} from '../constants/values';\n\n/*\n  reference\n    Department of Land and Survey Technical Circular 1973/32\n      http://www.linz.govt.nz/docs/miscellaneous/nz-map-definition.pdf\n    OSG Technical Report 4.1\n      http://www.linz.govt.nz/docs/miscellaneous/nzmg.pdf\n  */\n\n/**\n * iterations: Number of iterations to refine inverse transform.\n *     0 -> km accuracy\n *     1 -> m accuracy -- suitable for most mapping applications\n *     2 -> mm accuracy\n */\nexport var iterations = 1;\n\nexport function init() {\n  this.A = [];\n  this.A[1] = 0.6399175073;\n  this.A[2] = -0.1358797613;\n  this.A[3] = 0.063294409;\n  this.A[4] = -0.02526853;\n  this.A[5] = 0.0117879;\n  this.A[6] = -0.0055161;\n  this.A[7] = 0.0026906;\n  this.A[8] = -0.001333;\n  this.A[9] = 0.00067;\n  this.A[10] = -0.00034;\n\n  this.B_re = [];\n  this.B_im = [];\n  this.B_re[1] = 0.7557853228;\n  this.B_im[1] = 0;\n  this.B_re[2] = 0.249204646;\n  this.B_im[2] = 0.003371507;\n  this.B_re[3] = -0.001541739;\n  this.B_im[3] = 0.041058560;\n  this.B_re[4] = -0.10162907;\n  this.B_im[4] = 0.01727609;\n  this.B_re[5] = -0.26623489;\n  this.B_im[5] = -0.36249218;\n  this.B_re[6] = -0.6870983;\n  this.B_im[6] = -1.1651967;\n\n  this.C_re = [];\n  this.C_im = [];\n  this.C_re[1] = 1.3231270439;\n  this.C_im[1] = 0;\n  this.C_re[2] = -0.577245789;\n  this.C_im[2] = -0.007809598;\n  this.C_re[3] = 0.508307513;\n  this.C_im[3] = -0.112208952;\n  this.C_re[4] = -0.15094762;\n  this.C_im[4] = 0.18200602;\n  this.C_re[5] = 1.01418179;\n  this.C_im[5] = 1.64497696;\n  this.C_re[6] = 1.9660549;\n  this.C_im[6] = 2.5127645;\n\n  this.D = [];\n  this.D[1] = 1.5627014243;\n  this.D[2] = 0.5185406398;\n  this.D[3] = -0.03333098;\n  this.D[4] = -0.1052906;\n  this.D[5] = -0.0368594;\n  this.D[6] = 0.007317;\n  this.D[7] = 0.01220;\n  this.D[8] = 0.00394;\n  this.D[9] = -0.0013;\n}\n\n/**\n    New Zealand Map Grid Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var n;\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lat = lat - this.lat0;\n  var delta_lon = lon - this.long0;\n\n  // 1. Calculate d_phi and d_psi    ...                          // and d_lambda\n  // For this algorithm, delta_latitude is in seconds of arc x 10-5, so we need to scale to those units. Longitude is radians.\n  var d_phi = delta_lat / SEC_TO_RAD * 1E-5;\n  var d_lambda = delta_lon;\n  var d_phi_n = 1; // d_phi^0\n\n  var d_psi = 0;\n  for (n = 1; n <= 10; n++) {\n    d_phi_n = d_phi_n * d_phi;\n    d_psi = d_psi + this.A[n] * d_phi_n;\n  }\n\n  // 2. Calculate theta\n  var th_re = d_psi;\n  var th_im = d_lambda;\n\n  // 3. Calculate z\n  var th_n_re = 1;\n  var th_n_im = 0; // theta^0\n  var th_n_re1;\n  var th_n_im1;\n\n  var z_re = 0;\n  var z_im = 0;\n  for (n = 1; n <= 6; n++) {\n    th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n    th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n    th_n_re = th_n_re1;\n    th_n_im = th_n_im1;\n    z_re = z_re + this.B_re[n] * th_n_re - this.B_im[n] * th_n_im;\n    z_im = z_im + this.B_im[n] * th_n_re + this.B_re[n] * th_n_im;\n  }\n\n  // 4. Calculate easting and northing\n  p.x = (z_im * this.a) + this.x0;\n  p.y = (z_re * this.a) + this.y0;\n\n  return p;\n}\n\n/**\n    New Zealand Map Grid Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var n;\n  var x = p.x;\n  var y = p.y;\n\n  var delta_x = x - this.x0;\n  var delta_y = y - this.y0;\n\n  // 1. Calculate z\n  var z_re = delta_y / this.a;\n  var z_im = delta_x / this.a;\n\n  // 2a. Calculate theta - first approximation gives km accuracy\n  var z_n_re = 1;\n  var z_n_im = 0; // z^0\n  var z_n_re1;\n  var z_n_im1;\n\n  var th_re = 0;\n  var th_im = 0;\n  for (n = 1; n <= 6; n++) {\n    z_n_re1 = z_n_re * z_re - z_n_im * z_im;\n    z_n_im1 = z_n_im * z_re + z_n_re * z_im;\n    z_n_re = z_n_re1;\n    z_n_im = z_n_im1;\n    th_re = th_re + this.C_re[n] * z_n_re - this.C_im[n] * z_n_im;\n    th_im = th_im + this.C_im[n] * z_n_re + this.C_re[n] * z_n_im;\n  }\n\n  // 2b. Iterate to refine the accuracy of the calculation\n  //        0 iterations gives km accuracy\n  //        1 iteration gives m accuracy -- good enough for most mapping applications\n  //        2 iterations bives mm accuracy\n  for (var i = 0; i < this.iterations; i++) {\n    var th_n_re = th_re;\n    var th_n_im = th_im;\n    var th_n_re1;\n    var th_n_im1;\n\n    var num_re = z_re;\n    var num_im = z_im;\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      num_re = num_re + (n - 1) * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      num_im = num_im + (n - 1) * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    th_n_re = 1;\n    th_n_im = 0;\n    var den_re = this.B_re[1];\n    var den_im = this.B_im[1];\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      den_re = den_re + n * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      den_im = den_im + n * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    // Complex division\n    var den2 = den_re * den_re + den_im * den_im;\n    th_re = (num_re * den_re + num_im * den_im) / den2;\n    th_im = (num_im * den_re - num_re * den_im) / den2;\n  }\n\n  // 3. Calculate d_phi              ...                                    // and d_lambda\n  var d_psi = th_re;\n  var d_lambda = th_im;\n  var d_psi_n = 1; // d_psi^0\n\n  var d_phi = 0;\n  for (n = 1; n <= 9; n++) {\n    d_psi_n = d_psi_n * d_psi;\n    d_phi = d_phi + this.D[n] * d_psi_n;\n  }\n\n  // 4. Calculate latitude and longitude\n  // d_phi is calcuated in second of arc * 10^-5, so we need to scale back to radians. d_lambda is in radians.\n  var lat = this.lat0 + (d_phi * SEC_TO_RAD * 1E5);\n  var lon = this.long0 + d_lambda;\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"New_Zealand_Map_Grid\", \"nzmg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\n\n/* Initialize the Miller Cylindrical projection\n  -------------------------------------------*/\nexport function init() {\n  //no-op\n}\n\n/* Miller Cylindrical forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x = this.x0 + this.a * dlon;\n  var y = this.y0 + this.a * Math.log(Math.tan((Math.PI / 4) + (lat / 2.5))) * 1.25;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Miller Cylindrical inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n\n  var lon = adjust_lon(this.long0 + p.x / this.a);\n  var lat = 2.5 * (Math.atan(Math.exp(0.8 * p.y / this.a)) - Math.PI / 4);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Miller_Cylindrical\", \"mill\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport pj_enfn from '../common/pj_enfn';\nvar MAX_ITER = 20;\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n\nexport function init() {\n  /* Place parameters in static storage for common use\n    -------------------------------------------------*/\n\n\n  if (!this.sphere) {\n    this.en = pj_enfn(this.es);\n  }\n  else {\n    this.n = 1;\n    this.m = 0;\n    this.es = 0;\n    this.C_y = Math.sqrt((this.m + 1) / this.n);\n    this.C_x = this.C_y / (this.m + 1);\n  }\n\n}\n\n/* Sinusoidal forward equations--mapping lat,long to x,y\n  -----------------------------------------------------*/\nexport function forward(p) {\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n    -----------------*/\n  lon = adjust_lon(lon - this.long0);\n\n  if (this.sphere) {\n    if (!this.m) {\n      lat = this.n !== 1 ? Math.asin(this.n * Math.sin(lat)) : lat;\n    }\n    else {\n      var k = this.n * Math.sin(lat);\n      for (var i = MAX_ITER; i; --i) {\n        var V = (this.m * lat + Math.sin(lat) - k) / (this.m + Math.cos(lat));\n        lat -= V;\n        if (Math.abs(V) < EPSLN) {\n          break;\n        }\n      }\n    }\n    x = this.a * this.C_x * lon * (this.m + Math.cos(lat));\n    y = this.a * this.C_y * lat;\n\n  }\n  else {\n\n    var s = Math.sin(lat);\n    var c = Math.cos(lat);\n    y = this.a * pj_mlfn(lat, s, c, this.en);\n    x = this.a * lon * c / Math.sqrt(1 - this.es * s * s);\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var lat, temp, lon, s;\n\n  p.x -= this.x0;\n  lon = p.x / this.a;\n  p.y -= this.y0;\n  lat = p.y / this.a;\n\n  if (this.sphere) {\n    lat /= this.C_y;\n    lon = lon / (this.C_x * (this.m + Math.cos(lat)));\n    if (this.m) {\n      lat = asinz((this.m * lat + Math.sin(lat)) / this.n);\n    }\n    else if (this.n !== 1) {\n      lat = asinz(Math.sin(lat) / this.n);\n    }\n    lon = adjust_lon(lon + this.long0);\n    lat = adjust_lat(lat);\n  }\n  else {\n    lat = pj_inv_mlfn(p.y / this.a, this.es, this.en);\n    s = Math.abs(lat);\n    if (s < HALF_PI) {\n      s = Math.sin(lat);\n      temp = this.long0 + p.x * Math.sqrt(1 - this.es * s * s) / (this.a * Math.cos(lat));\n      //temp = this.long0 + p.x / (this.a * Math.cos(lat));\n      lon = adjust_lon(temp);\n    }\n    else if ((s - EPSLN) < HALF_PI) {\n      lon = this.long0;\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Sinusoidal\", \"sinu\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nexport function init() {}\nimport {EPSLN} from '../constants/values';\n/* Mollweide forward equations--mapping lat,long to x,y\n    ----------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var theta = lat;\n  var con = Math.PI * Math.sin(lat);\n\n  /* Iterate using the Newton-Raphson method to find theta\n      -----------------------------------------------------*/\n  while (true) {\n    var delta_theta = -(theta + Math.sin(theta) - con) / (1 + Math.cos(theta));\n    theta += delta_theta;\n    if (Math.abs(delta_theta) < EPSLN) {\n      break;\n    }\n  }\n  theta /= 2;\n\n  /* If the latitude is 90 deg, force the x coordinate to be \"0 + false easting\"\n       this is done here because of precision problems with \"cos(theta)\"\n       --------------------------------------------------------------------------*/\n  if (Math.PI / 2 - Math.abs(lat) < EPSLN) {\n    delta_lon = 0;\n  }\n  var x = 0.900316316158 * this.a * delta_lon * Math.cos(theta) + this.x0;\n  var y = 1.4142135623731 * this.a * Math.sin(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var theta;\n  var arg;\n\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  arg = p.y / (1.4142135623731 * this.a);\n\n  /* Because of division by zero problems, 'arg' can not be 1.  Therefore\n       a number very close to one is used instead.\n       -------------------------------------------------------------------*/\n  if (Math.abs(arg) > 0.999999999999) {\n    arg = 0.999999999999;\n  }\n  theta = Math.asin(arg);\n  var lon = adjust_lon(this.long0 + (p.x / (0.900316316158 * this.a * Math.cos(theta))));\n  if (lon < (-Math.PI)) {\n    lon = -Math.PI;\n  }\n  if (lon > Math.PI) {\n    lon = Math.PI;\n  }\n  arg = (2 * theta + Math.sin(2 * theta)) / Math.PI;\n  if (Math.abs(arg) > 1) {\n    arg = 1;\n  }\n  var lat = Math.asin(arg);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mollweide\", \"moll\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport msfnz from '../common/msfnz';\nimport mlfn from '../common/mlfn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.lat2 = this.lat2 || this.lat1;\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n\n  this.sinphi = Math.sin(this.lat1);\n  this.cosphi = Math.cos(this.lat1);\n\n  this.ms1 = msfnz(this.e, this.sinphi, this.cosphi);\n  this.ml1 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat1);\n\n  if (Math.abs(this.lat1 - this.lat2) < EPSLN) {\n    this.ns = this.sinphi;\n  }\n  else {\n    this.sinphi = Math.sin(this.lat2);\n    this.cosphi = Math.cos(this.lat2);\n    this.ms2 = msfnz(this.e, this.sinphi, this.cosphi);\n    this.ml2 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat2);\n    this.ns = (this.ms1 - this.ms2) / (this.ml2 - this.ml1);\n  }\n  this.g = this.ml1 + this.ms1 / this.ns;\n  this.ml0 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  this.rh = this.a * (this.g - this.ml0);\n}\n\n/* Equidistant Conic forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var rh1;\n\n  /* Forward equations\n      -----------------*/\n  if (this.sphere) {\n    rh1 = this.a * (this.g - lat);\n  }\n  else {\n    var ml = mlfn(this.e0, this.e1, this.e2, this.e3, lat);\n    rh1 = this.a * (this.g - ml);\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  var x = this.x0 + rh1 * Math.sin(theta);\n  var y = this.y0 + this.rh - rh1 * Math.cos(theta);\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  var con, rh1, lat, lon;\n  if (this.ns >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    lat = adjust_lat(this.g - rh1 / this.a);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    var ml = this.g - rh1 / this.a;\n    lat = imlfn(ml, this.e0, this.e1, this.e2, this.e3);\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n\n}\n\nexport var names = [\"Equidistant_Conic\", \"eqdc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\n\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n/* Initialize the Van Der Grinten projection\n  ----------------------------------------*/\nexport function init() {\n  //this.R = 6370997; //Radius of earth\n  this.R = this.a;\n}\n\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  /* Forward equations\n    -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x, y;\n\n  if (Math.abs(lat) <= EPSLN) {\n    x = this.x0 + this.R * dlon;\n    y = this.y0;\n  }\n  var theta = asinz(2 * Math.abs(lat / Math.PI));\n  if ((Math.abs(dlon) <= EPSLN) || (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN)) {\n    x = this.x0;\n    if (lat >= 0) {\n      y = this.y0 + Math.PI * this.R * Math.tan(0.5 * theta);\n    }\n    else {\n      y = this.y0 + Math.PI * this.R * -Math.tan(0.5 * theta);\n    }\n    //  return(OK);\n  }\n  var al = 0.5 * Math.abs((Math.PI / dlon) - (dlon / Math.PI));\n  var asq = al * al;\n  var sinth = Math.sin(theta);\n  var costh = Math.cos(theta);\n\n  var g = costh / (sinth + costh - 1);\n  var gsq = g * g;\n  var m = g * (2 / sinth - 1);\n  var msq = m * m;\n  var con = Math.PI * this.R * (al * (g - msq) + Math.sqrt(asq * (g - msq) * (g - msq) - (msq + asq) * (gsq - msq))) / (msq + asq);\n  if (dlon < 0) {\n    con = -con;\n  }\n  x = this.x0 + con;\n  //con = Math.abs(con / (Math.PI * this.R));\n  var q = asq + g;\n  con = Math.PI * this.R * (m * q - al * Math.sqrt((msq + asq) * (asq + 1) - q * q)) / (msq + asq);\n  if (lat >= 0) {\n    //y = this.y0 + Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 + con;\n  }\n  else {\n    //y = this.y0 - Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 - con;\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Van Der Grinten inverse equations--mapping x,y to lat/long\n  ---------------------------------------------------------*/\nexport function inverse(p) {\n  var lon, lat;\n  var xx, yy, xys, c1, c2, c3;\n  var a1;\n  var m1;\n  var con;\n  var th1;\n  var d;\n\n  /* inverse equations\n    -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  con = Math.PI * this.R;\n  xx = p.x / con;\n  yy = p.y / con;\n  xys = xx * xx + yy * yy;\n  c1 = -Math.abs(yy) * (1 + xys);\n  c2 = c1 - 2 * yy * yy + xx * xx;\n  c3 = -2 * c1 + 1 + 2 * yy * yy + xys * xys;\n  d = yy * yy / c3 + (2 * c2 * c2 * c2 / c3 / c3 / c3 - 9 * c1 * c2 / c3 / c3) / 27;\n  a1 = (c1 - c2 * c2 / 3 / c3) / c3;\n  m1 = 2 * Math.sqrt(-a1 / 3);\n  con = ((3 * d) / a1) / m1;\n  if (Math.abs(con) > 1) {\n    if (con >= 0) {\n      con = 1;\n    }\n    else {\n      con = -1;\n    }\n  }\n  th1 = Math.acos(con) / 3;\n  if (p.y >= 0) {\n    lat = (-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n  else {\n    lat = -(-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n\n  if (Math.abs(xx) < EPSLN) {\n    lon = this.long0;\n  }\n  else {\n    lon = adjust_lon(this.long0 + Math.PI * (xys - 1 + Math.sqrt(1 + 2 * (xx * xx - yy * yy) + xys * xys)) / 2 / xx);\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Van_der_Grinten_I\", \"VanDerGrinten\", \"vandg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport asinz from '../common/asinz';\nimport imlfn from '../common/imlfn';\n\n\n\nexport function init() {\n  this.sin_p12 = Math.sin(this.lat0);\n  this.cos_p12 = Math.cos(this.lat0);\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinphi = Math.sin(p.y);\n  var cosphi = Math.cos(p.y);\n  var dlon = adjust_lon(lon - this.long0);\n  var e0, e1, e2, e3, Mlp, Ml, tanphi, Nl1, Nl, psi, Az, G, H, GH, Hs, c, kp, cos_c, s, s2, s3, s4, s5;\n  if (this.sphere) {\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      p.x = this.x0 + this.a * (HALF_PI - lat) * Math.sin(dlon);\n      p.y = this.y0 - this.a * (HALF_PI - lat) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      p.x = this.x0 + this.a * (HALF_PI + lat) * Math.sin(dlon);\n      p.y = this.y0 + this.a * (HALF_PI + lat) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //default case\n      cos_c = this.sin_p12 * sinphi + this.cos_p12 * cosphi * Math.cos(dlon);\n      c = Math.acos(cos_c);\n      kp = c ? c / Math.sin(c) : 1;\n      p.x = this.x0 + this.a * kp * cosphi * Math.sin(dlon);\n      p.y = this.y0 + this.a * kp * (this.cos_p12 * sinphi - this.sin_p12 * cosphi * Math.cos(dlon));\n      return p;\n    }\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp - Ml) * Math.sin(dlon);\n      p.y = this.y0 - (Mlp - Ml) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp + Ml) * Math.sin(dlon);\n      p.y = this.y0 + (Mlp + Ml) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //Default case\n      tanphi = sinphi / cosphi;\n      Nl1 = gN(this.a, this.e, this.sin_p12);\n      Nl = gN(this.a, this.e, sinphi);\n      psi = Math.atan((1 - this.es) * tanphi + this.es * Nl1 * this.sin_p12 / (Nl * cosphi));\n      Az = Math.atan2(Math.sin(dlon), this.cos_p12 * Math.tan(psi) - this.sin_p12 * Math.cos(dlon));\n      if (Az === 0) {\n        s = Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else if (Math.abs(Math.abs(Az) - Math.PI) <= EPSLN) {\n        s = -Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else {\n        s = Math.asin(Math.sin(dlon) * Math.cos(psi) / Math.sin(Az));\n      }\n      G = this.e * this.sin_p12 / Math.sqrt(1 - this.es);\n      H = this.e * this.cos_p12 * Math.cos(Az) / Math.sqrt(1 - this.es);\n      GH = G * H;\n      Hs = H * H;\n      s2 = s * s;\n      s3 = s2 * s;\n      s4 = s3 * s;\n      s5 = s4 * s;\n      c = Nl1 * s * (1 - s2 * Hs * (1 - Hs) / 6 + s3 / 8 * GH * (1 - 2 * Hs) + s4 / 120 * (Hs * (4 - 7 * Hs) - 3 * G * G * (1 - 7 * Hs)) - s5 / 48 * GH);\n      p.x = this.x0 + c * Math.sin(Az);\n      p.y = this.y0 + c * Math.cos(Az);\n      return p;\n    }\n  }\n\n\n}\n\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var rh, z, sinz, cosz, lon, lat, con, e0, e1, e2, e3, Mlp, M, N1, psi, Az, cosAz, tmp, A, B, D, Ee, F, sinpsi;\n  if (this.sphere) {\n    rh = Math.sqrt(p.x * p.x + p.y * p.y);\n    if (rh > (2 * HALF_PI * this.a)) {\n      return;\n    }\n    z = rh / this.a;\n\n    sinz = Math.sin(z);\n    cosz = Math.cos(z);\n\n    lon = this.long0;\n    if (Math.abs(rh) <= EPSLN) {\n      lat = this.lat0;\n    }\n    else {\n      lat = asinz(cosz * this.sin_p12 + (p.y * sinz * this.cos_p12) / rh);\n      con = Math.abs(this.lat0) - HALF_PI;\n      if (Math.abs(con) <= EPSLN) {\n        if (this.lat0 >= 0) {\n          lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n        }\n        else {\n          lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n        }\n      }\n      else {\n        /*con = cosz - this.sin_p12 * Math.sin(lat);\n        if ((Math.abs(con) < EPSLN) && (Math.abs(p.x) < EPSLN)) {\n          //no-op, just keep the lon value as is\n        } else {\n          var temp = Math.atan2((p.x * sinz * this.cos_p12), (con * rh));\n          lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz * this.cos_p12), (con * rh)));\n        }*/\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * sinz, rh * this.cos_p12 * cosz - p.y * this.sin_p12 * sinz));\n      }\n    }\n\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = Mlp - rh;\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = rh - Mlp;\n\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else {\n      //default case\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      Az = Math.atan2(p.x, p.y);\n      N1 = gN(this.a, this.e, this.sin_p12);\n      cosAz = Math.cos(Az);\n      tmp = this.e * this.cos_p12 * cosAz;\n      A = -tmp * tmp / (1 - this.es);\n      B = 3 * this.es * (1 - A) * this.sin_p12 * this.cos_p12 * cosAz / (1 - this.es);\n      D = rh / N1;\n      Ee = D - A * (1 + A) * Math.pow(D, 3) / 6 - B * (1 + 3 * A) * Math.pow(D, 4) / 24;\n      F = 1 - A * Ee * Ee / 2 - D * Ee * Ee * Ee / 6;\n      psi = Math.asin(this.sin_p12 * Math.cos(Ee) + this.cos_p12 * Math.sin(Ee) * cosAz);\n      lon = adjust_lon(this.long0 + Math.asin(Math.sin(Az) * Math.sin(Ee) / Math.cos(psi)));\n      sinpsi = Math.sin(psi);\n      lat = Math.atan2((sinpsi - this.es * F * this.sin_p12) * Math.tan(psi), sinpsi * (1 - this.es));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n  }\n\n}\n\nexport var names = [\"Azimuthal_Equidistant\", \"aeqd\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nexport function init() {\n  //double temp;      /* temporary variable    */\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n}\n\n/* Orthographic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g, x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.a * ksp * cosphi * Math.sin(dlon);\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* height above ellipsoid      */\n  var z; /* angle          */\n  var sinz, cosz; /* sin of z and cos of z      */\n  var con;\n  var lon, lat;\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  z = asinz(rh / this.a);\n\n  sinz = Math.sin(z);\n  cosz = Math.cos(z);\n\n  lon = this.long0;\n  if (Math.abs(rh) <= EPSLN) {\n    lat = this.lat0;\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lat = asinz(cosz * this.sin_p14 + (p.y * sinz * this.cos_p14) / rh);\n  con = Math.abs(this.lat0) - HALF_PI;\n  if (Math.abs(con) <= EPSLN) {\n    if (this.lat0 >= 0) {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n    }\n    else {\n      lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz), rh * this.cos_p14 * cosz - p.y * this.sin_p14 * sinz));\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"ortho\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","// QSC projection rewritten from the original PROJ4\n// https://github.com/OSGeo/proj.4/blob/master/src/PJ_qsc.c\n\nimport {EPSLN, TWO_PI, SPI, HALF_PI, FORTPI} from '../constants/values';\n\n/* constants */\nvar FACE_ENUM = {\n    FRONT: 1,\n    RIGHT: 2,\n    BACK: 3,\n    LEFT: 4,\n    TOP: 5,\n    BOTTOM: 6\n};\n\nvar AREA_ENUM = {\n    AREA_0: 1,\n    AREA_1: 2,\n    AREA_2: 3,\n    AREA_3: 4\n};\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Quadrilateralized Spherical Cube\";\n\n  /* Determine the cube face from the center of projection. */\n  if (this.lat0 >= HALF_PI - FORTPI / 2.0) {\n    this.face = FACE_ENUM.TOP;\n  } else if (this.lat0 <= -(HALF_PI - FORTPI / 2.0)) {\n    this.face = FACE_ENUM.BOTTOM;\n  } else if (Math.abs(this.long0) <= FORTPI) {\n    this.face = FACE_ENUM.FRONT;\n  } else if (Math.abs(this.long0) <= HALF_PI + FORTPI) {\n    this.face = this.long0 > 0.0 ? FACE_ENUM.RIGHT : FACE_ENUM.LEFT;\n  } else {\n    this.face = FACE_ENUM.BACK;\n  }\n\n  /* Fill in useful values for the ellipsoid <-> sphere shift\n   * described in [LK12]. */\n  if (this.es !== 0) {\n    this.one_minus_f = 1 - (this.a - this.b) / this.a;\n    this.one_minus_f_squared = this.one_minus_f * this.one_minus_f;\n  }\n}\n\n// QSC forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n  var xy = {x: 0, y: 0};\n  var lat, lon;\n  var theta, phi;\n  var t, mu;\n  /* nu; */\n  var area = {value: 0};\n\n  // move lon according to projection's lon\n  p.x -= this.long0;\n\n  /* Convert the geodetic latitude to a geocentric latitude.\n   * This corresponds to the shift from the ellipsoid to the sphere\n   * described in [LK12]. */\n  if (this.es !== 0) {//if (P->es != 0) {\n    lat = Math.atan(this.one_minus_f_squared * Math.tan(p.y));\n  } else {\n    lat = p.y;\n  }\n\n  /* Convert the input lat, lon into theta, phi as used by QSC.\n   * This depends on the cube face and the area on it.\n   * For the top and bottom face, we can compute theta and phi\n   * directly from phi, lam. For the other faces, we must use\n   * unit sphere cartesian coordinates as an intermediate step. */\n  lon = p.x; //lon = lp.lam;\n  if (this.face === FACE_ENUM.TOP) {\n    phi = HALF_PI - lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = lon - HALF_PI;\n    } else if (lon > HALF_PI + FORTPI || lon <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = (lon > 0.0 ? lon - SPI : lon + SPI);\n    } else if (lon > -(HALF_PI + FORTPI) && lon <= -FORTPI) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = lon + HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = lon;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = HALF_PI + lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = -lon + HALF_PI;\n    } else if (lon < FORTPI && lon >= -FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = -lon;\n    } else if (lon < -FORTPI && lon >= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = -lon - HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = (lon > 0.0 ? -lon + SPI : -lon - SPI);\n    }\n  } else {\n    var q, r, s;\n    var sinlat, coslat;\n    var sinlon, coslon;\n\n    if (this.face === FACE_ENUM.RIGHT) {\n      lon = qsc_shift_lon_origin(lon, +HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lon = qsc_shift_lon_origin(lon, +SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lon = qsc_shift_lon_origin(lon, -HALF_PI);\n    }\n    sinlat = Math.sin(lat);\n    coslat = Math.cos(lat);\n    sinlon = Math.sin(lon);\n    coslon = Math.cos(lon);\n    q = coslat * coslon;\n    r = coslat * sinlon;\n    s = sinlat;\n\n    if (this.face === FACE_ENUM.FRONT) {\n      phi = Math.acos(q);\n      theta = qsc_fwd_equat_face_theta(phi, s, r, area);\n    } else if (this.face === FACE_ENUM.RIGHT) {\n      phi = Math.acos(r);\n      theta = qsc_fwd_equat_face_theta(phi, s, -q, area);\n    } else if (this.face === FACE_ENUM.BACK) {\n      phi = Math.acos(-q);\n      theta = qsc_fwd_equat_face_theta(phi, s, -r, area);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      phi = Math.acos(-r);\n      theta = qsc_fwd_equat_face_theta(phi, s, q, area);\n    } else {\n      /* Impossible */\n      phi = theta = 0;\n      area.value = AREA_ENUM.AREA_0;\n    }\n  }\n\n  /* Compute mu and nu for the area of definition.\n   * For mu, see Eq. (3-21) in [OL76], but note the typos:\n   * compare with Eq. (3-14). For nu, see Eq. (3-38). */\n  mu = Math.atan((12 / SPI) * (theta + Math.acos(Math.sin(theta) * Math.cos(FORTPI)) - HALF_PI));\n  t = Math.sqrt((1 - Math.cos(phi)) / (Math.cos(mu) * Math.cos(mu)) / (1 - Math.cos(Math.atan(1 / Math.cos(theta)))));\n\n  /* Apply the result to the real area. */\n  if (area.value === AREA_ENUM.AREA_1) {\n    mu += HALF_PI;\n  } else if (area.value === AREA_ENUM.AREA_2) {\n    mu += SPI;\n  } else if (area.value === AREA_ENUM.AREA_3) {\n    mu += 1.5 * SPI;\n  }\n\n  /* Now compute x, y from mu and nu */\n  xy.x = t * Math.cos(mu);\n  xy.y = t * Math.sin(mu);\n  xy.x = xy.x * this.a + this.x0;\n  xy.y = xy.y * this.a + this.y0;\n\n  p.x = xy.x;\n  p.y = xy.y;\n  return p;\n}\n\n// QSC inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n  var lp = {lam: 0, phi: 0};\n  var mu, nu, cosmu, tannu;\n  var tantheta, theta, cosphi, phi;\n  var t;\n  var area = {value: 0};\n\n  /* de-offset */\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  /* Convert the input x, y to the mu and nu angles as used by QSC.\n   * This depends on the area of the cube face. */\n  nu = Math.atan(Math.sqrt(p.x * p.x + p.y * p.y));\n  mu = Math.atan2(p.y, p.x);\n  if (p.x >= 0.0 && p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_0;\n  } else if (p.y >= 0.0 && p.y >= Math.abs(p.x)) {\n    area.value = AREA_ENUM.AREA_1;\n    mu -= HALF_PI;\n  } else if (p.x < 0.0 && -p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_2;\n    mu = (mu < 0.0 ? mu + SPI : mu - SPI);\n  } else {\n    area.value = AREA_ENUM.AREA_3;\n    mu += HALF_PI;\n  }\n\n  /* Compute phi and theta for the area of definition.\n   * The inverse projection is not described in the original paper, but some\n   * good hints can be found here (as of 2011-12-14):\n   * http://fits.gsfc.nasa.gov/fitsbits/saf.93/saf.9302\n   * (search for \"Message-Id: <9302181759.AA25477 at fits.cv.nrao.edu>\") */\n  t = (SPI / 12) * Math.tan(mu);\n  tantheta = Math.sin(t) / (Math.cos(t) - (1 / Math.sqrt(2)));\n  theta = Math.atan(tantheta);\n  cosmu = Math.cos(mu);\n  tannu = Math.tan(nu);\n  cosphi = 1 - cosmu * cosmu * tannu * tannu * (1 - Math.cos(Math.atan(1 / Math.cos(theta))));\n  if (cosphi < -1) {\n    cosphi = -1;\n  } else if (cosphi > +1) {\n    cosphi = +1;\n  }\n\n  /* Apply the result to the real area on the cube face.\n   * For the top and bottom face, we can compute phi and lam directly.\n   * For the other faces, we must use unit sphere cartesian coordinates\n   * as an intermediate step. */\n  if (this.face === FACE_ENUM.TOP) {\n    phi = Math.acos(cosphi);\n    lp.phi = HALF_PI - phi;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = (theta < 0.0 ? theta + SPI : theta - SPI);\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = theta;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = Math.acos(cosphi);\n    lp.phi = phi - HALF_PI;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = -theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = -theta;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = -theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = (theta < 0.0 ? -theta - SPI : -theta + SPI);\n    }\n  } else {\n    /* Compute phi and lam via cartesian unit sphere coordinates. */\n    var q, r, s;\n    q = cosphi;\n    t = q * q;\n    if (t >= 1) {\n      s = 0;\n    } else {\n      s = Math.sqrt(1 - t) * Math.sin(theta);\n    }\n    t += s * s;\n    if (t >= 1) {\n      r = 0;\n    } else {\n      r = Math.sqrt(1 - t);\n    }\n    /* Rotate q,r,s into the correct area. */\n    if (area.value === AREA_ENUM.AREA_1) {\n      t = r;\n      r = -s;\n      s = t;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      r = -r;\n      s = -s;\n    } else if (area.value === AREA_ENUM.AREA_3) {\n      t = r;\n      r = s;\n      s = -t;\n    }\n    /* Rotate q,r,s into the correct cube face. */\n    if (this.face === FACE_ENUM.RIGHT) {\n      t = q;\n      q = -r;\n      r = t;\n    } else if (this.face === FACE_ENUM.BACK) {\n      q = -q;\n      r = -r;\n    } else if (this.face === FACE_ENUM.LEFT) {\n      t = q;\n      q = r;\n      r = -t;\n    }\n    /* Now compute phi and lam from the unit sphere coordinates. */\n    lp.phi = Math.acos(-s) - HALF_PI;\n    lp.lam = Math.atan2(r, q);\n    if (this.face === FACE_ENUM.RIGHT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, +HALF_PI);\n    }\n  }\n\n  /* Apply the shift from the sphere to the ellipsoid as described\n   * in [LK12]. */\n  if (this.es !== 0) {\n    var invert_sign;\n    var tanphi, xa;\n    invert_sign = (lp.phi < 0 ? 1 : 0);\n    tanphi = Math.tan(lp.phi);\n    xa = this.b / Math.sqrt(tanphi * tanphi + this.one_minus_f_squared);\n    lp.phi = Math.atan(Math.sqrt(this.a * this.a - xa * xa) / (this.one_minus_f * xa));\n    if (invert_sign) {\n      lp.phi = -lp.phi;\n    }\n  }\n\n  lp.lam += this.long0;\n  p.x = lp.lam;\n  p.y = lp.phi;\n  return p;\n}\n\n/* Helper function for forward projection: compute the theta angle\n * and determine the area number. */\nfunction qsc_fwd_equat_face_theta(phi, y, x, area) {\n  var theta;\n  if (phi < EPSLN) {\n    area.value = AREA_ENUM.AREA_0;\n    theta = 0.0;\n  } else {\n    theta = Math.atan2(y, x);\n    if (Math.abs(theta) <= FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n    } else if (theta > FORTPI && theta <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta -= HALF_PI;\n    } else if (theta > HALF_PI + FORTPI || theta <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = (theta >= 0.0 ? theta - SPI : theta + SPI);\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta += HALF_PI;\n    }\n  }\n  return theta;\n}\n\n/* Helper function: shift the longitude. */\nfunction qsc_shift_lon_origin(lon, offset) {\n  var slon = lon + offset;\n  if (slon < -SPI) {\n    slon += TWO_PI;\n  } else if (slon > +SPI) {\n    slon -= TWO_PI;\n  }\n  return slon;\n}\n\nexport var names = [\"Quadrilateralized Spherical Cube\", \"Quadrilateralized_Spherical_Cube\", \"qsc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n","// Robinson projection\n// Based on https://github.com/OSGeo/proj.4/blob/master/src/PJ_robin.c\n// Polynomial coeficients from http://article.gmane.org/gmane.comp.gis.proj-4.devel/6039\n\nimport {HALF_PI, D2R, R2D, EPSLN} from '../constants/values';\nimport adjust_lon from '../common/adjust_lon';\n\nvar COEFS_X = [\n    [1.0000, 2.2199e-17, -7.15515e-05, 3.1103e-06],\n    [0.9986, -0.000482243, -2.4897e-05, -1.3309e-06],\n    [0.9954, -0.00083103, -4.48605e-05, -9.86701e-07],\n    [0.9900, -0.00135364, -5.9661e-05, 3.6777e-06],\n    [0.9822, -0.00167442, -4.49547e-06, -5.72411e-06],\n    [0.9730, -0.00214868, -9.03571e-05, 1.8736e-08],\n    [0.9600, -0.00305085, -9.00761e-05, 1.64917e-06],\n    [0.9427, -0.00382792, -6.53386e-05, -2.6154e-06],\n    [0.9216, -0.00467746, -0.00010457, 4.81243e-06],\n    [0.8962, -0.00536223, -3.23831e-05, -5.43432e-06],\n    [0.8679, -0.00609363, -0.000113898, 3.32484e-06],\n    [0.8350, -0.00698325, -6.40253e-05, 9.34959e-07],\n    [0.7986, -0.00755338, -5.00009e-05, 9.35324e-07],\n    [0.7597, -0.00798324, -3.5971e-05, -2.27626e-06],\n    [0.7186, -0.00851367, -7.01149e-05, -8.6303e-06],\n    [0.6732, -0.00986209, -0.000199569, 1.91974e-05],\n    [0.6213, -0.010418, 8.83923e-05, 6.24051e-06],\n    [0.5722, -0.00906601, 0.000182, 6.24051e-06],\n    [0.5322, -0.00677797, 0.000275608, 6.24051e-06]\n];\n\nvar COEFS_Y = [\n    [-5.20417e-18, 0.0124, 1.21431e-18, -8.45284e-11],\n    [0.0620, 0.0124, -1.26793e-09, 4.22642e-10],\n    [0.1240, 0.0124, 5.07171e-09, -1.60604e-09],\n    [0.1860, 0.0123999, -1.90189e-08, 6.00152e-09],\n    [0.2480, 0.0124002, 7.10039e-08, -2.24e-08],\n    [0.3100, 0.0123992, -2.64997e-07, 8.35986e-08],\n    [0.3720, 0.0124029, 9.88983e-07, -3.11994e-07],\n    [0.4340, 0.0123893, -3.69093e-06, -4.35621e-07],\n    [0.4958, 0.0123198, -1.02252e-05, -3.45523e-07],\n    [0.5571, 0.0121916, -1.54081e-05, -5.82288e-07],\n    [0.6176, 0.0119938, -2.41424e-05, -5.25327e-07],\n    [0.6769, 0.011713, -3.20223e-05, -5.16405e-07],\n    [0.7346, 0.0113541, -3.97684e-05, -6.09052e-07],\n    [0.7903, 0.0109107, -4.89042e-05, -1.04739e-06],\n    [0.8435, 0.0103431, -6.4615e-05, -1.40374e-09],\n    [0.8936, 0.00969686, -6.4636e-05, -8.547e-06],\n    [0.9394, 0.00840947, -0.000192841, -4.2106e-06],\n    [0.9761, 0.00616527, -0.000256, -4.2106e-06],\n    [1.0000, 0.00328947, -0.000319159, -4.2106e-06]\n];\n\nvar FXC = 0.8487;\nvar FYC = 1.3523;\nvar C1 = R2D/5; // rad to 5-degree interval\nvar RC1 = 1/C1;\nvar NODES = 18;\n\nvar poly3_val = function(coefs, x) {\n    return coefs[0] + x * (coefs[1] + x * (coefs[2] + x * coefs[3]));\n};\n\nvar poly3_der = function(coefs, x) {\n    return coefs[1] + x * (2 * coefs[2] + x * 3 * coefs[3]);\n};\n\nfunction newton_rapshon(f_df, start, max_err, iters) {\n    var x = start;\n    for (; iters; --iters) {\n        var upd = f_df(x);\n        x -= upd;\n        if (Math.abs(upd) < max_err) {\n            break;\n        }\n    }\n    return x;\n}\n\nexport function init() {\n    this.x0 = this.x0 || 0;\n    this.y0 = this.y0 || 0;\n    this.long0 = this.long0 || 0;\n    this.es = 0;\n    this.title = this.title || \"Robinson\";\n}\n\nexport function forward(ll) {\n    var lon = adjust_lon(ll.x - this.long0);\n\n    var dphi = Math.abs(ll.y);\n    var i = Math.floor(dphi * C1);\n    if (i < 0) {\n        i = 0;\n    } else if (i >= NODES) {\n        i = NODES - 1;\n    }\n    dphi = R2D * (dphi - RC1 * i);\n    var xy = {\n        x: poly3_val(COEFS_X[i], dphi) * lon,\n        y: poly3_val(COEFS_Y[i], dphi)\n    };\n    if (ll.y < 0) {\n        xy.y = -xy.y;\n    }\n\n    xy.x = xy.x * this.a * FXC + this.x0;\n    xy.y = xy.y * this.a * FYC + this.y0;\n    return xy;\n}\n\nexport function inverse(xy) {\n    var ll = {\n        x: (xy.x - this.x0) / (this.a * FXC),\n        y: Math.abs(xy.y - this.y0) / (this.a * FYC)\n    };\n\n    if (ll.y >= 1) { // pathologic case\n        ll.x /= COEFS_X[NODES][0];\n        ll.y = xy.y < 0 ? -HALF_PI : HALF_PI;\n    } else {\n        // find table interval\n        var i = Math.floor(ll.y * NODES);\n        if (i < 0) {\n            i = 0;\n        } else if (i >= NODES) {\n            i = NODES - 1;\n        }\n        for (;;) {\n            if (COEFS_Y[i][0] > ll.y) {\n                --i;\n            } else if (COEFS_Y[i+1][0] <= ll.y) {\n                ++i;\n            } else {\n                break;\n            }\n        }\n        // linear interpolation in 5 degree interval\n        var coefs = COEFS_Y[i];\n        var t = 5 * (ll.y - coefs[0]) / (COEFS_Y[i+1][0] - coefs[0]);\n        // find t so that poly3_val(coefs, t) = ll.y\n        t = newton_rapshon(function(x) {\n            return (poly3_val(coefs, x) - ll.y) / poly3_der(coefs, x);\n        }, t, EPSLN, 100);\n\n        ll.x /= poly3_val(COEFS_X[i], t);\n        ll.y = (5 * i + t) * D2R;\n        if (xy.y < 0) {\n            ll.y = -ll.y;\n        }\n    }\n\n    ll.x = adjust_lon(ll.x + this.long0);\n    return ll;\n}\n\nexport var names = [\"Robinson\", \"robin\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {\n    geodeticToGeocentric,\n    geocentricToGeodetic\n} from '../datumUtils';\n\nexport function init() {\n    this.name = 'geocent';\n\n}\n\nexport function forward(p) {\n    var point = geodeticToGeocentric(p, this.es, this.a);\n    return point;\n}\n\nexport function inverse(p) {\n    var point = geocentricToGeodetic(p, this.es, this.a, this.b);\n    return point;\n}\n\nexport var names = [\"Geocentric\", 'geocentric', \"geocent\", \"Geocent\"];\nexport default {\n    init: init,\n    forward: forward,\n    inverse: inverse,\n    names: names\n};","\nvar mode = {\n  N_POLE: 0,\n  S_POLE: 1,\n  EQUIT: 2,\n  OBLIQ: 3\n};\n\nimport { D2R, HALF_PI, EPSLN } from \"../constants/values\";\nimport hypot from \"../common/hypot\";\n\nvar params = {\n  h:     { def: 100000, num: true },           // default is Karman line, no default in PROJ.7\n  azi:   { def: 0, num: true, degrees: true }, // default is North\n  tilt:  { def: 0, num: true, degrees: true }, // default is Nadir\n  long0: { def: 0, num: true },                // default is Greenwich, conversion to rad is automatic\n  lat0:  { def: 0, num: true }                 // default is Equator, conversion to rad is automatic\n};\n\nexport function init() {\n  Object.keys(params).forEach(function (p) {\n    if (typeof this[p] === \"undefined\") {\n      this[p] = params[p].def;\n    } else if (params[p].num && isNaN(this[p])) {\n      throw new Error(\"Invalid parameter value, must be numeric \" + p + \" = \" + this[p]);\n    } else if (params[p].num) {\n      this[p] = parseFloat(this[p]);\n    }\n    if (params[p].degrees) {\n      this[p] = this[p] * D2R;\n    }\n  }.bind(this));\n\n  if (Math.abs((Math.abs(this.lat0) - HALF_PI)) < EPSLN) {\n    this.mode = this.lat0 < 0 ? mode.S_POLE : mode.N_POLE;\n  } else if (Math.abs(this.lat0) < EPSLN) {\n    this.mode = mode.EQUIT;\n  } else {\n    this.mode = mode.OBLIQ;\n    this.sinph0 = Math.sin(this.lat0);\n    this.cosph0 = Math.cos(this.lat0);\n  }\n\n  this.pn1 = this.h / this.a;  // Normalize relative to the Earth's radius\n\n  if (this.pn1 <= 0 || this.pn1 > 1e10) {\n    throw new Error(\"Invalid height\");\n  }\n  \n  this.p = 1 + this.pn1;\n  this.rp = 1 / this.p;\n  this.h1 = 1 / this.pn1;\n  this.pfact = (this.p + 1) * this.h1;\n  this.es = 0;\n\n  var omega = this.tilt;\n  var gamma = this.azi;\n  this.cg = Math.cos(gamma);\n  this.sg = Math.sin(gamma);\n  this.cw = Math.cos(omega);\n  this.sw = Math.sin(omega);\n}\n\nexport function forward(p) {\n  p.x -= this.long0;\n  var sinphi = Math.sin(p.y);\n  var cosphi = Math.cos(p.y);\n  var coslam = Math.cos(p.x);\n  var x, y;\n  switch (this.mode) {\n    case mode.OBLIQ:\n      y = this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n      break;\n    case mode.EQUIT:\n      y = cosphi * coslam;\n      break;\n    case mode.S_POLE:\n      y = -sinphi;\n      break;\n    case mode.N_POLE:\n      y = sinphi;\n      break;\n  }\n  y = this.pn1 / (this.p - y);\n  x = y * cosphi * Math.sin(p.x);\n\n  switch (this.mode) {\n    case mode.OBLIQ:\n      y *= this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n      break;\n    case mode.EQUIT:\n      y *= sinphi;\n      break;\n    case mode.N_POLE:\n      y *= -(cosphi * coslam);\n      break;\n    case mode.S_POLE:\n      y *= cosphi * coslam;\n      break;\n  }\n\n  // Tilt \n  var yt, ba;\n  yt = y * this.cg + x * this.sg;\n  ba = 1 / (yt * this.sw * this.h1 + this.cw);\n  x = (x * this.cg - y * this.sg) * this.cw * ba;\n  y = yt * ba;\n\n  p.x = x * this.a;\n  p.y = y * this.a;\n  return p;\n}\n\nexport function inverse(p) {\n  p.x /= this.a;\n  p.y /= this.a;\n  var r = { x: p.x, y: p.y };\n\n  // Un-Tilt\n  var bm, bq, yt;\n  yt = 1 / (this.pn1 - p.y * this.sw);\n  bm = this.pn1 * p.x * yt;\n  bq = this.pn1 * p.y * this.cw * yt;\n  p.x = bm * this.cg + bq * this.sg;\n  p.y = bq * this.cg - bm * this.sg;\n\n  var rh = hypot(p.x, p.y);\n  if (Math.abs(rh) < EPSLN) {\n    r.x = 0;\n    r.y = p.y;\n  } else {\n    var cosz, sinz;\n    sinz = 1 - rh * rh * this.pfact;\n    sinz = (this.p - Math.sqrt(sinz)) / (this.pn1 / rh + rh / this.pn1);\n    cosz = Math.sqrt(1 - sinz * sinz);\n    switch (this.mode) {\n      case mode.OBLIQ:\n        r.y = Math.asin(cosz * this.sinph0 + p.y * sinz * this.cosph0 / rh);\n        p.y = (cosz - this.sinph0 * Math.sin(r.y)) * rh;\n        p.x *= sinz * this.cosph0;\n        break;\n      case mode.EQUIT:\n        r.y = Math.asin(p.y * sinz / rh);\n        p.y = cosz * rh;\n        p.x *= sinz;\n        break;\n      case mode.N_POLE:\n        r.y = Math.asin(cosz);\n        p.y = -p.y;\n        break;\n      case mode.S_POLE:\n        r.y = -Math.asin(cosz);\n        break;\n    }\n    r.x = Math.atan2(p.x, p.y);\n  }\n\n  p.x = r.x + this.long0;\n  p.y = r.y;\n  return p;\n}\n\nexport var names = [\"Tilted_Perspective\", \"tpers\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import tmerc from './lib/projections/tmerc';\nimport etmerc from './lib/projections/etmerc';\nimport utm from './lib/projections/utm';\nimport sterea from './lib/projections/sterea';\nimport stere from './lib/projections/stere';\nimport somerc from './lib/projections/somerc';\nimport omerc from './lib/projections/omerc';\nimport lcc from './lib/projections/lcc';\nimport krovak from './lib/projections/krovak';\nimport cass from './lib/projections/cass';\nimport laea from './lib/projections/laea';\nimport aea from './lib/projections/aea';\nimport gnom from './lib/projections/gnom';\nimport cea from './lib/projections/cea';\nimport eqc from './lib/projections/eqc';\nimport poly from './lib/projections/poly';\nimport nzmg from './lib/projections/nzmg';\nimport mill from './lib/projections/mill';\nimport sinu from './lib/projections/sinu';\nimport moll from './lib/projections/moll';\nimport eqdc from './lib/projections/eqdc';\nimport vandg from './lib/projections/vandg';\nimport aeqd from './lib/projections/aeqd';\nimport ortho from './lib/projections/ortho';\nimport qsc from './lib/projections/qsc';\nimport robin from './lib/projections/robin';\nimport geocent from './lib/projections/geocent';\nimport tpers from './lib/projections/tpers';\nexport default function(proj4){\n  proj4.Proj.projections.add(tmerc);\n  proj4.Proj.projections.add(etmerc);\n  proj4.Proj.projections.add(utm);\n  proj4.Proj.projections.add(sterea);\n  proj4.Proj.projections.add(stere);\n  proj4.Proj.projections.add(somerc);\n  proj4.Proj.projections.add(omerc);\n  proj4.Proj.projections.add(lcc);\n  proj4.Proj.projections.add(krovak);\n  proj4.Proj.projections.add(cass);\n  proj4.Proj.projections.add(laea);\n  proj4.Proj.projections.add(aea);\n  proj4.Proj.projections.add(gnom);\n  proj4.Proj.projections.add(cea);\n  proj4.Proj.projections.add(eqc);\n  proj4.Proj.projections.add(poly);\n  proj4.Proj.projections.add(nzmg);\n  proj4.Proj.projections.add(mill);\n  proj4.Proj.projections.add(sinu);\n  proj4.Proj.projections.add(moll);\n  proj4.Proj.projections.add(eqdc);\n  proj4.Proj.projections.add(vandg);\n  proj4.Proj.projections.add(aeqd);\n  proj4.Proj.projections.add(ortho);\n  proj4.Proj.projections.add(qsc);\n  proj4.Proj.projections.add(robin);\n  proj4.Proj.projections.add(geocent);\n  proj4.Proj.projections.add(tpers);\n}","import proj4 from './core';\nimport Proj from \"./Proj\";\nimport Point from \"./Point\";\nimport common from \"./common/toPoint\";\nimport defs from \"./defs\";\nimport nadgrid from \"./nadgrid\";\nimport transform from \"./transform\";\nimport mgrs from \"mgrs\";\nimport includedProjections from \"../projs\";\n\nproj4.defaultDatum = 'WGS84'; //default datum\nproj4.Proj = Proj;\nproj4.WGS84 = new proj4.Proj('WGS84');\nproj4.Point = Point;\nproj4.toPoint = common;\nproj4.defs = defs;\nproj4.nadgrid = nadgrid;\nproj4.transform = transform;\nproj4.mgrs = mgrs;\nproj4.version = '__VERSION__';\nincludedProjections(proj4);\nexport default proj4;\n"],"sourceRoot":""}