{"version":3,"sources":["webpack://@jupyterlab/application-top/./node_modules/spin.js/spin.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","defaults","lines","width","radius","scale","corners","color","fadeColor","animation","rotate","direction","speed","zIndex","className","top","left","shadow","position","Spinner","opts","spin","target","stop","el","document","createElement","setAttribute","css","transform","insertBefore","firstChild","drawLines","requestAnimationFrame","cancelAnimationFrame","animateId","clearTimeout","parentNode","removeChild","undefined","props","prop","style","getColor","idx","borderRadius","Math","round","shadows","parseBoxShadow","degrees","backgroundLine","height","background","transformOrigin","delay","line","boxShadow","normalizeShadow","appendChild","regex","_i","_a","split","matches","match","x","y","xUnits","yUnits","push","prefix","end","normalized","shadows_1","xy","convertOffset","join","radians","PI","sin","cos"],"mappings":"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","file":"1035.9fc1aea125da8dca8b00.js?v=9fc1aea125da8dca8b00","sourcesContent":["var __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nvar defaults = {\r\n    lines: 12,\r\n    length: 7,\r\n    width: 5,\r\n    radius: 10,\r\n    scale: 1.0,\r\n    corners: 1,\r\n    color: '#000',\r\n    fadeColor: 'transparent',\r\n    animation: 'spinner-line-fade-default',\r\n    rotate: 0,\r\n    direction: 1,\r\n    speed: 1,\r\n    zIndex: 2e9,\r\n    className: 'spinner',\r\n    top: '50%',\r\n    left: '50%',\r\n    shadow: '0 0 1px transparent',\r\n    position: 'absolute',\r\n};\r\nvar Spinner = /** @class */ (function () {\r\n    function Spinner(opts) {\r\n        if (opts === void 0) { opts = {}; }\r\n        this.opts = __assign(__assign({}, defaults), opts);\r\n    }\r\n    /**\r\n     * Adds the spinner to the given target element. If this instance is already\r\n     * spinning, it is automatically removed from its previous target by calling\r\n     * stop() internally.\r\n     */\r\n    Spinner.prototype.spin = function (target) {\r\n        this.stop();\r\n        this.el = document.createElement('div');\r\n        this.el.className = this.opts.className;\r\n        this.el.setAttribute('role', 'progressbar');\r\n        css(this.el, {\r\n            position: this.opts.position,\r\n            width: 0,\r\n            zIndex: this.opts.zIndex,\r\n            left: this.opts.left,\r\n            top: this.opts.top,\r\n            transform: \"scale(\" + this.opts.scale + \")\",\r\n        });\r\n        if (target) {\r\n            target.insertBefore(this.el, target.firstChild || null);\r\n        }\r\n        drawLines(this.el, this.opts);\r\n        return this;\r\n    };\r\n    /**\r\n     * Stops and removes the Spinner.\r\n     * Stopped spinners may be reused by calling spin() again.\r\n     */\r\n    Spinner.prototype.stop = function () {\r\n        if (this.el) {\r\n            if (typeof requestAnimationFrame !== 'undefined') {\r\n                cancelAnimationFrame(this.animateId);\r\n            }\r\n            else {\r\n                clearTimeout(this.animateId);\r\n            }\r\n            if (this.el.parentNode) {\r\n                this.el.parentNode.removeChild(this.el);\r\n            }\r\n            this.el = undefined;\r\n        }\r\n        return this;\r\n    };\r\n    return Spinner;\r\n}());\r\nexport { Spinner };\r\n/**\r\n * Sets multiple style properties at once.\r\n */\r\nfunction css(el, props) {\r\n    for (var prop in props) {\r\n        el.style[prop] = props[prop];\r\n    }\r\n    return el;\r\n}\r\n/**\r\n * Returns the line color from the given string or array.\r\n */\r\nfunction getColor(color, idx) {\r\n    return typeof color == 'string' ? color : color[idx % color.length];\r\n}\r\n/**\r\n * Internal method that draws the individual lines.\r\n */\r\nfunction drawLines(el, opts) {\r\n    var borderRadius = (Math.round(opts.corners * opts.width * 500) / 1000) + 'px';\r\n    var shadow = 'none';\r\n    if (opts.shadow === true) {\r\n        shadow = '0 2px 4px #000'; // default shadow\r\n    }\r\n    else if (typeof opts.shadow === 'string') {\r\n        shadow = opts.shadow;\r\n    }\r\n    var shadows = parseBoxShadow(shadow);\r\n    for (var i = 0; i < opts.lines; i++) {\r\n        var degrees = ~~(360 / opts.lines * i + opts.rotate);\r\n        var backgroundLine = css(document.createElement('div'), {\r\n            position: 'absolute',\r\n            top: -opts.width / 2 + \"px\",\r\n            width: (opts.length + opts.width) + 'px',\r\n            height: opts.width + 'px',\r\n            background: getColor(opts.fadeColor, i),\r\n            borderRadius: borderRadius,\r\n            transformOrigin: 'left',\r\n            transform: \"rotate(\" + degrees + \"deg) translateX(\" + opts.radius + \"px)\",\r\n        });\r\n        var delay = i * opts.direction / opts.lines / opts.speed;\r\n        delay -= 1 / opts.speed; // so initial animation state will include trail\r\n        var line = css(document.createElement('div'), {\r\n            width: '100%',\r\n            height: '100%',\r\n            background: getColor(opts.color, i),\r\n            borderRadius: borderRadius,\r\n            boxShadow: normalizeShadow(shadows, degrees),\r\n            animation: 1 / opts.speed + \"s linear \" + delay + \"s infinite \" + opts.animation,\r\n        });\r\n        backgroundLine.appendChild(line);\r\n        el.appendChild(backgroundLine);\r\n    }\r\n}\r\nfunction parseBoxShadow(boxShadow) {\r\n    var regex = /^\\s*([a-zA-Z]+\\s+)?(-?\\d+(\\.\\d+)?)([a-zA-Z]*)\\s+(-?\\d+(\\.\\d+)?)([a-zA-Z]*)(.*)$/;\r\n    var shadows = [];\r\n    for (var _i = 0, _a = boxShadow.split(','); _i < _a.length; _i++) {\r\n        var shadow = _a[_i];\r\n        var matches = shadow.match(regex);\r\n        if (matches === null) {\r\n            continue; // invalid syntax\r\n        }\r\n        var x = +matches[2];\r\n        var y = +matches[5];\r\n        var xUnits = matches[4];\r\n        var yUnits = matches[7];\r\n        if (x === 0 && !xUnits) {\r\n            xUnits = yUnits;\r\n        }\r\n        if (y === 0 && !yUnits) {\r\n            yUnits = xUnits;\r\n        }\r\n        if (xUnits !== yUnits) {\r\n            continue; // units must match to use as coordinates\r\n        }\r\n        shadows.push({\r\n            prefix: matches[1] || '',\r\n            x: x,\r\n            y: y,\r\n            xUnits: xUnits,\r\n            yUnits: yUnits,\r\n            end: matches[8],\r\n        });\r\n    }\r\n    return shadows;\r\n}\r\n/**\r\n * Modify box-shadow x/y offsets to counteract rotation\r\n */\r\nfunction normalizeShadow(shadows, degrees) {\r\n    var normalized = [];\r\n    for (var _i = 0, shadows_1 = shadows; _i < shadows_1.length; _i++) {\r\n        var shadow = shadows_1[_i];\r\n        var xy = convertOffset(shadow.x, shadow.y, degrees);\r\n        normalized.push(shadow.prefix + xy[0] + shadow.xUnits + ' ' + xy[1] + shadow.yUnits + shadow.end);\r\n    }\r\n    return normalized.join(', ');\r\n}\r\nfunction convertOffset(x, y, degrees) {\r\n    var radians = degrees * Math.PI / 180;\r\n    var sin = Math.sin(radians);\r\n    var cos = Math.cos(radians);\r\n    return [\r\n        Math.round((x * cos + y * sin) * 1000) / 1000,\r\n        Math.round((-x * sin + y * cos) * 1000) / 1000,\r\n    ];\r\n}\r\n"],"sourceRoot":""}